[
  {
    "msController": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "classId": "contacts.controller.ContactsController",
      "packageName": "contacts.controller",
      "className": "ContactsController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "ContactsController",
      "packageName": "contacts.controller",
      "methodId": "contacts.controller.ContactsController.home",
      "classId": "contacts.controller.ContactsController",
      "line": 29,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/contacts/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "classId": "contacts.controller.ContactsController",
      "packageName": "contacts.controller",
      "className": "ContactsController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "returnType": "HttpEntity",
      "methodName": "getAllContacts",
      "className": "ContactsController",
      "packageName": "contacts.controller",
      "methodId": "contacts.controller.ContactsController.getAllContacts",
      "classId": "contacts.controller.ContactsController",
      "line": 34,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/contacts\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "parentPackageName": "contacts.controller",
      "parentClassName": "ContactsController",
      "parentMethodName": "getAllContacts",
      "parentClassId": "contacts.controller.ContactsController",
      "lineNumber": 38,
      "calledMethodName": "getAllContacts",
      "calledServiceId": "contactsService",
      "statementDeclaration": "contactsService.getAllContacts(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "fieldClass": "ContactsService",
      "fieldVariable": "contactsService",
      "parentMethod": {
        "parentClassName": "ContactsController",
        "parentPackageName": "contacts.controller"
      },
      "line": 24
    },
    "msService": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "classId": "contacts.service.ContactsServiceImpl",
      "packageName": "contacts.service",
      "className": "ContactsServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "returnType": "Response",
      "methodName": "getAllContacts",
      "className": "ContactsServiceImpl",
      "packageName": "contacts.service",
      "methodId": "contacts.service.ContactsServiceImpl.getAllContacts",
      "classId": "contacts.service.ContactsServiceImpl",
      "line": 115,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "parentPackageName": "contacts.service",
      "parentClassName": "ContactsServiceImpl",
      "parentMethodName": "getAllContacts",
      "parentClassId": "contacts.service.ContactsServiceImpl",
      "lineNumber": 117,
      "calledMethodName": "findAll",
      "calledServiceId": "contactsRepository",
      "statementDeclaration": "contactsRepository.findAll()"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "fieldClass": "ContactsRepository",
      "fieldVariable": "contactsRepository",
      "parentMethod": {
        "parentClassName": "ContactsServiceImpl",
        "parentPackageName": "contacts.service"
      },
      "line": 22
    },
    "msRepository": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/repository/ContactsRepository.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "classId": "contacts.repository.ContactsRepository",
      "packageName": "contacts.repository",
      "className": "ContactsRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/repository/ContactsRepository.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "returnType": "ArrayList\u003cContacts\u003e",
      "methodName": "findAll",
      "className": "ContactsRepository",
      "packageName": "contacts.repository",
      "methodId": "contacts.repository.ContactsRepository.findAll",
      "classId": "contacts.repository.ContactsRepository",
      "line": 46,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "classId": "contacts.controller.ContactsController",
      "packageName": "contacts.controller",
      "className": "ContactsController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "returnType": "ResponseEntity\u003cResponse\u003e",
      "methodName": "createNewContacts",
      "className": "ContactsController",
      "packageName": "contacts.controller",
      "methodId": "contacts.controller.ContactsController.createNewContacts",
      "classId": "contacts.controller.ContactsController",
      "line": 41,
      "msArgumentList": [
        {
          "returnType": "Contacts"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "path",
          "value": "\"/contacts\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "parentPackageName": "contacts.controller",
      "parentClassName": "ContactsController",
      "parentMethodName": "createNewContacts",
      "parentClassId": "contacts.controller.ContactsController",
      "lineNumber": 46,
      "calledMethodName": "create",
      "calledServiceId": "contactsService",
      "statementDeclaration": "contactsService.create(aci, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "fieldClass": "ContactsService",
      "fieldVariable": "contactsService",
      "parentMethod": {
        "parentClassName": "ContactsController",
        "parentPackageName": "contacts.controller"
      },
      "line": 24
    },
    "msService": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "classId": "contacts.service.ContactsServiceImpl",
      "packageName": "contacts.service",
      "className": "ContactsServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "returnType": "Response",
      "methodName": "create",
      "className": "ContactsServiceImpl",
      "packageName": "contacts.service",
      "methodId": "contacts.service.ContactsServiceImpl.create",
      "classId": "contacts.service.ContactsServiceImpl",
      "line": 60,
      "msArgumentList": [
        {
          "returnType": "Contacts"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "parentPackageName": "contacts.service",
      "parentClassName": "ContactsServiceImpl",
      "parentMethodName": "create",
      "parentClassId": "contacts.service.ContactsServiceImpl",
      "lineNumber": 70,
      "calledMethodName": "findByAccountId",
      "calledServiceId": "contactsRepository",
      "statementDeclaration": "contactsRepository.findByAccountId(addContacts.getAccountId())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "fieldClass": "ContactsRepository",
      "fieldVariable": "contactsRepository",
      "parentMethod": {
        "parentClassName": "ContactsServiceImpl",
        "parentPackageName": "contacts.service"
      },
      "line": 22
    },
    "msRepository": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/repository/ContactsRepository.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "classId": "contacts.repository.ContactsRepository",
      "packageName": "contacts.repository",
      "className": "ContactsRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/repository/ContactsRepository.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "returnType": "ArrayList\u003cContacts\u003e",
      "methodName": "findByAccountId",
      "className": "ContactsRepository",
      "packageName": "contacts.repository",
      "methodId": "contacts.repository.ContactsRepository.findByAccountId",
      "classId": "contacts.repository.ContactsRepository",
      "line": 30,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "classId": "contacts.controller.ContactsController",
      "packageName": "contacts.controller",
      "className": "ContactsController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "returnType": "HttpEntity\u003c?\u003e",
      "methodName": "createNewContactsAdmin",
      "className": "ContactsController",
      "packageName": "contacts.controller",
      "methodId": "contacts.controller.ContactsController.createNewContactsAdmin",
      "classId": "contacts.controller.ContactsController",
      "line": 49,
      "msArgumentList": [
        {
          "returnType": "Contacts"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "path",
          "value": "\"/contacts/admin\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "parentPackageName": "contacts.controller",
      "parentClassName": "ContactsController",
      "parentMethodName": "createNewContactsAdmin",
      "parentClassId": "contacts.controller.ContactsController",
      "lineNumber": 54,
      "calledMethodName": "createContacts",
      "calledServiceId": "contactsService",
      "statementDeclaration": "contactsService.createContacts(aci, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "fieldClass": "ContactsService",
      "fieldVariable": "contactsService",
      "parentMethod": {
        "parentClassName": "ContactsController",
        "parentPackageName": "contacts.controller"
      },
      "line": 24
    },
    "msService": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "classId": "contacts.service.ContactsServiceImpl",
      "packageName": "contacts.service",
      "className": "ContactsServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "returnType": "Response",
      "methodName": "createContacts",
      "className": "ContactsServiceImpl",
      "packageName": "contacts.service",
      "methodId": "contacts.service.ContactsServiceImpl.createContacts",
      "classId": "contacts.service.ContactsServiceImpl",
      "line": 48,
      "msArgumentList": [
        {
          "returnType": "Contacts"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "parentPackageName": "contacts.service",
      "parentClassName": "ContactsServiceImpl",
      "parentMethodName": "createContacts",
      "parentClassId": "contacts.service.ContactsServiceImpl",
      "lineNumber": 50,
      "calledMethodName": "findById",
      "calledServiceId": "contactsRepository",
      "statementDeclaration": "contactsRepository.findById(contacts.getId())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "fieldClass": "ContactsRepository",
      "fieldVariable": "contactsRepository",
      "parentMethod": {
        "parentClassName": "ContactsServiceImpl",
        "parentPackageName": "contacts.service"
      },
      "line": 22
    },
    "msRepository": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/repository/ContactsRepository.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "classId": "contacts.repository.ContactsRepository",
      "packageName": "contacts.repository",
      "className": "ContactsRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/repository/ContactsRepository.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "returnType": "Contacts",
      "methodName": "findById",
      "className": "ContactsRepository",
      "packageName": "contacts.repository",
      "methodId": "contacts.repository.ContactsRepository.findById",
      "classId": "contacts.repository.ContactsRepository",
      "line": 22,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "classId": "contacts.controller.ContactsController",
      "packageName": "contacts.controller",
      "className": "ContactsController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "returnType": "HttpEntity",
      "methodName": "deleteContacts",
      "className": "ContactsController",
      "packageName": "contacts.controller",
      "methodId": "contacts.controller.ContactsController.deleteContacts",
      "classId": "contacts.controller.ContactsController",
      "line": 58,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "DeleteMapping",
          "key": "path",
          "value": "\"/contacts/{contactsId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "parentPackageName": "contacts.controller",
      "parentClassName": "ContactsController",
      "parentMethodName": "deleteContacts",
      "parentClassId": "contacts.controller.ContactsController",
      "lineNumber": 61,
      "calledMethodName": "delete",
      "calledServiceId": "contactsService",
      "statementDeclaration": "contactsService.delete(UUID.fromString(contactsId), headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "fieldClass": "ContactsService",
      "fieldVariable": "contactsService",
      "parentMethod": {
        "parentClassName": "ContactsController",
        "parentPackageName": "contacts.controller"
      },
      "line": 24
    },
    "msService": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "classId": "contacts.service.ContactsServiceImpl",
      "packageName": "contacts.service",
      "className": "ContactsServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "returnType": "Response",
      "methodName": "delete",
      "className": "ContactsServiceImpl",
      "packageName": "contacts.service",
      "methodId": "contacts.service.ContactsServiceImpl.delete",
      "classId": "contacts.service.ContactsServiceImpl",
      "line": 82,
      "msArgumentList": [
        {
          "returnType": "UUID"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "parentPackageName": "contacts.service",
      "parentClassName": "ContactsServiceImpl",
      "parentMethodName": "delete",
      "parentClassId": "contacts.service.ContactsServiceImpl",
      "lineNumber": 84,
      "calledMethodName": "deleteById",
      "calledServiceId": "contactsRepository",
      "statementDeclaration": "contactsRepository.deleteById(contactsId)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "fieldClass": "ContactsRepository",
      "fieldVariable": "contactsRepository",
      "parentMethod": {
        "parentClassName": "ContactsServiceImpl",
        "parentPackageName": "contacts.service"
      },
      "line": 22
    },
    "msRepository": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/repository/ContactsRepository.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "classId": "contacts.repository.ContactsRepository",
      "packageName": "contacts.repository",
      "className": "ContactsRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/repository/ContactsRepository.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "returnType": "void",
      "methodName": "deleteById",
      "className": "ContactsRepository",
      "packageName": "contacts.repository",
      "methodId": "contacts.repository.ContactsRepository.deleteById",
      "classId": "contacts.repository.ContactsRepository",
      "line": 39,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "classId": "contacts.controller.ContactsController",
      "packageName": "contacts.controller",
      "className": "ContactsController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "returnType": "HttpEntity",
      "methodName": "modifyContacts",
      "className": "ContactsController",
      "packageName": "contacts.controller",
      "methodId": "contacts.controller.ContactsController.modifyContacts",
      "classId": "contacts.controller.ContactsController",
      "line": 65,
      "msArgumentList": [
        {
          "returnType": "Contacts"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PutMapping",
          "key": "path",
          "value": "\"/contacts\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "parentPackageName": "contacts.controller",
      "parentClassName": "ContactsController",
      "parentMethodName": "modifyContacts",
      "parentClassId": "contacts.controller.ContactsController",
      "lineNumber": 69,
      "calledMethodName": "modify",
      "calledServiceId": "contactsService",
      "statementDeclaration": "contactsService.modify(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "fieldClass": "ContactsService",
      "fieldVariable": "contactsService",
      "parentMethod": {
        "parentClassName": "ContactsController",
        "parentPackageName": "contacts.controller"
      },
      "line": 24
    },
    "msService": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "classId": "contacts.service.ContactsServiceImpl",
      "packageName": "contacts.service",
      "className": "ContactsServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "returnType": "Response",
      "methodName": "modify",
      "className": "ContactsServiceImpl",
      "packageName": "contacts.service",
      "methodId": "contacts.service.ContactsServiceImpl.modify",
      "classId": "contacts.service.ContactsServiceImpl",
      "line": 95,
      "msArgumentList": [
        {
          "returnType": "Contacts"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "parentPackageName": "contacts.service",
      "parentClassName": "ContactsServiceImpl",
      "parentMethodName": "modify",
      "parentClassId": "contacts.service.ContactsServiceImpl",
      "lineNumber": 109,
      "calledMethodName": "save",
      "calledServiceId": "contactsRepository",
      "statementDeclaration": "contactsRepository.save(oldContacts)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "fieldClass": "ContactsRepository",
      "fieldVariable": "contactsRepository",
      "parentMethod": {
        "parentClassName": "ContactsServiceImpl",
        "parentPackageName": "contacts.service"
      },
      "line": 22
    },
    "msRepository": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/repository/ContactsRepository.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "classId": "contacts.repository.ContactsRepository",
      "packageName": "contacts.repository",
      "className": "ContactsRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": []
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "classId": "contacts.controller.ContactsController",
      "packageName": "contacts.controller",
      "className": "ContactsController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "returnType": "HttpEntity",
      "methodName": "findContactsByAccountId",
      "className": "ContactsController",
      "packageName": "contacts.controller",
      "methodId": "contacts.controller.ContactsController.findContactsByAccountId",
      "classId": "contacts.controller.ContactsController",
      "line": 72,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/contacts/account/{accountId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "parentPackageName": "contacts.controller",
      "parentClassName": "ContactsController",
      "parentMethodName": "findContactsByAccountId",
      "parentClassId": "contacts.controller.ContactsController",
      "lineNumber": 77,
      "calledMethodName": "findContactsByAccountId",
      "calledServiceId": "contactsService",
      "statementDeclaration": "contactsService.findContactsByAccountId(UUID.fromString(accountId), headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "fieldClass": "ContactsService",
      "fieldVariable": "contactsService",
      "parentMethod": {
        "parentClassName": "ContactsController",
        "parentPackageName": "contacts.controller"
      },
      "line": 24
    },
    "msService": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "classId": "contacts.service.ContactsServiceImpl",
      "packageName": "contacts.service",
      "className": "ContactsServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "returnType": "Response",
      "methodName": "findContactsByAccountId",
      "className": "ContactsServiceImpl",
      "packageName": "contacts.service",
      "methodId": "contacts.service.ContactsServiceImpl.findContactsByAccountId",
      "classId": "contacts.service.ContactsServiceImpl",
      "line": 41,
      "msArgumentList": [
        {
          "returnType": "UUID"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "parentPackageName": "contacts.service",
      "parentClassName": "ContactsServiceImpl",
      "parentMethodName": "findContactsByAccountId",
      "parentClassId": "contacts.service.ContactsServiceImpl",
      "lineNumber": 43,
      "calledMethodName": "findByAccountId",
      "calledServiceId": "contactsRepository",
      "statementDeclaration": "contactsRepository.findByAccountId(accountId)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "fieldClass": "ContactsRepository",
      "fieldVariable": "contactsRepository",
      "parentMethod": {
        "parentClassName": "ContactsServiceImpl",
        "parentPackageName": "contacts.service"
      },
      "line": 22
    },
    "msRepository": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/repository/ContactsRepository.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "classId": "contacts.repository.ContactsRepository",
      "packageName": "contacts.repository",
      "className": "ContactsRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/repository/ContactsRepository.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "returnType": "ArrayList\u003cContacts\u003e",
      "methodName": "findByAccountId",
      "className": "ContactsRepository",
      "packageName": "contacts.repository",
      "methodId": "contacts.repository.ContactsRepository.findByAccountId",
      "classId": "contacts.repository.ContactsRepository",
      "line": 30,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "classId": "contacts.controller.ContactsController",
      "packageName": "contacts.controller",
      "className": "ContactsController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "returnType": "HttpEntity",
      "methodName": "getContactsByContactsId",
      "className": "ContactsController",
      "packageName": "contacts.controller",
      "methodId": "contacts.controller.ContactsController.getContactsByContactsId",
      "classId": "contacts.controller.ContactsController",
      "line": 80,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/contacts/{id}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "parentPackageName": "contacts.controller",
      "parentClassName": "ContactsController",
      "parentMethodName": "getContactsByContactsId",
      "parentClassId": "contacts.controller.ContactsController",
      "lineNumber": 85,
      "calledMethodName": "findContactsById",
      "calledServiceId": "contactsService",
      "statementDeclaration": "contactsService.findContactsById(UUID.fromString(id), headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "fieldClass": "ContactsService",
      "fieldVariable": "contactsService",
      "parentMethod": {
        "parentClassName": "ContactsController",
        "parentPackageName": "contacts.controller"
      },
      "line": 24
    },
    "msService": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "classId": "contacts.service.ContactsServiceImpl",
      "packageName": "contacts.service",
      "className": "ContactsServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "returnType": "Response",
      "methodName": "findContactsById",
      "className": "ContactsServiceImpl",
      "packageName": "contacts.service",
      "methodId": "contacts.service.ContactsServiceImpl.findContactsById",
      "classId": "contacts.service.ContactsServiceImpl",
      "line": 29,
      "msArgumentList": [
        {
          "returnType": "UUID"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "parentPackageName": "contacts.service",
      "parentClassName": "ContactsServiceImpl",
      "parentMethodName": "findContactsById",
      "parentClassId": "contacts.service.ContactsServiceImpl",
      "lineNumber": 32,
      "calledMethodName": "findById",
      "calledServiceId": "contactsRepository",
      "statementDeclaration": "contactsRepository.findById(id)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "fieldClass": "ContactsRepository",
      "fieldVariable": "contactsRepository",
      "parentMethod": {
        "parentClassName": "ContactsServiceImpl",
        "parentPackageName": "contacts.service"
      },
      "line": 22
    },
    "msRepository": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/repository/ContactsRepository.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "classId": "contacts.repository.ContactsRepository",
      "packageName": "contacts.repository",
      "className": "ContactsRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-contacts-service/src/main/java/contacts/repository/ContactsRepository.java",
        "directoryName": "/ts-contacts-service/src/main/java/contacts"
      },
      "returnType": "Contacts",
      "methodName": "findById",
      "className": "ContactsRepository",
      "packageName": "contacts.repository",
      "methodId": "contacts.repository.ContactsRepository.findById",
      "classId": "contacts.repository.ContactsRepository",
      "line": 22,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-user-service/src/main/java/adminuser/controller/AdminUserController.java",
        "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
      },
      "classId": "adminuser.controller.AdminUserController",
      "packageName": "adminuser.controller",
      "className": "AdminUserController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-user-service/src/main/java/adminuser/controller/AdminUserController.java",
        "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "AdminUserController",
      "packageName": "adminuser.controller",
      "methodId": "adminuser.controller.AdminUserController.home",
      "classId": "adminuser.controller.AdminUserController",
      "line": 25,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-user-service/src/main/java/adminuser/controller/AdminUserController.java",
        "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
      },
      "classId": "adminuser.controller.AdminUserController",
      "packageName": "adminuser.controller",
      "className": "AdminUserController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-user-service/src/main/java/adminuser/controller/AdminUserController.java",
        "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
      },
      "returnType": "HttpEntity",
      "methodName": "getAllUsers",
      "className": "AdminUserController",
      "packageName": "adminuser.controller",
      "methodId": "adminuser.controller.AdminUserController.getAllUsers",
      "classId": "adminuser.controller.AdminUserController",
      "line": 30,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": false,
          "annotationName": "GetMapping"
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-user-service/src/main/java/adminuser/controller/AdminUserController.java",
        "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
      },
      "parentPackageName": "adminuser.controller",
      "parentClassName": "AdminUserController",
      "parentMethodName": "getAllUsers",
      "parentClassId": "adminuser.controller.AdminUserController",
      "lineNumber": 34,
      "calledMethodName": "getAllUsers",
      "calledServiceId": "adminUserService",
      "statementDeclaration": "adminUserService.getAllUsers(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-user-service/src/main/java/adminuser/controller/AdminUserController.java",
        "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
      },
      "fieldClass": "AdminUserService",
      "fieldVariable": "adminUserService",
      "parentMethod": {
        "parentClassName": "AdminUserController",
        "parentPackageName": "adminuser.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-user-service/src/main/java/adminuser/service/AdminUserServiceImpl.java",
        "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
      },
      "classId": "adminuser.service.AdminUserServiceImpl",
      "packageName": "adminuser.service",
      "className": "AdminUserServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-user-service/src/main/java/adminuser/service/AdminUserServiceImpl.java",
        "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
      },
      "returnType": "Response",
      "methodName": "getAllUsers",
      "className": "AdminUserServiceImpl",
      "packageName": "adminuser.service",
      "methodId": "adminuser.service.AdminUserServiceImpl.getAllUsers",
      "classId": "adminuser.service.AdminUserServiceImpl",
      "line": 32,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "httpMethod": "GET",
        "returnType": "List\u003cUser\u003e",
        "msId": {
          "path": "/ts-admin-user-service/src/main/java/adminuser/service/AdminUserServiceImpl.java",
          "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
        },
        "parentPackageName": "adminuser.service",
        "parentClassName": "AdminUserServiceImpl",
        "parentMethodName": "getAllUsers",
        "parentClassId": "adminuser.service.AdminUserServiceImpl",
        "lineNumber": 35,
        "statementDeclaration": "restTemplate.exchange(USER_SERVICE_IP_URI, HttpMethod.GET, requestEntity, new ParameterizedTypeReference\u003cResponse\u003cList\u003cUser\u003e\u003e\u003e() {\n})"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-user-service/src/main/java/adminuser/controller/AdminUserController.java",
        "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
      },
      "classId": "adminuser.controller.AdminUserController",
      "packageName": "adminuser.controller",
      "className": "AdminUserController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-user-service/src/main/java/adminuser/controller/AdminUserController.java",
        "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
      },
      "returnType": "HttpEntity",
      "methodName": "updateUser",
      "className": "AdminUserController",
      "packageName": "adminuser.controller",
      "methodId": "adminuser.controller.AdminUserController.updateUser",
      "classId": "adminuser.controller.AdminUserController",
      "line": 37,
      "msArgumentList": [
        {
          "returnType": "UserDto"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "PutMapping"
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-user-service/src/main/java/adminuser/controller/AdminUserController.java",
        "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
      },
      "parentPackageName": "adminuser.controller",
      "parentClassName": "AdminUserController",
      "parentMethodName": "updateUser",
      "parentClassId": "adminuser.controller.AdminUserController",
      "lineNumber": 40,
      "calledMethodName": "updateUser",
      "calledServiceId": "adminUserService",
      "statementDeclaration": "adminUserService.updateUser(userDto, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-user-service/src/main/java/adminuser/controller/AdminUserController.java",
        "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
      },
      "fieldClass": "AdminUserService",
      "fieldVariable": "adminUserService",
      "parentMethod": {
        "parentClassName": "AdminUserController",
        "parentPackageName": "adminuser.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-user-service/src/main/java/adminuser/service/AdminUserServiceImpl.java",
        "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
      },
      "classId": "adminuser.service.AdminUserServiceImpl",
      "packageName": "adminuser.service",
      "className": "AdminUserServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-user-service/src/main/java/adminuser/service/AdminUserServiceImpl.java",
        "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
      },
      "returnType": "Response",
      "methodName": "updateUser",
      "className": "AdminUserServiceImpl",
      "packageName": "adminuser.service",
      "methodId": "adminuser.service.AdminUserServiceImpl.updateUser",
      "classId": "adminuser.service.AdminUserServiceImpl",
      "line": 66,
      "msArgumentList": [
        {
          "returnType": "UserDto"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "httpMethod": "PUT",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-user-service/src/main/java/adminuser/service/AdminUserServiceImpl.java",
          "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
        },
        "parentPackageName": "adminuser.service",
        "parentClassName": "AdminUserServiceImpl",
        "parentMethodName": "updateUser",
        "parentClassId": "adminuser.service.AdminUserServiceImpl",
        "lineNumber": 70,
        "statementDeclaration": "restTemplate.exchange(USER_SERVICE_IP_URI, HttpMethod.PUT, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-user-service/src/main/java/adminuser/controller/AdminUserController.java",
        "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
      },
      "classId": "adminuser.controller.AdminUserController",
      "packageName": "adminuser.controller",
      "className": "AdminUserController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-user-service/src/main/java/adminuser/controller/AdminUserController.java",
        "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
      },
      "returnType": "HttpEntity",
      "methodName": "addUser",
      "className": "AdminUserController",
      "packageName": "adminuser.controller",
      "methodId": "adminuser.controller.AdminUserController.addUser",
      "classId": "adminuser.controller.AdminUserController",
      "line": 44,
      "msArgumentList": [
        {
          "returnType": "UserDto"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "PostMapping"
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-user-service/src/main/java/adminuser/controller/AdminUserController.java",
        "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
      },
      "parentPackageName": "adminuser.controller",
      "parentClassName": "AdminUserController",
      "parentMethodName": "addUser",
      "parentClassId": "adminuser.controller.AdminUserController",
      "lineNumber": 47,
      "calledMethodName": "addUser",
      "calledServiceId": "adminUserService",
      "statementDeclaration": "adminUserService.addUser(userDto, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-user-service/src/main/java/adminuser/controller/AdminUserController.java",
        "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
      },
      "fieldClass": "AdminUserService",
      "fieldVariable": "adminUserService",
      "parentMethod": {
        "parentClassName": "AdminUserController",
        "parentPackageName": "adminuser.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-user-service/src/main/java/adminuser/service/AdminUserServiceImpl.java",
        "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
      },
      "classId": "adminuser.service.AdminUserServiceImpl",
      "packageName": "adminuser.service",
      "className": "AdminUserServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-user-service/src/main/java/adminuser/service/AdminUserServiceImpl.java",
        "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
      },
      "returnType": "Response",
      "methodName": "addUser",
      "className": "AdminUserServiceImpl",
      "packageName": "adminuser.service",
      "methodId": "adminuser.service.AdminUserServiceImpl.addUser",
      "classId": "adminuser.service.AdminUserServiceImpl",
      "line": 85,
      "msArgumentList": [
        {
          "returnType": "UserDto"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "api": "USER_SERVICE_IP_URI + \"/register\"",
        "httpMethod": "POST",
        "returnType": "User",
        "msId": {
          "path": "/ts-admin-user-service/src/main/java/adminuser/service/AdminUserServiceImpl.java",
          "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
        },
        "parentPackageName": "adminuser.service",
        "parentClassName": "AdminUserServiceImpl",
        "parentMethodName": "addUser",
        "parentClassId": "adminuser.service.AdminUserServiceImpl",
        "lineNumber": 89,
        "statementDeclaration": "restTemplate.exchange(USER_SERVICE_IP_URI + \"/register\", HttpMethod.POST, requestEntity, new ParameterizedTypeReference\u003cResponse\u003cUser\u003e\u003e() {\n})"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-user-service/src/main/java/adminuser/controller/AdminUserController.java",
        "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
      },
      "classId": "adminuser.controller.AdminUserController",
      "packageName": "adminuser.controller",
      "className": "AdminUserController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-user-service/src/main/java/adminuser/controller/AdminUserController.java",
        "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
      },
      "returnType": "HttpEntity",
      "methodName": "deleteUser",
      "className": "AdminUserController",
      "packageName": "adminuser.controller",
      "methodId": "adminuser.controller.AdminUserController.deleteUser",
      "classId": "adminuser.controller.AdminUserController",
      "line": 50,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "DeleteMapping",
          "key": "value",
          "value": "\"/{userId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-user-service/src/main/java/adminuser/controller/AdminUserController.java",
        "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
      },
      "parentPackageName": "adminuser.controller",
      "parentClassName": "AdminUserController",
      "parentMethodName": "deleteUser",
      "parentClassId": "adminuser.controller.AdminUserController",
      "lineNumber": 53,
      "calledMethodName": "deleteUser",
      "calledServiceId": "adminUserService",
      "statementDeclaration": "adminUserService.deleteUser(userId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-user-service/src/main/java/adminuser/controller/AdminUserController.java",
        "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
      },
      "fieldClass": "AdminUserService",
      "fieldVariable": "adminUserService",
      "parentMethod": {
        "parentClassName": "AdminUserController",
        "parentPackageName": "adminuser.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-user-service/src/main/java/adminuser/service/AdminUserServiceImpl.java",
        "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
      },
      "classId": "adminuser.service.AdminUserServiceImpl",
      "packageName": "adminuser.service",
      "className": "AdminUserServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-user-service/src/main/java/adminuser/service/AdminUserServiceImpl.java",
        "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
      },
      "returnType": "Response",
      "methodName": "deleteUser",
      "className": "AdminUserServiceImpl",
      "packageName": "adminuser.service",
      "methodId": "adminuser.service.AdminUserServiceImpl.deleteUser",
      "classId": "adminuser.service.AdminUserServiceImpl",
      "line": 50,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "api": "USER_SERVICE_IP_URI + \"/\" + userId",
        "httpMethod": "DELETE",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-user-service/src/main/java/adminuser/service/AdminUserServiceImpl.java",
          "directoryName": "/ts-admin-user-service/src/main/java/adminuser"
        },
        "parentPackageName": "adminuser.service",
        "parentClassName": "AdminUserServiceImpl",
        "parentMethodName": "deleteUser",
        "parentClassId": "adminuser.service.AdminUserServiceImpl",
        "lineNumber": 53,
        "statementDeclaration": "restTemplate.exchange(USER_SERVICE_IP_URI + \"/\" + userId, HttpMethod.DELETE, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/controller/TrainFoodController.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "classId": "food.controller.TrainFoodController",
      "packageName": "food.controller",
      "className": "TrainFoodController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/controller/TrainFoodController.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "TrainFoodController",
      "packageName": "food.controller",
      "methodId": "food.controller.TrainFoodController.home",
      "classId": "food.controller.TrainFoodController",
      "line": 22,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/trainfoods/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/controller/TrainFoodController.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "classId": "food.controller.TrainFoodController",
      "packageName": "food.controller",
      "className": "TrainFoodController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/controller/TrainFoodController.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "returnType": "HttpEntity",
      "methodName": "getAllTrainFood",
      "className": "TrainFoodController",
      "packageName": "food.controller",
      "methodId": "food.controller.TrainFoodController.getAllTrainFood",
      "classId": "food.controller.TrainFoodController",
      "line": 27,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": false,
          "annotationName": "GetMapping"
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/controller/TrainFoodController.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "parentPackageName": "food.controller",
      "parentClassName": "TrainFoodController",
      "parentMethodName": "getAllTrainFood",
      "parentClassId": "food.controller.TrainFoodController",
      "lineNumber": 31,
      "calledMethodName": "listTrainFood",
      "calledServiceId": "foodMapService",
      "statementDeclaration": "foodMapService.listTrainFood(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/controller/TrainFoodController.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "fieldClass": "FoodMapService",
      "fieldVariable": "foodMapService",
      "parentMethod": {
        "parentClassName": "TrainFoodController",
        "parentPackageName": "food.controller"
      },
      "line": 17
    },
    "msService": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/service/FoodMapServiceImpl.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "classId": "food.service.FoodMapServiceImpl",
      "packageName": "food.service",
      "className": "FoodMapServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/service/FoodMapServiceImpl.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "returnType": "Response",
      "methodName": "listTrainFood",
      "className": "FoodMapServiceImpl",
      "packageName": "food.service",
      "methodId": "food.service.FoodMapServiceImpl.listTrainFood",
      "classId": "food.service.FoodMapServiceImpl",
      "line": 65,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/service/FoodMapServiceImpl.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "parentPackageName": "food.service",
      "parentClassName": "FoodMapServiceImpl",
      "parentMethodName": "listTrainFood",
      "parentClassId": "food.service.FoodMapServiceImpl",
      "lineNumber": 67,
      "calledMethodName": "findAll",
      "calledServiceId": "trainFoodRepository",
      "statementDeclaration": "trainFoodRepository.findAll()"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/service/FoodMapServiceImpl.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "fieldClass": "TrainFoodRepository",
      "fieldVariable": "trainFoodRepository",
      "parentMethod": {
        "parentClassName": "FoodMapServiceImpl",
        "parentPackageName": "food.service"
      },
      "line": 23
    },
    "msRepository": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/repository/TrainFoodRepository.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "classId": "food.repository.TrainFoodRepository",
      "packageName": "food.repository",
      "className": "TrainFoodRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/repository/TrainFoodRepository.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "returnType": "List\u003cTrainFood\u003e",
      "methodName": "findAll",
      "className": "TrainFoodRepository",
      "packageName": "food.repository",
      "methodId": "food.repository.TrainFoodRepository.findAll",
      "classId": "food.repository.TrainFoodRepository",
      "line": 17,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/controller/TrainFoodController.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "classId": "food.controller.TrainFoodController",
      "packageName": "food.controller",
      "className": "TrainFoodController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/controller/TrainFoodController.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "returnType": "HttpEntity",
      "methodName": "getTrainFoodOfTrip",
      "className": "TrainFoodController",
      "packageName": "food.controller",
      "methodId": "food.controller.TrainFoodController.getTrainFoodOfTrip",
      "classId": "food.controller.TrainFoodController",
      "line": 34,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": false,
          "annotationName": "GetMapping"
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/controller/TrainFoodController.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "parentPackageName": "food.controller",
      "parentClassName": "TrainFoodController",
      "parentMethodName": "getTrainFoodOfTrip",
      "parentClassId": "food.controller.TrainFoodController",
      "lineNumber": 38,
      "calledMethodName": "listTrainFoodByTripId",
      "calledServiceId": "foodMapService",
      "statementDeclaration": "foodMapService.listTrainFoodByTripId(tripId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/controller/TrainFoodController.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "fieldClass": "FoodMapService",
      "fieldVariable": "foodMapService",
      "parentMethod": {
        "parentClassName": "TrainFoodController",
        "parentPackageName": "food.controller"
      },
      "line": 17
    },
    "msService": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/service/FoodMapServiceImpl.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "classId": "food.service.FoodMapServiceImpl",
      "packageName": "food.service",
      "className": "FoodMapServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/service/FoodMapServiceImpl.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "returnType": "Response",
      "methodName": "listTrainFoodByTripId",
      "className": "FoodMapServiceImpl",
      "packageName": "food.service",
      "methodId": "food.service.FoodMapServiceImpl.listTrainFoodByTripId",
      "classId": "food.service.FoodMapServiceImpl",
      "line": 87,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/service/FoodMapServiceImpl.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "parentPackageName": "food.service",
      "parentClassName": "FoodMapServiceImpl",
      "parentMethodName": "listTrainFoodByTripId",
      "parentClassId": "food.service.FoodMapServiceImpl",
      "lineNumber": 89,
      "calledMethodName": "findByTripId",
      "calledServiceId": "trainFoodRepository",
      "statementDeclaration": "trainFoodRepository.findByTripId(tripId)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/service/FoodMapServiceImpl.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "fieldClass": "TrainFoodRepository",
      "fieldVariable": "trainFoodRepository",
      "parentMethod": {
        "parentClassName": "FoodMapServiceImpl",
        "parentPackageName": "food.service"
      },
      "line": 23
    },
    "msRepository": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/repository/TrainFoodRepository.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "classId": "food.repository.TrainFoodRepository",
      "packageName": "food.repository",
      "className": "TrainFoodRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/repository/TrainFoodRepository.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "returnType": "List\u003cTrainFood\u003e",
      "methodName": "findByTripId",
      "className": "TrainFoodRepository",
      "packageName": "food.repository",
      "methodId": "food.repository.TrainFoodRepository.findByTripId",
      "classId": "food.repository.TrainFoodRepository",
      "line": 20,
      "msArgumentList": [
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/controller/FoodStoreController.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "classId": "food.controller.FoodStoreController",
      "packageName": "food.controller",
      "className": "FoodStoreController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/controller/FoodStoreController.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "FoodStoreController",
      "packageName": "food.controller",
      "methodId": "food.controller.FoodStoreController.home",
      "classId": "food.controller.FoodStoreController",
      "line": 24,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/foodstores/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/controller/FoodStoreController.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "classId": "food.controller.FoodStoreController",
      "packageName": "food.controller",
      "className": "FoodStoreController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/controller/FoodStoreController.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "returnType": "HttpEntity",
      "methodName": "getAllFoodStores",
      "className": "FoodStoreController",
      "packageName": "food.controller",
      "methodId": "food.controller.FoodStoreController.getAllFoodStores",
      "classId": "food.controller.FoodStoreController",
      "line": 29,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": false,
          "annotationName": "GetMapping"
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/controller/FoodStoreController.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "parentPackageName": "food.controller",
      "parentClassName": "FoodStoreController",
      "parentMethodName": "getAllFoodStores",
      "parentClassId": "food.controller.FoodStoreController",
      "lineNumber": 33,
      "calledMethodName": "listFoodStores",
      "calledServiceId": "foodMapService",
      "statementDeclaration": "foodMapService.listFoodStores(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/controller/FoodStoreController.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "fieldClass": "FoodMapService",
      "fieldVariable": "foodMapService",
      "parentMethod": {
        "parentClassName": "FoodStoreController",
        "parentPackageName": "food.controller"
      },
      "line": 19
    },
    "msService": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/service/FoodMapServiceImpl.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "classId": "food.service.FoodMapServiceImpl",
      "packageName": "food.service",
      "className": "FoodMapServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/service/FoodMapServiceImpl.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "returnType": "Response",
      "methodName": "listFoodStores",
      "className": "FoodMapServiceImpl",
      "packageName": "food.service",
      "methodId": "food.service.FoodMapServiceImpl.listFoodStores",
      "classId": "food.service.FoodMapServiceImpl",
      "line": 54,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/service/FoodMapServiceImpl.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "parentPackageName": "food.service",
      "parentClassName": "FoodMapServiceImpl",
      "parentMethodName": "listFoodStores",
      "parentClassId": "food.service.FoodMapServiceImpl",
      "lineNumber": 56,
      "calledMethodName": "findAll",
      "calledServiceId": "foodStoreRepository",
      "statementDeclaration": "foodStoreRepository.findAll()"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/service/FoodMapServiceImpl.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "fieldClass": "FoodStoreRepository",
      "fieldVariable": "foodStoreRepository",
      "parentMethod": {
        "parentClassName": "FoodMapServiceImpl",
        "parentPackageName": "food.service"
      },
      "line": 20
    },
    "msRepository": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/repository/FoodStoreRepository.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "classId": "food.repository.FoodStoreRepository",
      "packageName": "food.repository",
      "className": "FoodStoreRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/repository/FoodStoreRepository.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "returnType": "List\u003cFoodStore\u003e",
      "methodName": "findAll",
      "className": "FoodStoreRepository",
      "packageName": "food.repository",
      "methodId": "food.repository.FoodStoreRepository.findAll",
      "classId": "food.repository.FoodStoreRepository",
      "line": 21,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/controller/FoodStoreController.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "classId": "food.controller.FoodStoreController",
      "packageName": "food.controller",
      "className": "FoodStoreController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/controller/FoodStoreController.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "returnType": "HttpEntity",
      "methodName": "getFoodStoresOfStation",
      "className": "FoodStoreController",
      "packageName": "food.controller",
      "methodId": "food.controller.FoodStoreController.getFoodStoresOfStation",
      "classId": "food.controller.FoodStoreController",
      "line": 36,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": false,
          "annotationName": "GetMapping"
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/controller/FoodStoreController.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "parentPackageName": "food.controller",
      "parentClassName": "FoodStoreController",
      "parentMethodName": "getFoodStoresOfStation",
      "parentClassId": "food.controller.FoodStoreController",
      "lineNumber": 40,
      "calledMethodName": "listFoodStoresByStationId",
      "calledServiceId": "foodMapService",
      "statementDeclaration": "foodMapService.listFoodStoresByStationId(stationId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/controller/FoodStoreController.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "fieldClass": "FoodMapService",
      "fieldVariable": "foodMapService",
      "parentMethod": {
        "parentClassName": "FoodStoreController",
        "parentPackageName": "food.controller"
      },
      "line": 19
    },
    "msService": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/service/FoodMapServiceImpl.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "classId": "food.service.FoodMapServiceImpl",
      "packageName": "food.service",
      "className": "FoodMapServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/service/FoodMapServiceImpl.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "returnType": "Response",
      "methodName": "listFoodStoresByStationId",
      "className": "FoodMapServiceImpl",
      "packageName": "food.service",
      "methodId": "food.service.FoodMapServiceImpl.listFoodStoresByStationId",
      "classId": "food.service.FoodMapServiceImpl",
      "line": 76,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/service/FoodMapServiceImpl.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "parentPackageName": "food.service",
      "parentClassName": "FoodMapServiceImpl",
      "parentMethodName": "listFoodStoresByStationId",
      "parentClassId": "food.service.FoodMapServiceImpl",
      "lineNumber": 78,
      "calledMethodName": "findByStationId",
      "calledServiceId": "foodStoreRepository",
      "statementDeclaration": "foodStoreRepository.findByStationId(stationId)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/service/FoodMapServiceImpl.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "fieldClass": "FoodStoreRepository",
      "fieldVariable": "foodStoreRepository",
      "parentMethod": {
        "parentClassName": "FoodMapServiceImpl",
        "parentPackageName": "food.service"
      },
      "line": 20
    },
    "msRepository": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/repository/FoodStoreRepository.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "classId": "food.repository.FoodStoreRepository",
      "packageName": "food.repository",
      "className": "FoodStoreRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/repository/FoodStoreRepository.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "returnType": "List\u003cFoodStore\u003e",
      "methodName": "findByStationId",
      "className": "FoodStoreRepository",
      "packageName": "food.repository",
      "methodId": "food.repository.FoodStoreRepository.findByStationId",
      "classId": "food.repository.FoodStoreRepository",
      "line": 16,
      "msArgumentList": [
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/controller/FoodStoreController.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "classId": "food.controller.FoodStoreController",
      "packageName": "food.controller",
      "className": "FoodStoreController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/controller/FoodStoreController.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "returnType": "HttpEntity",
      "methodName": "getFoodStoresByStationIds",
      "className": "FoodStoreController",
      "packageName": "food.controller",
      "methodId": "food.controller.FoodStoreController.getFoodStoresByStationIds",
      "classId": "food.controller.FoodStoreController",
      "line": 43,
      "msArgumentList": [
        {
          "returnType": "List\u003cString\u003e"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": false,
          "annotationName": "PostMapping"
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/controller/FoodStoreController.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "parentPackageName": "food.controller",
      "parentClassName": "FoodStoreController",
      "parentMethodName": "getFoodStoresByStationIds",
      "parentClassId": "food.controller.FoodStoreController",
      "lineNumber": 47,
      "calledMethodName": "getFoodStoresByStationIds",
      "calledServiceId": "foodMapService",
      "statementDeclaration": "foodMapService.getFoodStoresByStationIds(stationIdList)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/controller/FoodStoreController.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "fieldClass": "FoodMapService",
      "fieldVariable": "foodMapService",
      "parentMethod": {
        "parentClassName": "FoodStoreController",
        "parentPackageName": "food.controller"
      },
      "line": 19
    },
    "msService": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/service/FoodMapServiceImpl.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "classId": "food.service.FoodMapServiceImpl",
      "packageName": "food.service",
      "className": "FoodMapServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/service/FoodMapServiceImpl.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "returnType": "Response",
      "methodName": "getFoodStoresByStationIds",
      "className": "FoodMapServiceImpl",
      "packageName": "food.service",
      "methodId": "food.service.FoodMapServiceImpl.getFoodStoresByStationIds",
      "classId": "food.service.FoodMapServiceImpl",
      "line": 98,
      "msArgumentList": [
        {
          "returnType": "List\u003cString\u003e"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/service/FoodMapServiceImpl.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "parentPackageName": "food.service",
      "parentClassName": "FoodMapServiceImpl",
      "parentMethodName": "getFoodStoresByStationIds",
      "parentClassId": "food.service.FoodMapServiceImpl",
      "lineNumber": 100,
      "calledMethodName": "findByStationIdIn",
      "calledServiceId": "foodStoreRepository",
      "statementDeclaration": "foodStoreRepository.findByStationIdIn(stationIds)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/service/FoodMapServiceImpl.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "fieldClass": "FoodStoreRepository",
      "fieldVariable": "foodStoreRepository",
      "parentMethod": {
        "parentClassName": "FoodMapServiceImpl",
        "parentPackageName": "food.service"
      },
      "line": 20
    },
    "msRepository": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/repository/FoodStoreRepository.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "classId": "food.repository.FoodStoreRepository",
      "packageName": "food.repository",
      "className": "FoodStoreRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-food-map-service/src/main/java/food/repository/FoodStoreRepository.java",
        "directoryName": "/ts-food-map-service/src/main/java/food"
      },
      "returnType": "List\u003cFoodStore\u003e",
      "methodName": "findByStationIdIn",
      "className": "FoodStoreRepository",
      "packageName": "food.repository",
      "methodId": "food.repository.FoodStoreRepository.findByStationIdIn",
      "classId": "food.repository.FoodStoreRepository",
      "line": 18,
      "msArgumentList": [
        {
          "returnType": "List\u003cString\u003e"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/controller/NotificationController.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "classId": "notification.controller.NotificationController",
      "packageName": "notification.controller",
      "className": "NotificationController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/controller/NotificationController.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "NotificationController",
      "packageName": "notification.controller",
      "methodId": "notification.controller.NotificationController.home",
      "classId": "notification.controller.NotificationController",
      "line": 28,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/controller/NotificationController.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "classId": "notification.controller.NotificationController",
      "packageName": "notification.controller",
      "className": "NotificationController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/controller/NotificationController.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "returnType": "boolean",
      "methodName": "test_send",
      "className": "NotificationController",
      "packageName": "notification.controller",
      "methodId": "notification.controller.NotificationController.test_send",
      "classId": "notification.controller.NotificationController",
      "line": 33,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "GetMapping"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/controller/NotificationController.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "classId": "notification.controller.NotificationController",
      "packageName": "notification.controller",
      "className": "NotificationController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/controller/NotificationController.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "returnType": "boolean",
      "methodName": "test_send_mail",
      "className": "NotificationController",
      "packageName": "notification.controller",
      "methodId": "notification.controller.NotificationController.test_send_mail",
      "classId": "notification.controller.NotificationController",
      "line": 39,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "GetMapping"
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/controller/NotificationController.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "parentPackageName": "notification.controller",
      "parentClassName": "NotificationController",
      "parentMethodName": "test_send_mail",
      "parentClassId": "notification.controller.NotificationController",
      "lineNumber": 53,
      "calledMethodName": "preserveSuccess",
      "calledServiceId": "service",
      "statementDeclaration": "service.preserveSuccess(notifyInfo, null)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/controller/NotificationController.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "fieldClass": "NotificationService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "NotificationController",
        "parentPackageName": "notification.controller"
      },
      "line": 19
    },
    "msService": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/NotificationServiceImpl.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "classId": "notification.service.NotificationServiceImpl",
      "packageName": "notification.service",
      "className": "NotificationServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/NotificationServiceImpl.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "returnType": "boolean",
      "methodName": "preserveSuccess",
      "className": "NotificationServiceImpl",
      "packageName": "notification.service",
      "methodId": "notification.service.NotificationServiceImpl.preserveSuccess",
      "classId": "notification.service.NotificationServiceImpl",
      "line": 36,
      "msArgumentList": [
        {
          "returnType": "NotifyInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/NotificationServiceImpl.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "parentPackageName": "notification.service",
      "parentClassName": "NotificationServiceImpl",
      "parentMethodName": "preserveSuccess",
      "parentClassId": "notification.service.NotificationServiceImpl",
      "lineNumber": 55,
      "calledMethodName": "sendEmail",
      "calledServiceId": "mailService",
      "statementDeclaration": "mailService.sendEmail(mail, \"preserve_success.ftl\")"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/NotificationServiceImpl.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "fieldClass": "MailService",
      "fieldVariable": "mailService",
      "parentMethod": {
        "parentClassName": "NotificationServiceImpl",
        "parentPackageName": "notification.service"
      },
      "line": 23
    },
    "msRepository": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/MailService.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "classId": "notification.service.MailService",
      "packageName": "notification.service",
      "className": "MailService",
      "role": "SERVICE"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/MailService.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "returnType": "void",
      "methodName": "sendEmail",
      "className": "MailService",
      "packageName": "notification.service",
      "methodId": "notification.service.MailService.sendEmail",
      "classId": "notification.service.MailService",
      "line": 30,
      "msArgumentList": [
        {
          "returnType": "Mail"
        },
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/controller/NotificationController.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "classId": "notification.controller.NotificationController",
      "packageName": "notification.controller",
      "className": "NotificationController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/controller/NotificationController.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "returnType": "boolean",
      "methodName": "preserve_success",
      "className": "NotificationController",
      "packageName": "notification.controller",
      "methodId": "notification.controller.NotificationController.preserve_success",
      "classId": "notification.controller.NotificationController",
      "line": 57,
      "msArgumentList": [
        {
          "returnType": "NotifyInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/notification/preserve_success\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/controller/NotificationController.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "parentPackageName": "notification.controller",
      "parentClassName": "NotificationController",
      "parentMethodName": "preserve_success",
      "parentClassId": "notification.controller.NotificationController",
      "lineNumber": 59,
      "calledMethodName": "preserveSuccess",
      "calledServiceId": "service",
      "statementDeclaration": "service.preserveSuccess(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/controller/NotificationController.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "fieldClass": "NotificationService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "NotificationController",
        "parentPackageName": "notification.controller"
      },
      "line": 19
    },
    "msService": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/NotificationServiceImpl.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "classId": "notification.service.NotificationServiceImpl",
      "packageName": "notification.service",
      "className": "NotificationServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/NotificationServiceImpl.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "returnType": "boolean",
      "methodName": "preserveSuccess",
      "className": "NotificationServiceImpl",
      "packageName": "notification.service",
      "methodId": "notification.service.NotificationServiceImpl.preserveSuccess",
      "classId": "notification.service.NotificationServiceImpl",
      "line": 36,
      "msArgumentList": [
        {
          "returnType": "NotifyInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/NotificationServiceImpl.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "parentPackageName": "notification.service",
      "parentClassName": "NotificationServiceImpl",
      "parentMethodName": "preserveSuccess",
      "parentClassId": "notification.service.NotificationServiceImpl",
      "lineNumber": 55,
      "calledMethodName": "sendEmail",
      "calledServiceId": "mailService",
      "statementDeclaration": "mailService.sendEmail(mail, \"preserve_success.ftl\")"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/NotificationServiceImpl.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "fieldClass": "MailService",
      "fieldVariable": "mailService",
      "parentMethod": {
        "parentClassName": "NotificationServiceImpl",
        "parentPackageName": "notification.service"
      },
      "line": 23
    },
    "msRepository": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/MailService.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "classId": "notification.service.MailService",
      "packageName": "notification.service",
      "className": "MailService",
      "role": "SERVICE"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/MailService.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "returnType": "void",
      "methodName": "sendEmail",
      "className": "MailService",
      "packageName": "notification.service",
      "methodId": "notification.service.MailService.sendEmail",
      "classId": "notification.service.MailService",
      "line": 30,
      "msArgumentList": [
        {
          "returnType": "Mail"
        },
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/controller/NotificationController.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "classId": "notification.controller.NotificationController",
      "packageName": "notification.controller",
      "className": "NotificationController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/controller/NotificationController.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "returnType": "boolean",
      "methodName": "order_create_success",
      "className": "NotificationController",
      "packageName": "notification.controller",
      "methodId": "notification.controller.NotificationController.order_create_success",
      "classId": "notification.controller.NotificationController",
      "line": 62,
      "msArgumentList": [
        {
          "returnType": "NotifyInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/notification/order_create_success\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/controller/NotificationController.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "parentPackageName": "notification.controller",
      "parentClassName": "NotificationController",
      "parentMethodName": "order_create_success",
      "parentClassId": "notification.controller.NotificationController",
      "lineNumber": 64,
      "calledMethodName": "orderCreateSuccess",
      "calledServiceId": "service",
      "statementDeclaration": "service.orderCreateSuccess(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/controller/NotificationController.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "fieldClass": "NotificationService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "NotificationController",
        "parentPackageName": "notification.controller"
      },
      "line": 19
    },
    "msService": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/NotificationServiceImpl.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "classId": "notification.service.NotificationServiceImpl",
      "packageName": "notification.service",
      "className": "NotificationServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/NotificationServiceImpl.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "returnType": "boolean",
      "methodName": "orderCreateSuccess",
      "className": "NotificationServiceImpl",
      "packageName": "notification.service",
      "methodId": "notification.service.NotificationServiceImpl.orderCreateSuccess",
      "classId": "notification.service.NotificationServiceImpl",
      "line": 63,
      "msArgumentList": [
        {
          "returnType": "NotifyInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/NotificationServiceImpl.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "parentPackageName": "notification.service",
      "parentClassName": "NotificationServiceImpl",
      "parentMethodName": "orderCreateSuccess",
      "parentClassId": "notification.service.NotificationServiceImpl",
      "lineNumber": 82,
      "calledMethodName": "sendEmail",
      "calledServiceId": "mailService",
      "statementDeclaration": "mailService.sendEmail(mail, \"order_create_success.ftl\")"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/NotificationServiceImpl.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "fieldClass": "MailService",
      "fieldVariable": "mailService",
      "parentMethod": {
        "parentClassName": "NotificationServiceImpl",
        "parentPackageName": "notification.service"
      },
      "line": 23
    },
    "msRepository": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/MailService.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "classId": "notification.service.MailService",
      "packageName": "notification.service",
      "className": "MailService",
      "role": "SERVICE"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/MailService.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "returnType": "void",
      "methodName": "sendEmail",
      "className": "MailService",
      "packageName": "notification.service",
      "methodId": "notification.service.MailService.sendEmail",
      "classId": "notification.service.MailService",
      "line": 30,
      "msArgumentList": [
        {
          "returnType": "Mail"
        },
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/controller/NotificationController.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "classId": "notification.controller.NotificationController",
      "packageName": "notification.controller",
      "className": "NotificationController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/controller/NotificationController.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "returnType": "boolean",
      "methodName": "order_changed_success",
      "className": "NotificationController",
      "packageName": "notification.controller",
      "methodId": "notification.controller.NotificationController.order_changed_success",
      "classId": "notification.controller.NotificationController",
      "line": 67,
      "msArgumentList": [
        {
          "returnType": "NotifyInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/notification/order_changed_success\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/controller/NotificationController.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "parentPackageName": "notification.controller",
      "parentClassName": "NotificationController",
      "parentMethodName": "order_changed_success",
      "parentClassId": "notification.controller.NotificationController",
      "lineNumber": 69,
      "calledMethodName": "orderChangedSuccess",
      "calledServiceId": "service",
      "statementDeclaration": "service.orderChangedSuccess(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/controller/NotificationController.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "fieldClass": "NotificationService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "NotificationController",
        "parentPackageName": "notification.controller"
      },
      "line": 19
    },
    "msService": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/NotificationServiceImpl.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "classId": "notification.service.NotificationServiceImpl",
      "packageName": "notification.service",
      "className": "NotificationServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/NotificationServiceImpl.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "returnType": "boolean",
      "methodName": "orderChangedSuccess",
      "className": "NotificationServiceImpl",
      "packageName": "notification.service",
      "methodId": "notification.service.NotificationServiceImpl.orderChangedSuccess",
      "classId": "notification.service.NotificationServiceImpl",
      "line": 90,
      "msArgumentList": [
        {
          "returnType": "NotifyInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/NotificationServiceImpl.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "parentPackageName": "notification.service",
      "parentClassName": "NotificationServiceImpl",
      "parentMethodName": "orderChangedSuccess",
      "parentClassId": "notification.service.NotificationServiceImpl",
      "lineNumber": 109,
      "calledMethodName": "sendEmail",
      "calledServiceId": "mailService",
      "statementDeclaration": "mailService.sendEmail(mail, \"order_changed_success.ftl\")"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/NotificationServiceImpl.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "fieldClass": "MailService",
      "fieldVariable": "mailService",
      "parentMethod": {
        "parentClassName": "NotificationServiceImpl",
        "parentPackageName": "notification.service"
      },
      "line": 23
    },
    "msRepository": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/MailService.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "classId": "notification.service.MailService",
      "packageName": "notification.service",
      "className": "MailService",
      "role": "SERVICE"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/MailService.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "returnType": "void",
      "methodName": "sendEmail",
      "className": "MailService",
      "packageName": "notification.service",
      "methodId": "notification.service.MailService.sendEmail",
      "classId": "notification.service.MailService",
      "line": 30,
      "msArgumentList": [
        {
          "returnType": "Mail"
        },
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/controller/NotificationController.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "classId": "notification.controller.NotificationController",
      "packageName": "notification.controller",
      "className": "NotificationController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/controller/NotificationController.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "returnType": "boolean",
      "methodName": "order_cancel_success",
      "className": "NotificationController",
      "packageName": "notification.controller",
      "methodId": "notification.controller.NotificationController.order_cancel_success",
      "classId": "notification.controller.NotificationController",
      "line": 72,
      "msArgumentList": [
        {
          "returnType": "NotifyInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/notification/order_cancel_success\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/controller/NotificationController.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "parentPackageName": "notification.controller",
      "parentClassName": "NotificationController",
      "parentMethodName": "order_cancel_success",
      "parentClassId": "notification.controller.NotificationController",
      "lineNumber": 74,
      "calledMethodName": "orderCancelSuccess",
      "calledServiceId": "service",
      "statementDeclaration": "service.orderCancelSuccess(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/controller/NotificationController.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "fieldClass": "NotificationService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "NotificationController",
        "parentPackageName": "notification.controller"
      },
      "line": 19
    },
    "msService": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/NotificationServiceImpl.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "classId": "notification.service.NotificationServiceImpl",
      "packageName": "notification.service",
      "className": "NotificationServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/NotificationServiceImpl.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "returnType": "boolean",
      "methodName": "orderCancelSuccess",
      "className": "NotificationServiceImpl",
      "packageName": "notification.service",
      "methodId": "notification.service.NotificationServiceImpl.orderCancelSuccess",
      "classId": "notification.service.NotificationServiceImpl",
      "line": 117,
      "msArgumentList": [
        {
          "returnType": "NotifyInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/NotificationServiceImpl.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "parentPackageName": "notification.service",
      "parentClassName": "NotificationServiceImpl",
      "parentMethodName": "orderCancelSuccess",
      "parentClassId": "notification.service.NotificationServiceImpl",
      "lineNumber": 130,
      "calledMethodName": "sendEmail",
      "calledServiceId": "mailService",
      "statementDeclaration": "mailService.sendEmail(mail, \"order_cancel_success.ftl\")"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/NotificationServiceImpl.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "fieldClass": "MailService",
      "fieldVariable": "mailService",
      "parentMethod": {
        "parentClassName": "NotificationServiceImpl",
        "parentPackageName": "notification.service"
      },
      "line": 23
    },
    "msRepository": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/MailService.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "classId": "notification.service.MailService",
      "packageName": "notification.service",
      "className": "MailService",
      "role": "SERVICE"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-notification-service/src/main/java/notification/service/MailService.java",
        "directoryName": "/ts-notification-service/src/main/java/notification"
      },
      "returnType": "void",
      "methodName": "sendEmail",
      "className": "MailService",
      "packageName": "notification.service",
      "methodId": "notification.service.MailService.sendEmail",
      "classId": "notification.service.MailService",
      "line": 30,
      "msArgumentList": [
        {
          "returnType": "Mail"
        },
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-cancel-service/src/main/java/cancel/controller/CancelController.java",
        "directoryName": "/ts-cancel-service/src/main/java/cancel"
      },
      "classId": "cancel.controller.CancelController",
      "packageName": "cancel.controller",
      "className": "CancelController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-cancel-service/src/main/java/cancel/controller/CancelController.java",
        "directoryName": "/ts-cancel-service/src/main/java/cancel"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "CancelController",
      "packageName": "cancel.controller",
      "methodId": "cancel.controller.CancelController.home",
      "classId": "cancel.controller.CancelController",
      "line": 27,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-cancel-service/src/main/java/cancel/controller/CancelController.java",
        "directoryName": "/ts-cancel-service/src/main/java/cancel"
      },
      "classId": "cancel.controller.CancelController",
      "packageName": "cancel.controller",
      "className": "CancelController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-cancel-service/src/main/java/cancel/controller/CancelController.java",
        "directoryName": "/ts-cancel-service/src/main/java/cancel"
      },
      "returnType": "HttpEntity",
      "methodName": "calculate",
      "className": "CancelController",
      "packageName": "cancel.controller",
      "methodId": "cancel.controller.CancelController.calculate",
      "classId": "cancel.controller.CancelController",
      "line": 32,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/cancel/refound/{orderId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-cancel-service/src/main/java/cancel/controller/CancelController.java",
        "directoryName": "/ts-cancel-service/src/main/java/cancel"
      },
      "parentPackageName": "cancel.controller",
      "parentClassName": "CancelController",
      "parentMethodName": "calculate",
      "parentClassId": "cancel.controller.CancelController",
      "lineNumber": 36,
      "calledMethodName": "calculateRefund",
      "calledServiceId": "cancelService",
      "statementDeclaration": "cancelService.calculateRefund(orderId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-cancel-service/src/main/java/cancel/controller/CancelController.java",
        "directoryName": "/ts-cancel-service/src/main/java/cancel"
      },
      "fieldClass": "CancelService",
      "fieldVariable": "cancelService",
      "parentMethod": {
        "parentClassName": "CancelController",
        "parentPackageName": "cancel.controller"
      },
      "line": 22
    },
    "msService": {
      "msId": {
        "path": "/ts-cancel-service/src/main/java/cancel/service/CancelServiceImpl.java",
        "directoryName": "/ts-cancel-service/src/main/java/cancel"
      },
      "classId": "cancel.service.CancelServiceImpl",
      "packageName": "cancel.service",
      "className": "CancelServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-cancel-service/src/main/java/cancel/service/CancelServiceImpl.java",
        "directoryName": "/ts-cancel-service/src/main/java/cancel"
      },
      "returnType": "Response",
      "methodName": "calculateRefund",
      "className": "CancelServiceImpl",
      "packageName": "cancel.service",
      "methodId": "cancel.service.CancelServiceImpl.calculateRefund",
      "classId": "cancel.service.CancelServiceImpl",
      "line": 143,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": []
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-cancel-service/src/main/java/cancel/controller/CancelController.java",
        "directoryName": "/ts-cancel-service/src/main/java/cancel"
      },
      "classId": "cancel.controller.CancelController",
      "packageName": "cancel.controller",
      "className": "CancelController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-cancel-service/src/main/java/cancel/controller/CancelController.java",
        "directoryName": "/ts-cancel-service/src/main/java/cancel"
      },
      "returnType": "HttpEntity",
      "methodName": "cancelTicket",
      "className": "CancelController",
      "packageName": "cancel.controller",
      "methodId": "cancel.controller.CancelController.cancelTicket",
      "classId": "cancel.controller.CancelController",
      "line": 39,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/cancel/{orderId}/{loginId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-cancel-service/src/main/java/cancel/controller/CancelController.java",
        "directoryName": "/ts-cancel-service/src/main/java/cancel"
      },
      "parentPackageName": "cancel.controller",
      "parentClassName": "CancelController",
      "parentMethodName": "cancelTicket",
      "parentClassId": "cancel.controller.CancelController",
      "lineNumber": 47,
      "calledMethodName": "cancelOrder",
      "calledServiceId": "cancelService",
      "statementDeclaration": "cancelService.cancelOrder(orderId, loginId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-cancel-service/src/main/java/cancel/controller/CancelController.java",
        "directoryName": "/ts-cancel-service/src/main/java/cancel"
      },
      "fieldClass": "CancelService",
      "fieldVariable": "cancelService",
      "parentMethod": {
        "parentClassName": "CancelController",
        "parentPackageName": "cancel.controller"
      },
      "line": 22
    },
    "msService": {
      "msId": {
        "path": "/ts-cancel-service/src/main/java/cancel/service/CancelServiceImpl.java",
        "directoryName": "/ts-cancel-service/src/main/java/cancel"
      },
      "classId": "cancel.service.CancelServiceImpl",
      "packageName": "cancel.service",
      "className": "CancelServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-cancel-service/src/main/java/cancel/service/CancelServiceImpl.java",
        "directoryName": "/ts-cancel-service/src/main/java/cancel"
      },
      "returnType": "Response",
      "methodName": "cancelOrder",
      "className": "CancelServiceImpl",
      "packageName": "cancel.service",
      "methodId": "cancel.service.CancelServiceImpl.cancelOrder",
      "classId": "cancel.service.CancelServiceImpl",
      "line": 33,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": []
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/controller/ConfigController.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "classId": "config.controller.ConfigController",
      "packageName": "config.controller",
      "className": "ConfigController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/controller/ConfigController.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "ConfigController",
      "packageName": "config.controller",
      "methodId": "config.controller.ConfigController.home",
      "classId": "config.controller.ConfigController",
      "line": 30,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/controller/ConfigController.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "classId": "config.controller.ConfigController",
      "packageName": "config.controller",
      "className": "ConfigController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/controller/ConfigController.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "returnType": "HttpEntity",
      "methodName": "queryAll",
      "className": "ConfigController",
      "packageName": "config.controller",
      "methodId": "config.controller.ConfigController.queryAll",
      "classId": "config.controller.ConfigController",
      "line": 35,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/configs\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/controller/ConfigController.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "parentPackageName": "config.controller",
      "parentClassName": "ConfigController",
      "parentMethodName": "queryAll",
      "parentClassId": "config.controller.ConfigController",
      "lineNumber": 39,
      "calledMethodName": "queryAll",
      "calledServiceId": "configService",
      "statementDeclaration": "configService.queryAll(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/controller/ConfigController.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "fieldClass": "ConfigService",
      "fieldVariable": "configService",
      "parentMethod": {
        "parentClassName": "ConfigController",
        "parentPackageName": "config.controller"
      },
      "line": 25
    },
    "msService": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/service/ConfigServiceImpl.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "classId": "config.service.ConfigServiceImpl",
      "packageName": "config.service",
      "className": "ConfigServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/service/ConfigServiceImpl.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "returnType": "Response",
      "methodName": "queryAll",
      "className": "ConfigServiceImpl",
      "packageName": "config.service",
      "methodId": "config.service.ConfigServiceImpl.queryAll",
      "classId": "config.service.ConfigServiceImpl",
      "line": 83,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/service/ConfigServiceImpl.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "parentPackageName": "config.service",
      "parentClassName": "ConfigServiceImpl",
      "parentMethodName": "queryAll",
      "parentClassId": "config.service.ConfigServiceImpl",
      "lineNumber": 85,
      "calledMethodName": "findAll",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findAll()"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/service/ConfigServiceImpl.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "fieldClass": "ConfigRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "ConfigServiceImpl",
        "parentPackageName": "config.service"
      },
      "line": 21
    },
    "msRepository": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/repository/ConfigRepository.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "classId": "config.repository.ConfigRepository",
      "packageName": "config.repository",
      "className": "ConfigRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/repository/ConfigRepository.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "returnType": "List\u003cConfig\u003e",
      "methodName": "findAll",
      "className": "ConfigRepository",
      "packageName": "config.repository",
      "methodId": "config.repository.ConfigRepository.findAll",
      "classId": "config.repository.ConfigRepository",
      "line": 26,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/controller/ConfigController.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "classId": "config.controller.ConfigController",
      "packageName": "config.controller",
      "className": "ConfigController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/controller/ConfigController.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "returnType": "HttpEntity\u003c?\u003e",
      "methodName": "createConfig",
      "className": "ConfigController",
      "packageName": "config.controller",
      "methodId": "config.controller.ConfigController.createConfig",
      "classId": "config.controller.ConfigController",
      "line": 42,
      "msArgumentList": [
        {
          "returnType": "Config"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/configs\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/controller/ConfigController.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "parentPackageName": "config.controller",
      "parentClassName": "ConfigController",
      "parentMethodName": "createConfig",
      "parentClassId": "config.controller.ConfigController",
      "lineNumber": 46,
      "calledMethodName": "create",
      "calledServiceId": "configService",
      "statementDeclaration": "configService.create(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/controller/ConfigController.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "fieldClass": "ConfigService",
      "fieldVariable": "configService",
      "parentMethod": {
        "parentClassName": "ConfigController",
        "parentPackageName": "config.controller"
      },
      "line": 25
    },
    "msService": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/service/ConfigServiceImpl.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "classId": "config.service.ConfigServiceImpl",
      "packageName": "config.service",
      "className": "ConfigServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/service/ConfigServiceImpl.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "returnType": "Response",
      "methodName": "create",
      "className": "ConfigServiceImpl",
      "packageName": "config.service",
      "methodId": "config.service.ConfigServiceImpl.create",
      "classId": "config.service.ConfigServiceImpl",
      "line": 28,
      "msArgumentList": [
        {
          "returnType": "Config"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/service/ConfigServiceImpl.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "parentPackageName": "config.service",
      "parentClassName": "ConfigServiceImpl",
      "parentMethodName": "create",
      "parentClassId": "config.service.ConfigServiceImpl",
      "lineNumber": 30,
      "calledMethodName": "findByName",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findByName(info.getName())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/service/ConfigServiceImpl.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "fieldClass": "ConfigRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "ConfigServiceImpl",
        "parentPackageName": "config.service"
      },
      "line": 21
    },
    "msRepository": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/repository/ConfigRepository.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "classId": "config.repository.ConfigRepository",
      "packageName": "config.repository",
      "className": "ConfigRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/repository/ConfigRepository.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "returnType": "Config",
      "methodName": "findByName",
      "className": "ConfigRepository",
      "packageName": "config.repository",
      "methodId": "config.repository.ConfigRepository.findByName",
      "classId": "config.repository.ConfigRepository",
      "line": 19,
      "msArgumentList": [
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/controller/ConfigController.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "classId": "config.controller.ConfigController",
      "packageName": "config.controller",
      "className": "ConfigController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/controller/ConfigController.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "returnType": "HttpEntity",
      "methodName": "updateConfig",
      "className": "ConfigController",
      "packageName": "config.controller",
      "methodId": "config.controller.ConfigController.updateConfig",
      "classId": "config.controller.ConfigController",
      "line": 49,
      "msArgumentList": [
        {
          "returnType": "Config"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PutMapping",
          "key": "value",
          "value": "\"/configs\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/controller/ConfigController.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "parentPackageName": "config.controller",
      "parentClassName": "ConfigController",
      "parentMethodName": "updateConfig",
      "parentClassId": "config.controller.ConfigController",
      "lineNumber": 53,
      "calledMethodName": "update",
      "calledServiceId": "configService",
      "statementDeclaration": "configService.update(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/controller/ConfigController.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "fieldClass": "ConfigService",
      "fieldVariable": "configService",
      "parentMethod": {
        "parentClassName": "ConfigController",
        "parentPackageName": "config.controller"
      },
      "line": 25
    },
    "msService": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/service/ConfigServiceImpl.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "classId": "config.service.ConfigServiceImpl",
      "packageName": "config.service",
      "className": "ConfigServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/service/ConfigServiceImpl.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "returnType": "Response",
      "methodName": "update",
      "className": "ConfigServiceImpl",
      "packageName": "config.service",
      "methodId": "config.service.ConfigServiceImpl.update",
      "classId": "config.service.ConfigServiceImpl",
      "line": 42,
      "msArgumentList": [
        {
          "returnType": "Config"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/service/ConfigServiceImpl.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "parentPackageName": "config.service",
      "parentClassName": "ConfigServiceImpl",
      "parentMethodName": "update",
      "parentClassId": "config.service.ConfigServiceImpl",
      "lineNumber": 44,
      "calledMethodName": "findByName",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findByName(info.getName())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/service/ConfigServiceImpl.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "fieldClass": "ConfigRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "ConfigServiceImpl",
        "parentPackageName": "config.service"
      },
      "line": 21
    },
    "msRepository": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/repository/ConfigRepository.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "classId": "config.repository.ConfigRepository",
      "packageName": "config.repository",
      "className": "ConfigRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/repository/ConfigRepository.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "returnType": "Config",
      "methodName": "findByName",
      "className": "ConfigRepository",
      "packageName": "config.repository",
      "methodId": "config.repository.ConfigRepository.findByName",
      "classId": "config.repository.ConfigRepository",
      "line": 19,
      "msArgumentList": [
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/controller/ConfigController.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "classId": "config.controller.ConfigController",
      "packageName": "config.controller",
      "className": "ConfigController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/controller/ConfigController.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "returnType": "HttpEntity",
      "methodName": "deleteConfig",
      "className": "ConfigController",
      "packageName": "config.controller",
      "methodId": "config.controller.ConfigController.deleteConfig",
      "classId": "config.controller.ConfigController",
      "line": 57,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "DeleteMapping",
          "key": "value",
          "value": "\"/configs/{configName}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/controller/ConfigController.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "parentPackageName": "config.controller",
      "parentClassName": "ConfigController",
      "parentMethodName": "deleteConfig",
      "parentClassId": "config.controller.ConfigController",
      "lineNumber": 61,
      "calledMethodName": "delete",
      "calledServiceId": "configService",
      "statementDeclaration": "configService.delete(configName, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/controller/ConfigController.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "fieldClass": "ConfigService",
      "fieldVariable": "configService",
      "parentMethod": {
        "parentClassName": "ConfigController",
        "parentPackageName": "config.controller"
      },
      "line": 25
    },
    "msService": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/service/ConfigServiceImpl.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "classId": "config.service.ConfigServiceImpl",
      "packageName": "config.service",
      "className": "ConfigServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/service/ConfigServiceImpl.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "returnType": "Response",
      "methodName": "delete",
      "className": "ConfigServiceImpl",
      "packageName": "config.service",
      "methodId": "config.service.ConfigServiceImpl.delete",
      "classId": "config.service.ConfigServiceImpl",
      "line": 69,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/service/ConfigServiceImpl.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "parentPackageName": "config.service",
      "parentClassName": "ConfigServiceImpl",
      "parentMethodName": "delete",
      "parentClassId": "config.service.ConfigServiceImpl",
      "lineNumber": 71,
      "calledMethodName": "findByName",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findByName(name)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/service/ConfigServiceImpl.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "fieldClass": "ConfigRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "ConfigServiceImpl",
        "parentPackageName": "config.service"
      },
      "line": 21
    },
    "msRepository": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/repository/ConfigRepository.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "classId": "config.repository.ConfigRepository",
      "packageName": "config.repository",
      "className": "ConfigRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/repository/ConfigRepository.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "returnType": "Config",
      "methodName": "findByName",
      "className": "ConfigRepository",
      "packageName": "config.repository",
      "methodId": "config.repository.ConfigRepository.findByName",
      "classId": "config.repository.ConfigRepository",
      "line": 19,
      "msArgumentList": [
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/controller/ConfigController.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "classId": "config.controller.ConfigController",
      "packageName": "config.controller",
      "className": "ConfigController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/controller/ConfigController.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "returnType": "HttpEntity",
      "methodName": "retrieve",
      "className": "ConfigController",
      "packageName": "config.controller",
      "methodId": "config.controller.ConfigController.retrieve",
      "classId": "config.controller.ConfigController",
      "line": 64,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/configs/{configName}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/controller/ConfigController.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "parentPackageName": "config.controller",
      "parentClassName": "ConfigController",
      "parentMethodName": "retrieve",
      "parentClassId": "config.controller.ConfigController",
      "lineNumber": 68,
      "calledMethodName": "query",
      "calledServiceId": "configService",
      "statementDeclaration": "configService.query(configName, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/controller/ConfigController.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "fieldClass": "ConfigService",
      "fieldVariable": "configService",
      "parentMethod": {
        "parentClassName": "ConfigController",
        "parentPackageName": "config.controller"
      },
      "line": 25
    },
    "msService": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/service/ConfigServiceImpl.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "classId": "config.service.ConfigServiceImpl",
      "packageName": "config.service",
      "className": "ConfigServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/service/ConfigServiceImpl.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "returnType": "Response",
      "methodName": "query",
      "className": "ConfigServiceImpl",
      "packageName": "config.service",
      "methodId": "config.service.ConfigServiceImpl.query",
      "classId": "config.service.ConfigServiceImpl",
      "line": 57,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/service/ConfigServiceImpl.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "parentPackageName": "config.service",
      "parentClassName": "ConfigServiceImpl",
      "parentMethodName": "query",
      "parentClassId": "config.service.ConfigServiceImpl",
      "lineNumber": 59,
      "calledMethodName": "findByName",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findByName(name)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/service/ConfigServiceImpl.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "fieldClass": "ConfigRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "ConfigServiceImpl",
        "parentPackageName": "config.service"
      },
      "line": 21
    },
    "msRepository": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/repository/ConfigRepository.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "classId": "config.repository.ConfigRepository",
      "packageName": "config.repository",
      "className": "ConfigRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-config-service/src/main/java/config/repository/ConfigRepository.java",
        "directoryName": "/ts-config-service/src/main/java/config"
      },
      "returnType": "Config",
      "methodName": "findByName",
      "className": "ConfigRepository",
      "packageName": "config.repository",
      "methodId": "config.repository.ConfigRepository.findByName",
      "classId": "config.repository.ConfigRepository",
      "line": 19,
      "msArgumentList": [
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "classId": "assurance.controller.AssuranceController",
      "packageName": "assurance.controller",
      "className": "AssuranceController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "AssuranceController",
      "packageName": "assurance.controller",
      "methodId": "assurance.controller.AssuranceController.home",
      "classId": "assurance.controller.AssuranceController",
      "line": 27,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "classId": "assurance.controller.AssuranceController",
      "packageName": "assurance.controller",
      "className": "AssuranceController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "returnType": "HttpEntity",
      "methodName": "getAllAssurances",
      "className": "AssuranceController",
      "packageName": "assurance.controller",
      "methodId": "assurance.controller.AssuranceController.getAllAssurances",
      "classId": "assurance.controller.AssuranceController",
      "line": 32,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/assurances\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "parentPackageName": "assurance.controller",
      "parentClassName": "AssuranceController",
      "parentMethodName": "getAllAssurances",
      "parentClassId": "assurance.controller.AssuranceController",
      "lineNumber": 36,
      "calledMethodName": "getAllAssurances",
      "calledServiceId": "assuranceService",
      "statementDeclaration": "assuranceService.getAllAssurances(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "fieldClass": "AssuranceService",
      "fieldVariable": "assuranceService",
      "parentMethod": {
        "parentClassName": "AssuranceController",
        "parentPackageName": "assurance.controller"
      },
      "line": 22
    },
    "msService": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "classId": "assurance.service.AssuranceServiceImpl",
      "packageName": "assurance.service",
      "className": "AssuranceServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "returnType": "Response",
      "methodName": "getAllAssurances",
      "className": "AssuranceServiceImpl",
      "packageName": "assurance.service",
      "methodId": "assurance.service.AssuranceServiceImpl.getAllAssurances",
      "classId": "assurance.service.AssuranceServiceImpl",
      "line": 116,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "parentPackageName": "assurance.service",
      "parentClassName": "AssuranceServiceImpl",
      "parentMethodName": "getAllAssurances",
      "parentClassId": "assurance.service.AssuranceServiceImpl",
      "lineNumber": 118,
      "calledMethodName": "findAll",
      "calledServiceId": "assuranceRepository",
      "statementDeclaration": "assuranceRepository.findAll()"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "fieldClass": "AssuranceRepository",
      "fieldVariable": "assuranceRepository",
      "parentMethod": {
        "parentClassName": "AssuranceServiceImpl",
        "parentPackageName": "assurance.service"
      },
      "line": 22
    },
    "msRepository": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/repository/AssuranceRepository.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "classId": "assurance.repository.AssuranceRepository",
      "packageName": "assurance.repository",
      "className": "AssuranceRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/repository/AssuranceRepository.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "returnType": "ArrayList\u003cAssurance\u003e",
      "methodName": "findAll",
      "className": "AssuranceRepository",
      "packageName": "assurance.repository",
      "methodId": "assurance.repository.AssuranceRepository.findAll",
      "classId": "assurance.repository.AssuranceRepository",
      "line": 54,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "classId": "assurance.controller.AssuranceController",
      "packageName": "assurance.controller",
      "className": "AssuranceController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "returnType": "HttpEntity",
      "methodName": "getAllAssuranceType",
      "className": "AssuranceController",
      "packageName": "assurance.controller",
      "methodId": "assurance.controller.AssuranceController.getAllAssuranceType",
      "classId": "assurance.controller.AssuranceController",
      "line": 39,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/assurances/types\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "parentPackageName": "assurance.controller",
      "parentClassName": "AssuranceController",
      "parentMethodName": "getAllAssuranceType",
      "parentClassId": "assurance.controller.AssuranceController",
      "lineNumber": 43,
      "calledMethodName": "getAllAssuranceTypes",
      "calledServiceId": "assuranceService",
      "statementDeclaration": "assuranceService.getAllAssuranceTypes(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "fieldClass": "AssuranceService",
      "fieldVariable": "assuranceService",
      "parentMethod": {
        "parentClassName": "AssuranceController",
        "parentPackageName": "assurance.controller"
      },
      "line": 22
    },
    "msService": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "classId": "assurance.service.AssuranceServiceImpl",
      "packageName": "assurance.service",
      "className": "AssuranceServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "returnType": "Response",
      "methodName": "getAllAssuranceTypes",
      "className": "AssuranceServiceImpl",
      "packageName": "assurance.service",
      "methodId": "assurance.service.AssuranceServiceImpl.getAllAssuranceTypes",
      "classId": "assurance.service.AssuranceServiceImpl",
      "line": 138,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": []
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "classId": "assurance.controller.AssuranceController",
      "packageName": "assurance.controller",
      "className": "AssuranceController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "returnType": "HttpEntity",
      "methodName": "deleteAssurance",
      "className": "AssuranceController",
      "packageName": "assurance.controller",
      "methodId": "assurance.controller.AssuranceController.deleteAssurance",
      "classId": "assurance.controller.AssuranceController",
      "line": 46,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "DeleteMapping",
          "key": "path",
          "value": "\"/assurances/assuranceid/{assuranceId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "parentPackageName": "assurance.controller",
      "parentClassName": "AssuranceController",
      "parentMethodName": "deleteAssurance",
      "parentClassId": "assurance.controller.AssuranceController",
      "lineNumber": 50,
      "calledMethodName": "deleteById",
      "calledServiceId": "assuranceService",
      "statementDeclaration": "assuranceService.deleteById(UUID.fromString(assuranceId), headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "fieldClass": "AssuranceService",
      "fieldVariable": "assuranceService",
      "parentMethod": {
        "parentClassName": "AssuranceController",
        "parentPackageName": "assurance.controller"
      },
      "line": 22
    },
    "msService": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "classId": "assurance.service.AssuranceServiceImpl",
      "packageName": "assurance.service",
      "className": "AssuranceServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "returnType": "Response",
      "methodName": "deleteById",
      "className": "AssuranceServiceImpl",
      "packageName": "assurance.service",
      "methodId": "assurance.service.AssuranceServiceImpl.deleteById",
      "classId": "assurance.service.AssuranceServiceImpl",
      "line": 69,
      "msArgumentList": [
        {
          "returnType": "UUID"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "parentPackageName": "assurance.service",
      "parentClassName": "AssuranceServiceImpl",
      "parentMethodName": "deleteById",
      "parentClassId": "assurance.service.AssuranceServiceImpl",
      "lineNumber": 71,
      "calledMethodName": "deleteById",
      "calledServiceId": "assuranceRepository",
      "statementDeclaration": "assuranceRepository.deleteById(assuranceId)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "fieldClass": "AssuranceRepository",
      "fieldVariable": "assuranceRepository",
      "parentMethod": {
        "parentClassName": "AssuranceServiceImpl",
        "parentPackageName": "assurance.service"
      },
      "line": 22
    },
    "msRepository": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/repository/AssuranceRepository.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "classId": "assurance.repository.AssuranceRepository",
      "packageName": "assurance.repository",
      "className": "AssuranceRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/repository/AssuranceRepository.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "returnType": "void",
      "methodName": "deleteById",
      "className": "AssuranceRepository",
      "packageName": "assurance.repository",
      "methodId": "assurance.repository.AssuranceRepository.deleteById",
      "classId": "assurance.repository.AssuranceRepository",
      "line": 39,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "classId": "assurance.controller.AssuranceController",
      "packageName": "assurance.controller",
      "className": "AssuranceController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "returnType": "HttpEntity",
      "methodName": "deleteAssuranceByOrderId",
      "className": "AssuranceController",
      "packageName": "assurance.controller",
      "methodId": "assurance.controller.AssuranceController.deleteAssuranceByOrderId",
      "classId": "assurance.controller.AssuranceController",
      "line": 53,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "DeleteMapping",
          "key": "path",
          "value": "\"/assurances/orderid/{orderId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "parentPackageName": "assurance.controller",
      "parentClassName": "AssuranceController",
      "parentMethodName": "deleteAssuranceByOrderId",
      "parentClassId": "assurance.controller.AssuranceController",
      "lineNumber": 57,
      "calledMethodName": "deleteByOrderId",
      "calledServiceId": "assuranceService",
      "statementDeclaration": "assuranceService.deleteByOrderId(UUID.fromString(orderId), headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "fieldClass": "AssuranceService",
      "fieldVariable": "assuranceService",
      "parentMethod": {
        "parentClassName": "AssuranceController",
        "parentPackageName": "assurance.controller"
      },
      "line": 22
    },
    "msService": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "classId": "assurance.service.AssuranceServiceImpl",
      "packageName": "assurance.service",
      "className": "AssuranceServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "returnType": "Response",
      "methodName": "deleteByOrderId",
      "className": "AssuranceServiceImpl",
      "packageName": "assurance.service",
      "methodId": "assurance.service.AssuranceServiceImpl.deleteByOrderId",
      "classId": "assurance.service.AssuranceServiceImpl",
      "line": 82,
      "msArgumentList": [
        {
          "returnType": "UUID"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "parentPackageName": "assurance.service",
      "parentClassName": "AssuranceServiceImpl",
      "parentMethodName": "deleteByOrderId",
      "parentClassId": "assurance.service.AssuranceServiceImpl",
      "lineNumber": 84,
      "calledMethodName": "removeAssuranceByOrderId",
      "calledServiceId": "assuranceRepository",
      "statementDeclaration": "assuranceRepository.removeAssuranceByOrderId(orderId)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "fieldClass": "AssuranceRepository",
      "fieldVariable": "assuranceRepository",
      "parentMethod": {
        "parentClassName": "AssuranceServiceImpl",
        "parentPackageName": "assurance.service"
      },
      "line": 22
    },
    "msRepository": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/repository/AssuranceRepository.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "classId": "assurance.repository.AssuranceRepository",
      "packageName": "assurance.repository",
      "className": "AssuranceRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/repository/AssuranceRepository.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "returnType": "void",
      "methodName": "removeAssuranceByOrderId",
      "className": "AssuranceRepository",
      "packageName": "assurance.repository",
      "methodId": "assurance.repository.AssuranceRepository.removeAssuranceByOrderId",
      "classId": "assurance.repository.AssuranceRepository",
      "line": 47,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "classId": "assurance.controller.AssuranceController",
      "packageName": "assurance.controller",
      "className": "AssuranceController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "returnType": "HttpEntity",
      "methodName": "modifyAssurance",
      "className": "AssuranceController",
      "packageName": "assurance.controller",
      "methodId": "assurance.controller.AssuranceController.modifyAssurance",
      "classId": "assurance.controller.AssuranceController",
      "line": 60,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "int"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PatchMapping",
          "key": "path",
          "value": "\"/assurances/{assuranceId}/{orderId}/{typeIndex}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "parentPackageName": "assurance.controller",
      "parentClassName": "AssuranceController",
      "parentMethodName": "modifyAssurance",
      "parentClassId": "assurance.controller.AssuranceController",
      "lineNumber": 67,
      "calledMethodName": "modify",
      "calledServiceId": "assuranceService",
      "statementDeclaration": "assuranceService.modify(assuranceId, orderId, typeIndex, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "fieldClass": "AssuranceService",
      "fieldVariable": "assuranceService",
      "parentMethod": {
        "parentClassName": "AssuranceController",
        "parentPackageName": "assurance.controller"
      },
      "line": 22
    },
    "msService": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "classId": "assurance.service.AssuranceServiceImpl",
      "packageName": "assurance.service",
      "className": "AssuranceServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "returnType": "Response",
      "methodName": "modify",
      "className": "AssuranceServiceImpl",
      "packageName": "assurance.service",
      "methodId": "assurance.service.AssuranceServiceImpl.modify",
      "classId": "assurance.service.AssuranceServiceImpl",
      "line": 95,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "int"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "parentPackageName": "assurance.service",
      "parentClassName": "AssuranceServiceImpl",
      "parentMethodName": "modify",
      "parentClassId": "assurance.service.AssuranceServiceImpl",
      "lineNumber": 106,
      "calledMethodName": "save",
      "calledServiceId": "assuranceRepository",
      "statementDeclaration": "assuranceRepository.save(oldAssurance)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "fieldClass": "AssuranceRepository",
      "fieldVariable": "assuranceRepository",
      "parentMethod": {
        "parentClassName": "AssuranceServiceImpl",
        "parentPackageName": "assurance.service"
      },
      "line": 22
    },
    "msRepository": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/repository/AssuranceRepository.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "classId": "assurance.repository.AssuranceRepository",
      "packageName": "assurance.repository",
      "className": "AssuranceRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": []
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "classId": "assurance.controller.AssuranceController",
      "packageName": "assurance.controller",
      "className": "AssuranceController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "returnType": "HttpEntity",
      "methodName": "createNewAssurance",
      "className": "AssuranceController",
      "packageName": "assurance.controller",
      "methodId": "assurance.controller.AssuranceController.createNewAssurance",
      "classId": "assurance.controller.AssuranceController",
      "line": 71,
      "msArgumentList": [
        {
          "returnType": "int"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/assurances/{typeIndex}/{orderId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "parentPackageName": "assurance.controller",
      "parentClassName": "AssuranceController",
      "parentMethodName": "createNewAssurance",
      "parentClassId": "assurance.controller.AssuranceController",
      "lineNumber": 76,
      "calledMethodName": "create",
      "calledServiceId": "assuranceService",
      "statementDeclaration": "assuranceService.create(typeIndex, orderId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "fieldClass": "AssuranceService",
      "fieldVariable": "assuranceService",
      "parentMethod": {
        "parentClassName": "AssuranceController",
        "parentPackageName": "assurance.controller"
      },
      "line": 22
    },
    "msService": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "classId": "assurance.service.AssuranceServiceImpl",
      "packageName": "assurance.service",
      "className": "AssuranceServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "returnType": "Response",
      "methodName": "create",
      "className": "AssuranceServiceImpl",
      "packageName": "assurance.service",
      "methodId": "assurance.service.AssuranceServiceImpl.create",
      "classId": "assurance.service.AssuranceServiceImpl",
      "line": 51,
      "msArgumentList": [
        {
          "returnType": "int"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "parentPackageName": "assurance.service",
      "parentClassName": "AssuranceServiceImpl",
      "parentMethodName": "create",
      "parentClassId": "assurance.service.AssuranceServiceImpl",
      "lineNumber": 53,
      "calledMethodName": "findByOrderId",
      "calledServiceId": "assuranceRepository",
      "statementDeclaration": "assuranceRepository.findByOrderId(UUID.fromString(orderId))"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "fieldClass": "AssuranceRepository",
      "fieldVariable": "assuranceRepository",
      "parentMethod": {
        "parentClassName": "AssuranceServiceImpl",
        "parentPackageName": "assurance.service"
      },
      "line": 22
    },
    "msRepository": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/repository/AssuranceRepository.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "classId": "assurance.repository.AssuranceRepository",
      "packageName": "assurance.repository",
      "className": "AssuranceRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/repository/AssuranceRepository.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "returnType": "Assurance",
      "methodName": "findByOrderId",
      "className": "AssuranceRepository",
      "packageName": "assurance.repository",
      "methodId": "assurance.repository.AssuranceRepository.findByOrderId",
      "classId": "assurance.repository.AssuranceRepository",
      "line": 30,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "classId": "assurance.controller.AssuranceController",
      "packageName": "assurance.controller",
      "className": "AssuranceController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "returnType": "HttpEntity",
      "methodName": "getAssuranceById",
      "className": "AssuranceController",
      "packageName": "assurance.controller",
      "methodId": "assurance.controller.AssuranceController.getAssuranceById",
      "classId": "assurance.controller.AssuranceController",
      "line": 79,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/assurances/assuranceid/{assuranceId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "parentPackageName": "assurance.controller",
      "parentClassName": "AssuranceController",
      "parentMethodName": "getAssuranceById",
      "parentClassId": "assurance.controller.AssuranceController",
      "lineNumber": 83,
      "calledMethodName": "findAssuranceById",
      "calledServiceId": "assuranceService",
      "statementDeclaration": "assuranceService.findAssuranceById(UUID.fromString(assuranceId), headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "fieldClass": "AssuranceService",
      "fieldVariable": "assuranceService",
      "parentMethod": {
        "parentClassName": "AssuranceController",
        "parentPackageName": "assurance.controller"
      },
      "line": 22
    },
    "msService": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "classId": "assurance.service.AssuranceServiceImpl",
      "packageName": "assurance.service",
      "className": "AssuranceServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "returnType": "Response",
      "methodName": "findAssuranceById",
      "className": "AssuranceServiceImpl",
      "packageName": "assurance.service",
      "methodId": "assurance.service.AssuranceServiceImpl.findAssuranceById",
      "classId": "assurance.service.AssuranceServiceImpl",
      "line": 27,
      "msArgumentList": [
        {
          "returnType": "UUID"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "parentPackageName": "assurance.service",
      "parentClassName": "AssuranceServiceImpl",
      "parentMethodName": "findAssuranceById",
      "parentClassId": "assurance.service.AssuranceServiceImpl",
      "lineNumber": 29,
      "calledMethodName": "findById",
      "calledServiceId": "assuranceRepository",
      "statementDeclaration": "assuranceRepository.findById(id)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "fieldClass": "AssuranceRepository",
      "fieldVariable": "assuranceRepository",
      "parentMethod": {
        "parentClassName": "AssuranceServiceImpl",
        "parentPackageName": "assurance.service"
      },
      "line": 22
    },
    "msRepository": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/repository/AssuranceRepository.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "classId": "assurance.repository.AssuranceRepository",
      "packageName": "assurance.repository",
      "className": "AssuranceRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/repository/AssuranceRepository.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "returnType": "Assurance",
      "methodName": "findById",
      "className": "AssuranceRepository",
      "packageName": "assurance.repository",
      "methodId": "assurance.repository.AssuranceRepository.findById",
      "classId": "assurance.repository.AssuranceRepository",
      "line": 22,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "classId": "assurance.controller.AssuranceController",
      "packageName": "assurance.controller",
      "className": "AssuranceController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "returnType": "HttpEntity",
      "methodName": "findAssuranceByOrderId",
      "className": "AssuranceController",
      "packageName": "assurance.controller",
      "methodId": "assurance.controller.AssuranceController.findAssuranceByOrderId",
      "classId": "assurance.controller.AssuranceController",
      "line": 86,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/assurance/orderid/{orderId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "parentPackageName": "assurance.controller",
      "parentClassName": "AssuranceController",
      "parentMethodName": "findAssuranceByOrderId",
      "parentClassId": "assurance.controller.AssuranceController",
      "lineNumber": 90,
      "calledMethodName": "findAssuranceByOrderId",
      "calledServiceId": "assuranceService",
      "statementDeclaration": "assuranceService.findAssuranceByOrderId(UUID.fromString(orderId), headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/controller/AssuranceController.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "fieldClass": "AssuranceService",
      "fieldVariable": "assuranceService",
      "parentMethod": {
        "parentClassName": "AssuranceController",
        "parentPackageName": "assurance.controller"
      },
      "line": 22
    },
    "msService": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "classId": "assurance.service.AssuranceServiceImpl",
      "packageName": "assurance.service",
      "className": "AssuranceServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "returnType": "Response",
      "methodName": "findAssuranceByOrderId",
      "className": "AssuranceServiceImpl",
      "packageName": "assurance.service",
      "methodId": "assurance.service.AssuranceServiceImpl.findAssuranceByOrderId",
      "classId": "assurance.service.AssuranceServiceImpl",
      "line": 39,
      "msArgumentList": [
        {
          "returnType": "UUID"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "parentPackageName": "assurance.service",
      "parentClassName": "AssuranceServiceImpl",
      "parentMethodName": "findAssuranceByOrderId",
      "parentClassId": "assurance.service.AssuranceServiceImpl",
      "lineNumber": 41,
      "calledMethodName": "findByOrderId",
      "calledServiceId": "assuranceRepository",
      "statementDeclaration": "assuranceRepository.findByOrderId(orderId)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/service/AssuranceServiceImpl.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "fieldClass": "AssuranceRepository",
      "fieldVariable": "assuranceRepository",
      "parentMethod": {
        "parentClassName": "AssuranceServiceImpl",
        "parentPackageName": "assurance.service"
      },
      "line": 22
    },
    "msRepository": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/repository/AssuranceRepository.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "classId": "assurance.repository.AssuranceRepository",
      "packageName": "assurance.repository",
      "className": "AssuranceRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-assurance-service/src/main/java/assurance/repository/AssuranceRepository.java",
        "directoryName": "/ts-assurance-service/src/main/java/assurance"
      },
      "returnType": "Assurance",
      "methodName": "findByOrderId",
      "className": "AssuranceRepository",
      "packageName": "assurance.repository",
      "methodId": "assurance.repository.AssuranceRepository.findByOrderId",
      "classId": "assurance.repository.AssuranceRepository",
      "line": 30,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.controller.OrderOtherController",
      "packageName": "other.controller",
      "className": "OrderOtherController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "OrderOtherController",
      "packageName": "other.controller",
      "methodId": "other.controller.OrderOtherController.home",
      "classId": "other.controller.OrderOtherController",
      "line": 28,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.controller.OrderOtherController",
      "packageName": "other.controller",
      "className": "OrderOtherController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "HttpEntity",
      "methodName": "getTicketListByDateAndTripId",
      "className": "OrderOtherController",
      "packageName": "other.controller",
      "methodId": "other.controller.OrderOtherController.getTicketListByDateAndTripId",
      "classId": "other.controller.OrderOtherController",
      "line": 35,
      "msArgumentList": [
        {
          "returnType": "Seat"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/orderOther/tickets\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "parentPackageName": "other.controller",
      "parentClassName": "OrderOtherController",
      "parentMethodName": "getTicketListByDateAndTripId",
      "parentClassId": "other.controller.OrderOtherController",
      "lineNumber": 38,
      "calledMethodName": "getSoldTickets",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.getSoldTickets(seatRequest, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "fieldClass": "OrderOtherService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderOtherController",
        "parentPackageName": "other.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.service.OrderOtherServiceImpl",
      "packageName": "other.service",
      "className": "OrderOtherServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "Response",
      "methodName": "getSoldTickets",
      "className": "OrderOtherServiceImpl",
      "packageName": "other.service",
      "methodId": "other.service.OrderOtherServiceImpl.getSoldTickets",
      "classId": "other.service.OrderOtherServiceImpl",
      "line": 36,
      "msArgumentList": [
        {
          "returnType": "Seat"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "parentPackageName": "other.service",
      "parentClassName": "OrderOtherServiceImpl",
      "parentMethodName": "getSoldTickets",
      "parentClassId": "other.service.OrderOtherServiceImpl",
      "lineNumber": 38,
      "calledMethodName": "findByTravelDateAndTrainNumber",
      "calledServiceId": "orderOtherRepository",
      "statementDeclaration": "orderOtherRepository.findByTravelDateAndTrainNumber(seatRequest.getTravelDate(), seatRequest.getTrainNumber())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "fieldClass": "OrderOtherRepository",
      "fieldVariable": "orderOtherRepository",
      "parentMethod": {
        "parentClassName": "OrderOtherServiceImpl",
        "parentPackageName": "other.service"
      },
      "line": 25
    },
    "msRepository": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.repository.OrderOtherRepository",
      "packageName": "other.repository",
      "className": "OrderOtherRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "ArrayList\u003cOrder\u003e",
      "methodName": "findByTravelDateAndTrainNumber",
      "className": "OrderOtherRepository",
      "packageName": "other.repository",
      "methodId": "other.repository.OrderOtherRepository.findByTravelDateAndTrainNumber",
      "classId": "other.repository.OrderOtherRepository",
      "line": 50,
      "msArgumentList": [
        {
          "returnType": "Date"
        },
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.controller.OrderOtherController",
      "packageName": "other.controller",
      "className": "OrderOtherController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "HttpEntity",
      "methodName": "createNewOrder",
      "className": "OrderOtherController",
      "packageName": "other.controller",
      "methodId": "other.controller.OrderOtherController.createNewOrder",
      "classId": "other.controller.OrderOtherController",
      "line": 41,
      "msArgumentList": [
        {
          "returnType": "Order"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "path",
          "value": "\"/orderOther\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "parentPackageName": "other.controller",
      "parentClassName": "OrderOtherController",
      "parentMethodName": "createNewOrder",
      "parentClassId": "other.controller.OrderOtherController",
      "lineNumber": 47,
      "calledMethodName": "create",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.create(createOrder, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "fieldClass": "OrderOtherService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderOtherController",
        "parentPackageName": "other.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.service.OrderOtherServiceImpl",
      "packageName": "other.service",
      "className": "OrderOtherServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "Response",
      "methodName": "create",
      "className": "OrderOtherServiceImpl",
      "packageName": "other.service",
      "methodId": "other.service.OrderOtherServiceImpl.create",
      "classId": "other.service.OrderOtherServiceImpl",
      "line": 73,
      "msArgumentList": [
        {
          "returnType": "Order"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "parentPackageName": "other.service",
      "parentClassName": "OrderOtherServiceImpl",
      "parentMethodName": "create",
      "parentClassId": "other.service.OrderOtherServiceImpl",
      "lineNumber": 76,
      "calledMethodName": "findByAccountId",
      "calledServiceId": "orderOtherRepository",
      "statementDeclaration": "orderOtherRepository.findByAccountId(order.getAccountId())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "fieldClass": "OrderOtherRepository",
      "fieldVariable": "orderOtherRepository",
      "parentMethod": {
        "parentClassName": "OrderOtherServiceImpl",
        "parentPackageName": "other.service"
      },
      "line": 25
    },
    "msRepository": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.repository.OrderOtherRepository",
      "packageName": "other.repository",
      "className": "OrderOtherRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "ArrayList\u003cOrder\u003e",
      "methodName": "findByAccountId",
      "className": "OrderOtherRepository",
      "packageName": "other.repository",
      "methodId": "other.repository.OrderOtherRepository.findByAccountId",
      "classId": "other.repository.OrderOtherRepository",
      "line": 40,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.controller.OrderOtherController",
      "packageName": "other.controller",
      "className": "OrderOtherController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "HttpEntity",
      "methodName": "addcreateNewOrder",
      "className": "OrderOtherController",
      "packageName": "other.controller",
      "methodId": "other.controller.OrderOtherController.addcreateNewOrder",
      "classId": "other.controller.OrderOtherController",
      "line": 50,
      "msArgumentList": [
        {
          "returnType": "Order"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "path",
          "value": "\"/orderOther/admin\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "parentPackageName": "other.controller",
      "parentClassName": "OrderOtherController",
      "parentMethodName": "addcreateNewOrder",
      "parentClassId": "other.controller.OrderOtherController",
      "lineNumber": 54,
      "calledMethodName": "addNewOrder",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.addNewOrder(order, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "fieldClass": "OrderOtherService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderOtherController",
        "parentPackageName": "other.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.service.OrderOtherServiceImpl",
      "packageName": "other.service",
      "className": "OrderOtherServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "Response",
      "methodName": "addNewOrder",
      "className": "OrderOtherServiceImpl",
      "packageName": "other.service",
      "methodId": "other.service.OrderOtherServiceImpl.addNewOrder",
      "classId": "other.service.OrderOtherServiceImpl",
      "line": 393,
      "msArgumentList": [
        {
          "returnType": "Order"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "parentPackageName": "other.service",
      "parentClassName": "OrderOtherServiceImpl",
      "parentMethodName": "addNewOrder",
      "parentClassId": "other.service.OrderOtherServiceImpl",
      "lineNumber": 396,
      "calledMethodName": "findByAccountId",
      "calledServiceId": "orderOtherRepository",
      "statementDeclaration": "orderOtherRepository.findByAccountId(order.getAccountId())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "fieldClass": "OrderOtherRepository",
      "fieldVariable": "orderOtherRepository",
      "parentMethod": {
        "parentClassName": "OrderOtherServiceImpl",
        "parentPackageName": "other.service"
      },
      "line": 25
    },
    "msRepository": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.repository.OrderOtherRepository",
      "packageName": "other.repository",
      "className": "OrderOtherRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "ArrayList\u003cOrder\u003e",
      "methodName": "findByAccountId",
      "className": "OrderOtherRepository",
      "packageName": "other.repository",
      "methodId": "other.repository.OrderOtherRepository.findByAccountId",
      "classId": "other.repository.OrderOtherRepository",
      "line": 40,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.controller.OrderOtherController",
      "packageName": "other.controller",
      "className": "OrderOtherController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "HttpEntity",
      "methodName": "queryOrders",
      "className": "OrderOtherController",
      "packageName": "other.controller",
      "methodId": "other.controller.OrderOtherController.queryOrders",
      "classId": "other.controller.OrderOtherController",
      "line": 57,
      "msArgumentList": [
        {
          "returnType": "QueryInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "path",
          "value": "\"/orderOther/query\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "parentPackageName": "other.controller",
      "parentClassName": "OrderOtherController",
      "parentMethodName": "queryOrders",
      "parentClassId": "other.controller.OrderOtherController",
      "lineNumber": 62,
      "calledMethodName": "queryOrders",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.queryOrders(qi, qi.getLoginId(), headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "fieldClass": "OrderOtherService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderOtherController",
        "parentPackageName": "other.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.service.OrderOtherServiceImpl",
      "packageName": "other.service",
      "className": "OrderOtherServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "Response\u003cArrayList\u003cOrder\u003e\u003e",
      "methodName": "queryOrders",
      "className": "OrderOtherServiceImpl",
      "packageName": "other.service",
      "methodId": "other.service.OrderOtherServiceImpl.queryOrders",
      "classId": "other.service.OrderOtherServiceImpl",
      "line": 123,
      "msArgumentList": [
        {
          "returnType": "QueryInfo"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "parentPackageName": "other.service",
      "parentClassName": "OrderOtherServiceImpl",
      "parentMethodName": "queryOrders",
      "parentClassId": "other.service.OrderOtherServiceImpl",
      "lineNumber": 126,
      "calledMethodName": "findByAccountId",
      "calledServiceId": "orderOtherRepository",
      "statementDeclaration": "orderOtherRepository.findByAccountId(UUID.fromString(accountId))"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "fieldClass": "OrderOtherRepository",
      "fieldVariable": "orderOtherRepository",
      "parentMethod": {
        "parentClassName": "OrderOtherServiceImpl",
        "parentPackageName": "other.service"
      },
      "line": 25
    },
    "msRepository": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.repository.OrderOtherRepository",
      "packageName": "other.repository",
      "className": "OrderOtherRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "ArrayList\u003cOrder\u003e",
      "methodName": "findByAccountId",
      "className": "OrderOtherRepository",
      "packageName": "other.repository",
      "methodId": "other.repository.OrderOtherRepository.findByAccountId",
      "classId": "other.repository.OrderOtherRepository",
      "line": 40,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.controller.OrderOtherController",
      "packageName": "other.controller",
      "className": "OrderOtherController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "HttpEntity",
      "methodName": "queryOrdersForRefresh",
      "className": "OrderOtherController",
      "packageName": "other.controller",
      "methodId": "other.controller.OrderOtherController.queryOrdersForRefresh",
      "classId": "other.controller.OrderOtherController",
      "line": 66,
      "msArgumentList": [
        {
          "returnType": "QueryInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "path",
          "value": "\"/orderOther/refresh\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "parentPackageName": "other.controller",
      "parentClassName": "OrderOtherController",
      "parentMethodName": "queryOrdersForRefresh",
      "parentClassId": "other.controller.OrderOtherController",
      "lineNumber": 71,
      "calledMethodName": "queryOrdersForRefresh",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.queryOrdersForRefresh(qi, qi.getLoginId(), headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "fieldClass": "OrderOtherService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderOtherController",
        "parentPackageName": "other.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.service.OrderOtherServiceImpl",
      "packageName": "other.service",
      "className": "OrderOtherServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "Response",
      "methodName": "queryOrdersForRefresh",
      "className": "OrderOtherServiceImpl",
      "packageName": "other.service",
      "methodId": "other.service.OrderOtherServiceImpl.queryOrdersForRefresh",
      "classId": "other.service.OrderOtherServiceImpl",
      "line": 184,
      "msArgumentList": [
        {
          "returnType": "QueryInfo"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": []
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.controller.OrderOtherController",
      "packageName": "other.controller",
      "className": "OrderOtherController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "HttpEntity",
      "methodName": "calculateSoldTicket",
      "className": "OrderOtherController",
      "packageName": "other.controller",
      "methodId": "other.controller.OrderOtherController.calculateSoldTicket",
      "classId": "other.controller.OrderOtherController",
      "line": 75,
      "msArgumentList": [
        {
          "returnType": "Date"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/orderOther/{travelDate}/{trainNumber}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "parentPackageName": "other.controller",
      "parentClassName": "OrderOtherController",
      "parentMethodName": "calculateSoldTicket",
      "parentClassId": "other.controller.OrderOtherController",
      "lineNumber": 80,
      "calledMethodName": "queryAlreadySoldOrders",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.queryAlreadySoldOrders(travelDate, trainNumber, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "fieldClass": "OrderOtherService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderOtherController",
        "parentPackageName": "other.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.service.OrderOtherServiceImpl",
      "packageName": "other.service",
      "className": "OrderOtherServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "Response",
      "methodName": "queryAlreadySoldOrders",
      "className": "OrderOtherServiceImpl",
      "packageName": "other.service",
      "methodId": "other.service.OrderOtherServiceImpl.queryAlreadySoldOrders",
      "classId": "other.service.OrderOtherServiceImpl",
      "line": 258,
      "msArgumentList": [
        {
          "returnType": "Date"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "parentPackageName": "other.service",
      "parentClassName": "OrderOtherServiceImpl",
      "parentMethodName": "queryAlreadySoldOrders",
      "parentClassId": "other.service.OrderOtherServiceImpl",
      "lineNumber": 260,
      "calledMethodName": "findByTravelDateAndTrainNumber",
      "calledServiceId": "orderOtherRepository",
      "statementDeclaration": "orderOtherRepository.findByTravelDateAndTrainNumber(travelDate, trainNumber)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "fieldClass": "OrderOtherRepository",
      "fieldVariable": "orderOtherRepository",
      "parentMethod": {
        "parentClassName": "OrderOtherServiceImpl",
        "parentPackageName": "other.service"
      },
      "line": 25
    },
    "msRepository": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.repository.OrderOtherRepository",
      "packageName": "other.repository",
      "className": "OrderOtherRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "ArrayList\u003cOrder\u003e",
      "methodName": "findByTravelDateAndTrainNumber",
      "className": "OrderOtherRepository",
      "packageName": "other.repository",
      "methodId": "other.repository.OrderOtherRepository.findByTravelDateAndTrainNumber",
      "classId": "other.repository.OrderOtherRepository",
      "line": 50,
      "msArgumentList": [
        {
          "returnType": "Date"
        },
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.controller.OrderOtherController",
      "packageName": "other.controller",
      "className": "OrderOtherController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "HttpEntity",
      "methodName": "getOrderPrice",
      "className": "OrderOtherController",
      "packageName": "other.controller",
      "methodId": "other.controller.OrderOtherController.getOrderPrice",
      "classId": "other.controller.OrderOtherController",
      "line": 83,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/orderOther/price/{orderId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "parentPackageName": "other.controller",
      "parentClassName": "OrderOtherController",
      "parentMethodName": "getOrderPrice",
      "parentClassId": "other.controller.OrderOtherController",
      "lineNumber": 87,
      "calledMethodName": "getOrderPrice",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.getOrderPrice(orderId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "fieldClass": "OrderOtherService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderOtherController",
        "parentPackageName": "other.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.service.OrderOtherServiceImpl",
      "packageName": "other.service",
      "className": "OrderOtherServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "Response",
      "methodName": "getOrderPrice",
      "className": "OrderOtherServiceImpl",
      "packageName": "other.service",
      "methodId": "other.service.OrderOtherServiceImpl.getOrderPrice",
      "classId": "other.service.OrderOtherServiceImpl",
      "line": 318,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "parentPackageName": "other.service",
      "parentClassName": "OrderOtherServiceImpl",
      "parentMethodName": "getOrderPrice",
      "parentClassId": "other.service.OrderOtherServiceImpl",
      "lineNumber": 320,
      "calledMethodName": "findById",
      "calledServiceId": "orderOtherRepository",
      "statementDeclaration": "orderOtherRepository.findById(UUID.fromString(orderId))"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "fieldClass": "OrderOtherRepository",
      "fieldVariable": "orderOtherRepository",
      "parentMethod": {
        "parentClassName": "OrderOtherServiceImpl",
        "parentPackageName": "other.service"
      },
      "line": 25
    },
    "msRepository": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.repository.OrderOtherRepository",
      "packageName": "other.repository",
      "className": "OrderOtherRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "Order",
      "methodName": "findById",
      "className": "OrderOtherRepository",
      "packageName": "other.repository",
      "methodId": "other.repository.OrderOtherRepository.findById",
      "classId": "other.repository.OrderOtherRepository",
      "line": 23,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.controller.OrderOtherController",
      "packageName": "other.controller",
      "className": "OrderOtherController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "HttpEntity",
      "methodName": "payOrder",
      "className": "OrderOtherController",
      "packageName": "other.controller",
      "methodId": "other.controller.OrderOtherController.payOrder",
      "classId": "other.controller.OrderOtherController",
      "line": 90,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/orderOther/orderPay/{orderId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "parentPackageName": "other.controller",
      "parentClassName": "OrderOtherController",
      "parentMethodName": "payOrder",
      "parentClassId": "other.controller.OrderOtherController",
      "lineNumber": 94,
      "calledMethodName": "payOrder",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.payOrder(orderId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "fieldClass": "OrderOtherService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderOtherController",
        "parentPackageName": "other.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.service.OrderOtherServiceImpl",
      "packageName": "other.service",
      "className": "OrderOtherServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "Response",
      "methodName": "payOrder",
      "className": "OrderOtherServiceImpl",
      "packageName": "other.service",
      "methodId": "other.service.OrderOtherServiceImpl.payOrder",
      "classId": "other.service.OrderOtherServiceImpl",
      "line": 330,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "parentPackageName": "other.service",
      "parentClassName": "OrderOtherServiceImpl",
      "parentMethodName": "payOrder",
      "parentClassId": "other.service.OrderOtherServiceImpl",
      "lineNumber": 332,
      "calledMethodName": "findById",
      "calledServiceId": "orderOtherRepository",
      "statementDeclaration": "orderOtherRepository.findById(UUID.fromString(orderId))"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "fieldClass": "OrderOtherRepository",
      "fieldVariable": "orderOtherRepository",
      "parentMethod": {
        "parentClassName": "OrderOtherServiceImpl",
        "parentPackageName": "other.service"
      },
      "line": 25
    },
    "msRepository": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.repository.OrderOtherRepository",
      "packageName": "other.repository",
      "className": "OrderOtherRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "Order",
      "methodName": "findById",
      "className": "OrderOtherRepository",
      "packageName": "other.repository",
      "methodId": "other.repository.OrderOtherRepository.findById",
      "classId": "other.repository.OrderOtherRepository",
      "line": 23,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.controller.OrderOtherController",
      "packageName": "other.controller",
      "className": "OrderOtherController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "HttpEntity",
      "methodName": "getOrderById",
      "className": "OrderOtherController",
      "packageName": "other.controller",
      "methodId": "other.controller.OrderOtherController.getOrderById",
      "classId": "other.controller.OrderOtherController",
      "line": 97,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/orderOther/{orderId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "parentPackageName": "other.controller",
      "parentClassName": "OrderOtherController",
      "parentMethodName": "getOrderById",
      "parentClassId": "other.controller.OrderOtherController",
      "lineNumber": 101,
      "calledMethodName": "getOrderById",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.getOrderById(orderId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "fieldClass": "OrderOtherService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderOtherController",
        "parentPackageName": "other.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.service.OrderOtherServiceImpl",
      "packageName": "other.service",
      "className": "OrderOtherServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "Response",
      "methodName": "getOrderById",
      "className": "OrderOtherServiceImpl",
      "packageName": "other.service",
      "methodId": "other.service.OrderOtherServiceImpl.getOrderById",
      "classId": "other.service.OrderOtherServiceImpl",
      "line": 343,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "parentPackageName": "other.service",
      "parentClassName": "OrderOtherServiceImpl",
      "parentMethodName": "getOrderById",
      "parentClassId": "other.service.OrderOtherServiceImpl",
      "lineNumber": 345,
      "calledMethodName": "findById",
      "calledServiceId": "orderOtherRepository",
      "statementDeclaration": "orderOtherRepository.findById(UUID.fromString(orderId))"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "fieldClass": "OrderOtherRepository",
      "fieldVariable": "orderOtherRepository",
      "parentMethod": {
        "parentClassName": "OrderOtherServiceImpl",
        "parentPackageName": "other.service"
      },
      "line": 25
    },
    "msRepository": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.repository.OrderOtherRepository",
      "packageName": "other.repository",
      "className": "OrderOtherRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "Order",
      "methodName": "findById",
      "className": "OrderOtherRepository",
      "packageName": "other.repository",
      "methodId": "other.repository.OrderOtherRepository.findById",
      "classId": "other.repository.OrderOtherRepository",
      "line": 23,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.controller.OrderOtherController",
      "packageName": "other.controller",
      "className": "OrderOtherController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "HttpEntity",
      "methodName": "modifyOrder",
      "className": "OrderOtherController",
      "packageName": "other.controller",
      "methodId": "other.controller.OrderOtherController.modifyOrder",
      "classId": "other.controller.OrderOtherController",
      "line": 104,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "int"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/orderOther/status/{orderId}/{status}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "parentPackageName": "other.controller",
      "parentClassName": "OrderOtherController",
      "parentMethodName": "modifyOrder",
      "parentClassId": "other.controller.OrderOtherController",
      "lineNumber": 108,
      "calledMethodName": "modifyOrder",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.modifyOrder(orderId, status, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "fieldClass": "OrderOtherService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderOtherController",
        "parentPackageName": "other.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.service.OrderOtherServiceImpl",
      "packageName": "other.service",
      "className": "OrderOtherServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "Response",
      "methodName": "modifyOrder",
      "className": "OrderOtherServiceImpl",
      "packageName": "other.service",
      "methodId": "other.service.OrderOtherServiceImpl.modifyOrder",
      "classId": "other.service.OrderOtherServiceImpl",
      "line": 305,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "int"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "parentPackageName": "other.service",
      "parentClassName": "OrderOtherServiceImpl",
      "parentMethodName": "modifyOrder",
      "parentClassId": "other.service.OrderOtherServiceImpl",
      "lineNumber": 307,
      "calledMethodName": "findById",
      "calledServiceId": "orderOtherRepository",
      "statementDeclaration": "orderOtherRepository.findById(UUID.fromString(orderId))"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "fieldClass": "OrderOtherRepository",
      "fieldVariable": "orderOtherRepository",
      "parentMethod": {
        "parentClassName": "OrderOtherServiceImpl",
        "parentPackageName": "other.service"
      },
      "line": 25
    },
    "msRepository": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.repository.OrderOtherRepository",
      "packageName": "other.repository",
      "className": "OrderOtherRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "Order",
      "methodName": "findById",
      "className": "OrderOtherRepository",
      "packageName": "other.repository",
      "methodId": "other.repository.OrderOtherRepository.findById",
      "classId": "other.repository.OrderOtherRepository",
      "line": 23,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.controller.OrderOtherController",
      "packageName": "other.controller",
      "className": "OrderOtherController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "HttpEntity",
      "methodName": "securityInfoCheck",
      "className": "OrderOtherController",
      "packageName": "other.controller",
      "methodId": "other.controller.OrderOtherController.securityInfoCheck",
      "classId": "other.controller.OrderOtherController",
      "line": 111,
      "msArgumentList": [
        {
          "returnType": "Date"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/orderOther/security/{checkDate}/{accountId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "parentPackageName": "other.controller",
      "parentClassName": "OrderOtherController",
      "parentMethodName": "securityInfoCheck",
      "parentClassId": "other.controller.OrderOtherController",
      "lineNumber": 116,
      "calledMethodName": "checkSecurityAboutOrder",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.checkSecurityAboutOrder(checkDate, accountId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "fieldClass": "OrderOtherService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderOtherController",
        "parentPackageName": "other.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.service.OrderOtherServiceImpl",
      "packageName": "other.service",
      "className": "OrderOtherServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "Response",
      "methodName": "checkSecurityAboutOrder",
      "className": "OrderOtherServiceImpl",
      "packageName": "other.service",
      "methodId": "other.service.OrderOtherServiceImpl.checkSecurityAboutOrder",
      "classId": "other.service.OrderOtherServiceImpl",
      "line": 355,
      "msArgumentList": [
        {
          "returnType": "Date"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "parentPackageName": "other.service",
      "parentClassName": "OrderOtherServiceImpl",
      "parentMethodName": "checkSecurityAboutOrder",
      "parentClassId": "other.service.OrderOtherServiceImpl",
      "lineNumber": 358,
      "calledMethodName": "findByAccountId",
      "calledServiceId": "orderOtherRepository",
      "statementDeclaration": "orderOtherRepository.findByAccountId(UUID.fromString(accountId))"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "fieldClass": "OrderOtherRepository",
      "fieldVariable": "orderOtherRepository",
      "parentMethod": {
        "parentClassName": "OrderOtherServiceImpl",
        "parentPackageName": "other.service"
      },
      "line": 25
    },
    "msRepository": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.repository.OrderOtherRepository",
      "packageName": "other.repository",
      "className": "OrderOtherRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "ArrayList\u003cOrder\u003e",
      "methodName": "findByAccountId",
      "className": "OrderOtherRepository",
      "packageName": "other.repository",
      "methodId": "other.repository.OrderOtherRepository.findByAccountId",
      "classId": "other.repository.OrderOtherRepository",
      "line": 40,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.controller.OrderOtherController",
      "packageName": "other.controller",
      "className": "OrderOtherController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "HttpEntity",
      "methodName": "saveOrderInfo",
      "className": "OrderOtherController",
      "packageName": "other.controller",
      "methodId": "other.controller.OrderOtherController.saveOrderInfo",
      "classId": "other.controller.OrderOtherController",
      "line": 119,
      "msArgumentList": [
        {
          "returnType": "Order"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PutMapping",
          "key": "path",
          "value": "\"/orderOther\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "parentPackageName": "other.controller",
      "parentClassName": "OrderOtherController",
      "parentMethodName": "saveOrderInfo",
      "parentClassId": "other.controller.OrderOtherController",
      "lineNumber": 125,
      "calledMethodName": "saveChanges",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.saveChanges(orderInfo, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "fieldClass": "OrderOtherService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderOtherController",
        "parentPackageName": "other.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.service.OrderOtherServiceImpl",
      "packageName": "other.service",
      "className": "OrderOtherServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "Response",
      "methodName": "saveChanges",
      "className": "OrderOtherServiceImpl",
      "packageName": "other.service",
      "methodId": "other.service.OrderOtherServiceImpl.saveChanges",
      "classId": "other.service.OrderOtherServiceImpl",
      "line": 213,
      "msArgumentList": [
        {
          "returnType": "Order"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "parentPackageName": "other.service",
      "parentClassName": "OrderOtherServiceImpl",
      "parentMethodName": "saveChanges",
      "parentClassId": "other.service.OrderOtherServiceImpl",
      "lineNumber": 215,
      "calledMethodName": "findById",
      "calledServiceId": "orderOtherRepository",
      "statementDeclaration": "orderOtherRepository.findById(order.getId())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "fieldClass": "OrderOtherRepository",
      "fieldVariable": "orderOtherRepository",
      "parentMethod": {
        "parentClassName": "OrderOtherServiceImpl",
        "parentPackageName": "other.service"
      },
      "line": 25
    },
    "msRepository": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.repository.OrderOtherRepository",
      "packageName": "other.repository",
      "className": "OrderOtherRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "Order",
      "methodName": "findById",
      "className": "OrderOtherRepository",
      "packageName": "other.repository",
      "methodId": "other.repository.OrderOtherRepository.findById",
      "classId": "other.repository.OrderOtherRepository",
      "line": 23,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.controller.OrderOtherController",
      "packageName": "other.controller",
      "className": "OrderOtherController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "HttpEntity",
      "methodName": "updateOrder",
      "className": "OrderOtherController",
      "packageName": "other.controller",
      "methodId": "other.controller.OrderOtherController.updateOrder",
      "classId": "other.controller.OrderOtherController",
      "line": 128,
      "msArgumentList": [
        {
          "returnType": "Order"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PutMapping",
          "key": "path",
          "value": "\"/orderOther/admin\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "parentPackageName": "other.controller",
      "parentClassName": "OrderOtherController",
      "parentMethodName": "updateOrder",
      "parentClassId": "other.controller.OrderOtherController",
      "lineNumber": 132,
      "calledMethodName": "updateOrder",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.updateOrder(order, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "fieldClass": "OrderOtherService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderOtherController",
        "parentPackageName": "other.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.service.OrderOtherServiceImpl",
      "packageName": "other.service",
      "className": "OrderOtherServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "Response",
      "methodName": "updateOrder",
      "className": "OrderOtherServiceImpl",
      "packageName": "other.service",
      "methodId": "other.service.OrderOtherServiceImpl.updateOrder",
      "classId": "other.service.OrderOtherServiceImpl",
      "line": 409,
      "msArgumentList": [
        {
          "returnType": "Order"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "parentPackageName": "other.service",
      "parentClassName": "OrderOtherServiceImpl",
      "parentMethodName": "updateOrder",
      "parentClassId": "other.service.OrderOtherServiceImpl",
      "lineNumber": 412,
      "calledMethodName": "findById",
      "calledServiceId": "orderOtherRepository",
      "statementDeclaration": "orderOtherRepository.findById(order.getId())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "fieldClass": "OrderOtherRepository",
      "fieldVariable": "orderOtherRepository",
      "parentMethod": {
        "parentClassName": "OrderOtherServiceImpl",
        "parentPackageName": "other.service"
      },
      "line": 25
    },
    "msRepository": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.repository.OrderOtherRepository",
      "packageName": "other.repository",
      "className": "OrderOtherRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "Order",
      "methodName": "findById",
      "className": "OrderOtherRepository",
      "packageName": "other.repository",
      "methodId": "other.repository.OrderOtherRepository.findById",
      "classId": "other.repository.OrderOtherRepository",
      "line": 23,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.controller.OrderOtherController",
      "packageName": "other.controller",
      "className": "OrderOtherController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "HttpEntity",
      "methodName": "deleteOrder",
      "className": "OrderOtherController",
      "packageName": "other.controller",
      "methodId": "other.controller.OrderOtherController.deleteOrder",
      "classId": "other.controller.OrderOtherController",
      "line": 135,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "DeleteMapping",
          "key": "path",
          "value": "\"/orderOther/{orderId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "parentPackageName": "other.controller",
      "parentClassName": "OrderOtherController",
      "parentMethodName": "deleteOrder",
      "parentClassId": "other.controller.OrderOtherController",
      "lineNumber": 139,
      "calledMethodName": "deleteOrder",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.deleteOrder(orderId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "fieldClass": "OrderOtherService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderOtherController",
        "parentPackageName": "other.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.service.OrderOtherServiceImpl",
      "packageName": "other.service",
      "className": "OrderOtherServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "Response",
      "methodName": "deleteOrder",
      "className": "OrderOtherServiceImpl",
      "packageName": "other.service",
      "methodId": "other.service.OrderOtherServiceImpl.deleteOrder",
      "classId": "other.service.OrderOtherServiceImpl",
      "line": 380,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "parentPackageName": "other.service",
      "parentClassName": "OrderOtherServiceImpl",
      "parentMethodName": "deleteOrder",
      "parentClassId": "other.service.OrderOtherServiceImpl",
      "lineNumber": 383,
      "calledMethodName": "findById",
      "calledServiceId": "orderOtherRepository",
      "statementDeclaration": "orderOtherRepository.findById(orderUuid)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "fieldClass": "OrderOtherRepository",
      "fieldVariable": "orderOtherRepository",
      "parentMethod": {
        "parentClassName": "OrderOtherServiceImpl",
        "parentPackageName": "other.service"
      },
      "line": 25
    },
    "msRepository": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.repository.OrderOtherRepository",
      "packageName": "other.repository",
      "className": "OrderOtherRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "Order",
      "methodName": "findById",
      "className": "OrderOtherRepository",
      "packageName": "other.repository",
      "methodId": "other.repository.OrderOtherRepository.findById",
      "classId": "other.repository.OrderOtherRepository",
      "line": 23,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.controller.OrderOtherController",
      "packageName": "other.controller",
      "className": "OrderOtherController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "HttpEntity",
      "methodName": "findAllOrder",
      "className": "OrderOtherController",
      "packageName": "other.controller",
      "methodId": "other.controller.OrderOtherController.findAllOrder",
      "classId": "other.controller.OrderOtherController",
      "line": 144,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/orderOther\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "parentPackageName": "other.controller",
      "parentClassName": "OrderOtherController",
      "parentMethodName": "findAllOrder",
      "parentClassId": "other.controller.OrderOtherController",
      "lineNumber": 148,
      "calledMethodName": "getAllOrders",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.getAllOrders(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/controller/OrderOtherController.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "fieldClass": "OrderOtherService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderOtherController",
        "parentPackageName": "other.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.service.OrderOtherServiceImpl",
      "packageName": "other.service",
      "className": "OrderOtherServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "Response",
      "methodName": "getAllOrders",
      "className": "OrderOtherServiceImpl",
      "packageName": "other.service",
      "methodId": "other.service.OrderOtherServiceImpl.getAllOrders",
      "classId": "other.service.OrderOtherServiceImpl",
      "line": 294,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "parentPackageName": "other.service",
      "parentClassName": "OrderOtherServiceImpl",
      "parentMethodName": "getAllOrders",
      "parentClassId": "other.service.OrderOtherServiceImpl",
      "lineNumber": 296,
      "calledMethodName": "findAll",
      "calledServiceId": "orderOtherRepository",
      "statementDeclaration": "orderOtherRepository.findAll()"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/service/OrderOtherServiceImpl.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "fieldClass": "OrderOtherRepository",
      "fieldVariable": "orderOtherRepository",
      "parentMethod": {
        "parentClassName": "OrderOtherServiceImpl",
        "parentPackageName": "other.service"
      },
      "line": 25
    },
    "msRepository": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "classId": "other.repository.OrderOtherRepository",
      "packageName": "other.repository",
      "className": "OrderOtherRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-order-other-service/src/main/java/other/repository/OrderOtherRepository.java",
        "directoryName": "/ts-order-other-service/src/main/java/other"
      },
      "returnType": "ArrayList\u003cOrder\u003e",
      "methodName": "findAll",
      "className": "OrderOtherRepository",
      "packageName": "other.repository",
      "methodId": "other.repository.OrderOtherRepository.findAll",
      "classId": "other.repository.OrderOtherRepository",
      "line": 31,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/controller/RouteController.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "classId": "route.controller.RouteController",
      "packageName": "route.controller",
      "className": "RouteController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/controller/RouteController.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "RouteController",
      "packageName": "route.controller",
      "methodId": "route.controller.RouteController.home",
      "classId": "route.controller.RouteController",
      "line": 26,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/controller/RouteController.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "classId": "route.controller.RouteController",
      "packageName": "route.controller",
      "className": "RouteController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/controller/RouteController.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "returnType": "ResponseEntity\u003cResponse\u003e",
      "methodName": "createAndModifyRoute",
      "className": "RouteController",
      "packageName": "route.controller",
      "methodId": "route.controller.RouteController.createAndModifyRoute",
      "classId": "route.controller.RouteController",
      "line": 31,
      "msArgumentList": [
        {
          "returnType": "RouteInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "path",
          "value": "\"/routes\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/controller/RouteController.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "parentPackageName": "route.controller",
      "parentClassName": "RouteController",
      "parentMethodName": "createAndModifyRoute",
      "parentClassId": "route.controller.RouteController",
      "lineNumber": 34,
      "calledMethodName": "createAndModify",
      "calledServiceId": "routeService",
      "statementDeclaration": "routeService.createAndModify(createAndModifyRouteInfo, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/controller/RouteController.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "fieldClass": "RouteService",
      "fieldVariable": "routeService",
      "parentMethod": {
        "parentClassName": "RouteController",
        "parentPackageName": "route.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/service/RouteServiceImpl.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "classId": "route.service.RouteServiceImpl",
      "packageName": "route.service",
      "className": "RouteServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/service/RouteServiceImpl.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "returnType": "Response",
      "methodName": "createAndModify",
      "className": "RouteServiceImpl",
      "packageName": "route.service",
      "methodId": "route.service.RouteServiceImpl.createAndModify",
      "classId": "route.service.RouteServiceImpl",
      "line": 29,
      "msArgumentList": [
        {
          "returnType": "RouteInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/service/RouteServiceImpl.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "parentPackageName": "route.service",
      "parentClassName": "RouteServiceImpl",
      "parentMethodName": "createAndModify",
      "parentClassId": "route.service.RouteServiceImpl",
      "lineNumber": 58,
      "calledMethodName": "findById",
      "calledServiceId": "routeRepository",
      "statementDeclaration": "routeRepository.findById(info.getId())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/service/RouteServiceImpl.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "fieldClass": "RouteRepository",
      "fieldVariable": "routeRepository",
      "parentMethod": {
        "parentClassName": "RouteServiceImpl",
        "parentPackageName": "route.service"
      },
      "line": 23
    },
    "msRepository": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/repository/RouteRepository.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "classId": "route.repository.RouteRepository",
      "packageName": "route.repository",
      "className": "RouteRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/repository/RouteRepository.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "returnType": "Route",
      "methodName": "findById",
      "className": "RouteRepository",
      "packageName": "route.repository",
      "methodId": "route.repository.RouteRepository.findById",
      "classId": "route.repository.RouteRepository",
      "line": 21,
      "msArgumentList": [
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/controller/RouteController.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "classId": "route.controller.RouteController",
      "packageName": "route.controller",
      "className": "RouteController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/controller/RouteController.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "returnType": "HttpEntity",
      "methodName": "deleteRoute",
      "className": "RouteController",
      "packageName": "route.controller",
      "methodId": "route.controller.RouteController.deleteRoute",
      "classId": "route.controller.RouteController",
      "line": 37,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "DeleteMapping",
          "key": "path",
          "value": "\"/routes/{routeId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/controller/RouteController.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "parentPackageName": "route.controller",
      "parentClassName": "RouteController",
      "parentMethodName": "deleteRoute",
      "parentClassId": "route.controller.RouteController",
      "lineNumber": 40,
      "calledMethodName": "deleteRoute",
      "calledServiceId": "routeService",
      "statementDeclaration": "routeService.deleteRoute(routeId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/controller/RouteController.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "fieldClass": "RouteService",
      "fieldVariable": "routeService",
      "parentMethod": {
        "parentClassName": "RouteController",
        "parentPackageName": "route.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/service/RouteServiceImpl.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "classId": "route.service.RouteServiceImpl",
      "packageName": "route.service",
      "className": "RouteServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/service/RouteServiceImpl.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "returnType": "Response",
      "methodName": "deleteRoute",
      "className": "RouteServiceImpl",
      "packageName": "route.service",
      "methodId": "route.service.RouteServiceImpl.deleteRoute",
      "classId": "route.service.RouteServiceImpl",
      "line": 74,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/service/RouteServiceImpl.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "parentPackageName": "route.service",
      "parentClassName": "RouteServiceImpl",
      "parentMethodName": "deleteRoute",
      "parentClassId": "route.service.RouteServiceImpl",
      "lineNumber": 76,
      "calledMethodName": "removeRouteById",
      "calledServiceId": "routeRepository",
      "statementDeclaration": "routeRepository.removeRouteById(routeId)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/service/RouteServiceImpl.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "fieldClass": "RouteRepository",
      "fieldVariable": "routeRepository",
      "parentMethod": {
        "parentClassName": "RouteServiceImpl",
        "parentPackageName": "route.service"
      },
      "line": 23
    },
    "msRepository": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/repository/RouteRepository.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "classId": "route.repository.RouteRepository",
      "packageName": "route.repository",
      "className": "RouteRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/repository/RouteRepository.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "returnType": "void",
      "methodName": "removeRouteById",
      "className": "RouteRepository",
      "packageName": "route.repository",
      "methodId": "route.repository.RouteRepository.removeRouteById",
      "classId": "route.repository.RouteRepository",
      "line": 37,
      "msArgumentList": [
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/controller/RouteController.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "classId": "route.controller.RouteController",
      "packageName": "route.controller",
      "className": "RouteController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/controller/RouteController.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "returnType": "HttpEntity",
      "methodName": "queryById",
      "className": "RouteController",
      "packageName": "route.controller",
      "methodId": "route.controller.RouteController.queryById",
      "classId": "route.controller.RouteController",
      "line": 43,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/routes/{routeId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/controller/RouteController.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "parentPackageName": "route.controller",
      "parentClassName": "RouteController",
      "parentMethodName": "queryById",
      "parentClassId": "route.controller.RouteController",
      "lineNumber": 46,
      "calledMethodName": "getRouteById",
      "calledServiceId": "routeService",
      "statementDeclaration": "routeService.getRouteById(routeId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/controller/RouteController.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "fieldClass": "RouteService",
      "fieldVariable": "routeService",
      "parentMethod": {
        "parentClassName": "RouteController",
        "parentPackageName": "route.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/service/RouteServiceImpl.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "classId": "route.service.RouteServiceImpl",
      "packageName": "route.service",
      "className": "RouteServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/service/RouteServiceImpl.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "returnType": "Response",
      "methodName": "getRouteById",
      "className": "RouteServiceImpl",
      "packageName": "route.service",
      "methodId": "route.service.RouteServiceImpl.getRouteById",
      "classId": "route.service.RouteServiceImpl",
      "line": 86,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/service/RouteServiceImpl.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "parentPackageName": "route.service",
      "parentClassName": "RouteServiceImpl",
      "parentMethodName": "getRouteById",
      "parentClassId": "route.service.RouteServiceImpl",
      "lineNumber": 88,
      "calledMethodName": "findById",
      "calledServiceId": "routeRepository",
      "statementDeclaration": "routeRepository.findById(routeId)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/service/RouteServiceImpl.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "fieldClass": "RouteRepository",
      "fieldVariable": "routeRepository",
      "parentMethod": {
        "parentClassName": "RouteServiceImpl",
        "parentPackageName": "route.service"
      },
      "line": 23
    },
    "msRepository": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/repository/RouteRepository.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "classId": "route.repository.RouteRepository",
      "packageName": "route.repository",
      "className": "RouteRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/repository/RouteRepository.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "returnType": "Route",
      "methodName": "findById",
      "className": "RouteRepository",
      "packageName": "route.repository",
      "methodId": "route.repository.RouteRepository.findById",
      "classId": "route.repository.RouteRepository",
      "line": 21,
      "msArgumentList": [
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/controller/RouteController.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "classId": "route.controller.RouteController",
      "packageName": "route.controller",
      "className": "RouteController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/controller/RouteController.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "returnType": "HttpEntity",
      "methodName": "queryAll",
      "className": "RouteController",
      "packageName": "route.controller",
      "methodId": "route.controller.RouteController.queryAll",
      "classId": "route.controller.RouteController",
      "line": 49,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/routes\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/controller/RouteController.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "parentPackageName": "route.controller",
      "parentClassName": "RouteController",
      "parentMethodName": "queryAll",
      "parentClassId": "route.controller.RouteController",
      "lineNumber": 52,
      "calledMethodName": "getAllRoutes",
      "calledServiceId": "routeService",
      "statementDeclaration": "routeService.getAllRoutes(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/controller/RouteController.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "fieldClass": "RouteService",
      "fieldVariable": "routeService",
      "parentMethod": {
        "parentClassName": "RouteController",
        "parentPackageName": "route.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/service/RouteServiceImpl.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "classId": "route.service.RouteServiceImpl",
      "packageName": "route.service",
      "className": "RouteServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/service/RouteServiceImpl.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "returnType": "Response",
      "methodName": "getAllRoutes",
      "className": "RouteServiceImpl",
      "packageName": "route.service",
      "methodId": "route.service.RouteServiceImpl.getAllRoutes",
      "classId": "route.service.RouteServiceImpl",
      "line": 118,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/service/RouteServiceImpl.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "parentPackageName": "route.service",
      "parentClassName": "RouteServiceImpl",
      "parentMethodName": "getAllRoutes",
      "parentClassId": "route.service.RouteServiceImpl",
      "lineNumber": 120,
      "calledMethodName": "findAll",
      "calledServiceId": "routeRepository",
      "statementDeclaration": "routeRepository.findAll()"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/service/RouteServiceImpl.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "fieldClass": "RouteRepository",
      "fieldVariable": "routeRepository",
      "parentMethod": {
        "parentClassName": "RouteServiceImpl",
        "parentPackageName": "route.service"
      },
      "line": 23
    },
    "msRepository": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/repository/RouteRepository.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "classId": "route.repository.RouteRepository",
      "packageName": "route.repository",
      "className": "RouteRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/repository/RouteRepository.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "returnType": "ArrayList\u003cRoute\u003e",
      "methodName": "findAll",
      "className": "RouteRepository",
      "packageName": "route.repository",
      "methodId": "route.repository.RouteRepository.findAll",
      "classId": "route.repository.RouteRepository",
      "line": 29,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/controller/RouteController.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "classId": "route.controller.RouteController",
      "packageName": "route.controller",
      "className": "RouteController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/controller/RouteController.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "returnType": "HttpEntity",
      "methodName": "queryByStartAndTerminal",
      "className": "RouteController",
      "packageName": "route.controller",
      "methodId": "route.controller.RouteController.queryByStartAndTerminal",
      "classId": "route.controller.RouteController",
      "line": 55,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/routes/{startId}/{terminalId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/controller/RouteController.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "parentPackageName": "route.controller",
      "parentClassName": "RouteController",
      "parentMethodName": "queryByStartAndTerminal",
      "parentClassId": "route.controller.RouteController",
      "lineNumber": 60,
      "calledMethodName": "getRouteByStartAndTerminal",
      "calledServiceId": "routeService",
      "statementDeclaration": "routeService.getRouteByStartAndTerminal(startId, terminalId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/controller/RouteController.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "fieldClass": "RouteService",
      "fieldVariable": "routeService",
      "parentMethod": {
        "parentClassName": "RouteController",
        "parentPackageName": "route.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/service/RouteServiceImpl.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "classId": "route.service.RouteServiceImpl",
      "packageName": "route.service",
      "className": "RouteServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/service/RouteServiceImpl.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "returnType": "Response",
      "methodName": "getRouteByStartAndTerminal",
      "className": "RouteServiceImpl",
      "packageName": "route.service",
      "methodId": "route.service.RouteServiceImpl.getRouteByStartAndTerminal",
      "classId": "route.service.RouteServiceImpl",
      "line": 98,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/service/RouteServiceImpl.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "parentPackageName": "route.service",
      "parentClassName": "RouteServiceImpl",
      "parentMethodName": "getRouteByStartAndTerminal",
      "parentClassId": "route.service.RouteServiceImpl",
      "lineNumber": 100,
      "calledMethodName": "findAll",
      "calledServiceId": "routeRepository",
      "statementDeclaration": "routeRepository.findAll()"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/service/RouteServiceImpl.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "fieldClass": "RouteRepository",
      "fieldVariable": "routeRepository",
      "parentMethod": {
        "parentClassName": "RouteServiceImpl",
        "parentPackageName": "route.service"
      },
      "line": 23
    },
    "msRepository": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/repository/RouteRepository.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "classId": "route.repository.RouteRepository",
      "packageName": "route.repository",
      "className": "RouteRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-route-service/src/main/java/route/repository/RouteRepository.java",
        "directoryName": "/ts-route-service/src/main/java/route"
      },
      "returnType": "ArrayList\u003cRoute\u003e",
      "methodName": "findAll",
      "className": "RouteRepository",
      "packageName": "route.repository",
      "methodId": "route.repository.RouteRepository.findAll",
      "classId": "route.repository.RouteRepository",
      "line": 29,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/controller/PriceController.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "classId": "price.controller.PriceController",
      "packageName": "price.controller",
      "className": "PriceController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/controller/PriceController.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "PriceController",
      "packageName": "price.controller",
      "methodId": "price.controller.PriceController.home",
      "classId": "price.controller.PriceController",
      "line": 27,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/prices/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/controller/PriceController.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "classId": "price.controller.PriceController",
      "packageName": "price.controller",
      "className": "PriceController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/controller/PriceController.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "returnType": "HttpEntity",
      "methodName": "query",
      "className": "PriceController",
      "packageName": "price.controller",
      "methodId": "price.controller.PriceController.query",
      "classId": "price.controller.PriceController",
      "line": 32,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/prices/{routeId}/{trainType}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/controller/PriceController.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "parentPackageName": "price.controller",
      "parentClassName": "PriceController",
      "parentMethodName": "query",
      "parentClassId": "price.controller.PriceController",
      "lineNumber": 36,
      "calledMethodName": "findByRouteIdAndTrainType",
      "calledServiceId": "service",
      "statementDeclaration": "service.findByRouteIdAndTrainType(routeId, trainType, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/controller/PriceController.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "fieldClass": "PriceService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "PriceController",
        "parentPackageName": "price.controller"
      },
      "line": 22
    },
    "msService": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/service/PriceServiceImpl.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "classId": "price.service.PriceServiceImpl",
      "packageName": "price.service",
      "className": "PriceServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/service/PriceServiceImpl.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "returnType": "Response",
      "methodName": "findByRouteIdAndTrainType",
      "className": "PriceServiceImpl",
      "packageName": "price.service",
      "methodId": "price.service.PriceServiceImpl.findByRouteIdAndTrainType",
      "classId": "price.service.PriceServiceImpl",
      "line": 65,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/service/PriceServiceImpl.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "parentPackageName": "price.service",
      "parentClassName": "PriceServiceImpl",
      "parentMethodName": "findByRouteIdAndTrainType",
      "parentClassId": "price.service.PriceServiceImpl",
      "lineNumber": 68,
      "calledMethodName": "findByRouteIdAndTrainType",
      "calledServiceId": "priceConfigRepository",
      "statementDeclaration": "priceConfigRepository.findByRouteIdAndTrainType(routeId, trainType)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/service/PriceServiceImpl.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "fieldClass": "PriceConfigRepository",
      "fieldVariable": "priceConfigRepository",
      "parentMethod": {
        "parentClassName": "PriceServiceImpl",
        "parentPackageName": "price.service"
      },
      "line": 23
    },
    "msRepository": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/repository/PriceConfigRepository.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "classId": "price.repository.PriceConfigRepository",
      "packageName": "price.repository",
      "className": "PriceConfigRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/repository/PriceConfigRepository.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "returnType": "PriceConfig",
      "methodName": "findByRouteIdAndTrainType",
      "className": "PriceConfigRepository",
      "packageName": "price.repository",
      "methodId": "price.repository.PriceConfigRepository.findByRouteIdAndTrainType",
      "classId": "price.repository.PriceConfigRepository",
      "line": 19,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/controller/PriceController.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "classId": "price.controller.PriceController",
      "packageName": "price.controller",
      "className": "PriceController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/controller/PriceController.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "returnType": "HttpEntity",
      "methodName": "queryAll",
      "className": "PriceController",
      "packageName": "price.controller",
      "methodId": "price.controller.PriceController.queryAll",
      "classId": "price.controller.PriceController",
      "line": 39,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/prices\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/controller/PriceController.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "parentPackageName": "price.controller",
      "parentClassName": "PriceController",
      "parentMethodName": "queryAll",
      "parentClassId": "price.controller.PriceController",
      "lineNumber": 42,
      "calledMethodName": "findAllPriceConfig",
      "calledServiceId": "service",
      "statementDeclaration": "service.findAllPriceConfig(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/controller/PriceController.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "fieldClass": "PriceService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "PriceController",
        "parentPackageName": "price.controller"
      },
      "line": 22
    },
    "msService": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/service/PriceServiceImpl.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "classId": "price.service.PriceServiceImpl",
      "packageName": "price.service",
      "className": "PriceServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/service/PriceServiceImpl.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "returnType": "Response",
      "methodName": "findAllPriceConfig",
      "className": "PriceServiceImpl",
      "packageName": "price.service",
      "methodId": "price.service.PriceServiceImpl.findAllPriceConfig",
      "classId": "price.service.PriceServiceImpl",
      "line": 80,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/service/PriceServiceImpl.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "parentPackageName": "price.service",
      "parentClassName": "PriceServiceImpl",
      "parentMethodName": "findAllPriceConfig",
      "parentClassId": "price.service.PriceServiceImpl",
      "lineNumber": 82,
      "calledMethodName": "findAll",
      "calledServiceId": "priceConfigRepository",
      "statementDeclaration": "priceConfigRepository.findAll()"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/service/PriceServiceImpl.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "fieldClass": "PriceConfigRepository",
      "fieldVariable": "priceConfigRepository",
      "parentMethod": {
        "parentClassName": "PriceServiceImpl",
        "parentPackageName": "price.service"
      },
      "line": 23
    },
    "msRepository": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/repository/PriceConfigRepository.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "classId": "price.repository.PriceConfigRepository",
      "packageName": "price.repository",
      "className": "PriceConfigRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/repository/PriceConfigRepository.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "returnType": "List\u003cPriceConfig\u003e",
      "methodName": "findAll",
      "className": "PriceConfigRepository",
      "packageName": "price.repository",
      "methodId": "price.repository.PriceConfigRepository.findAll",
      "classId": "price.repository.PriceConfigRepository",
      "line": 22,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/controller/PriceController.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "classId": "price.controller.PriceController",
      "packageName": "price.controller",
      "className": "PriceController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/controller/PriceController.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "returnType": "HttpEntity\u003c?\u003e",
      "methodName": "create",
      "className": "PriceController",
      "packageName": "price.controller",
      "methodId": "price.controller.PriceController.create",
      "classId": "price.controller.PriceController",
      "line": 45,
      "msArgumentList": [
        {
          "returnType": "PriceConfig"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/prices\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/controller/PriceController.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "parentPackageName": "price.controller",
      "parentClassName": "PriceController",
      "parentMethodName": "create",
      "parentClassId": "price.controller.PriceController",
      "lineNumber": 49,
      "calledMethodName": "createNewPriceConfig",
      "calledServiceId": "service",
      "statementDeclaration": "service.createNewPriceConfig(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/controller/PriceController.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "fieldClass": "PriceService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "PriceController",
        "parentPackageName": "price.controller"
      },
      "line": 22
    },
    "msService": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/service/PriceServiceImpl.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "classId": "price.service.PriceServiceImpl",
      "packageName": "price.service",
      "className": "PriceServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/service/PriceServiceImpl.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "returnType": "Response",
      "methodName": "createNewPriceConfig",
      "className": "PriceServiceImpl",
      "packageName": "price.service",
      "methodId": "price.service.PriceServiceImpl.createNewPriceConfig",
      "classId": "price.service.PriceServiceImpl",
      "line": 30,
      "msArgumentList": [
        {
          "returnType": "PriceConfig"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/service/PriceServiceImpl.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "parentPackageName": "price.service",
      "parentClassName": "PriceServiceImpl",
      "parentMethodName": "createNewPriceConfig",
      "parentClassId": "price.service.PriceServiceImpl",
      "lineNumber": 45,
      "calledMethodName": "findById",
      "calledServiceId": "priceConfigRepository",
      "statementDeclaration": "priceConfigRepository.findById(createAndModifyPriceConfig.getId())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/service/PriceServiceImpl.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "fieldClass": "PriceConfigRepository",
      "fieldVariable": "priceConfigRepository",
      "parentMethod": {
        "parentClassName": "PriceServiceImpl",
        "parentPackageName": "price.service"
      },
      "line": 23
    },
    "msRepository": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/repository/PriceConfigRepository.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "classId": "price.repository.PriceConfigRepository",
      "packageName": "price.repository",
      "className": "PriceConfigRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/repository/PriceConfigRepository.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "returnType": "PriceConfig",
      "methodName": "findById",
      "className": "PriceConfigRepository",
      "packageName": "price.repository",
      "methodId": "price.repository.PriceConfigRepository.findById",
      "classId": "price.repository.PriceConfigRepository",
      "line": 16,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/controller/PriceController.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "classId": "price.controller.PriceController",
      "packageName": "price.controller",
      "className": "PriceController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/controller/PriceController.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "returnType": "HttpEntity",
      "methodName": "delete",
      "className": "PriceController",
      "packageName": "price.controller",
      "methodId": "price.controller.PriceController.delete",
      "classId": "price.controller.PriceController",
      "line": 52,
      "msArgumentList": [
        {
          "returnType": "PriceConfig"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "DeleteMapping",
          "key": "value",
          "value": "\"/prices\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/controller/PriceController.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "parentPackageName": "price.controller",
      "parentClassName": "PriceController",
      "parentMethodName": "delete",
      "parentClassId": "price.controller.PriceController",
      "lineNumber": 55,
      "calledMethodName": "deletePriceConfig",
      "calledServiceId": "service",
      "statementDeclaration": "service.deletePriceConfig(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/controller/PriceController.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "fieldClass": "PriceService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "PriceController",
        "parentPackageName": "price.controller"
      },
      "line": 22
    },
    "msService": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/service/PriceServiceImpl.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "classId": "price.service.PriceServiceImpl",
      "packageName": "price.service",
      "className": "PriceServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/service/PriceServiceImpl.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "returnType": "Response",
      "methodName": "deletePriceConfig",
      "className": "PriceServiceImpl",
      "packageName": "price.service",
      "methodId": "price.service.PriceServiceImpl.deletePriceConfig",
      "classId": "price.service.PriceServiceImpl",
      "line": 96,
      "msArgumentList": [
        {
          "returnType": "PriceConfig"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/service/PriceServiceImpl.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "parentPackageName": "price.service",
      "parentClassName": "PriceServiceImpl",
      "parentMethodName": "deletePriceConfig",
      "parentClassId": "price.service.PriceServiceImpl",
      "lineNumber": 98,
      "calledMethodName": "findById",
      "calledServiceId": "priceConfigRepository",
      "statementDeclaration": "priceConfigRepository.findById(c.getId())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/service/PriceServiceImpl.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "fieldClass": "PriceConfigRepository",
      "fieldVariable": "priceConfigRepository",
      "parentMethod": {
        "parentClassName": "PriceServiceImpl",
        "parentPackageName": "price.service"
      },
      "line": 23
    },
    "msRepository": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/repository/PriceConfigRepository.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "classId": "price.repository.PriceConfigRepository",
      "packageName": "price.repository",
      "className": "PriceConfigRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/repository/PriceConfigRepository.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "returnType": "PriceConfig",
      "methodName": "findById",
      "className": "PriceConfigRepository",
      "packageName": "price.repository",
      "methodId": "price.repository.PriceConfigRepository.findById",
      "classId": "price.repository.PriceConfigRepository",
      "line": 16,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/controller/PriceController.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "classId": "price.controller.PriceController",
      "packageName": "price.controller",
      "className": "PriceController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/controller/PriceController.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "returnType": "HttpEntity",
      "methodName": "update",
      "className": "PriceController",
      "packageName": "price.controller",
      "methodId": "price.controller.PriceController.update",
      "classId": "price.controller.PriceController",
      "line": 58,
      "msArgumentList": [
        {
          "returnType": "PriceConfig"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PutMapping",
          "key": "value",
          "value": "\"/prices\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/controller/PriceController.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "parentPackageName": "price.controller",
      "parentClassName": "PriceController",
      "parentMethodName": "update",
      "parentClassId": "price.controller.PriceController",
      "lineNumber": 61,
      "calledMethodName": "updatePriceConfig",
      "calledServiceId": "service",
      "statementDeclaration": "service.updatePriceConfig(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/controller/PriceController.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "fieldClass": "PriceService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "PriceController",
        "parentPackageName": "price.controller"
      },
      "line": 22
    },
    "msService": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/service/PriceServiceImpl.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "classId": "price.service.PriceServiceImpl",
      "packageName": "price.service",
      "className": "PriceServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/service/PriceServiceImpl.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "returnType": "Response",
      "methodName": "updatePriceConfig",
      "className": "PriceServiceImpl",
      "packageName": "price.service",
      "methodId": "price.service.PriceServiceImpl.updatePriceConfig",
      "classId": "price.service.PriceServiceImpl",
      "line": 114,
      "msArgumentList": [
        {
          "returnType": "PriceConfig"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/service/PriceServiceImpl.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "parentPackageName": "price.service",
      "parentClassName": "PriceServiceImpl",
      "parentMethodName": "updatePriceConfig",
      "parentClassId": "price.service.PriceServiceImpl",
      "lineNumber": 116,
      "calledMethodName": "findById",
      "calledServiceId": "priceConfigRepository",
      "statementDeclaration": "priceConfigRepository.findById(c.getId())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/service/PriceServiceImpl.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "fieldClass": "PriceConfigRepository",
      "fieldVariable": "priceConfigRepository",
      "parentMethod": {
        "parentClassName": "PriceServiceImpl",
        "parentPackageName": "price.service"
      },
      "line": 23
    },
    "msRepository": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/repository/PriceConfigRepository.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "classId": "price.repository.PriceConfigRepository",
      "packageName": "price.repository",
      "className": "PriceConfigRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-price-service/src/main/java/price/repository/PriceConfigRepository.java",
        "directoryName": "/ts-price-service/src/main/java/price"
      },
      "returnType": "PriceConfig",
      "methodName": "findById",
      "className": "PriceConfigRepository",
      "packageName": "price.repository",
      "methodId": "price.repository.PriceConfigRepository.findById",
      "classId": "price.repository.PriceConfigRepository",
      "line": 16,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-preserve-service/src/main/java/preserve/controller/PreserveController.java",
        "directoryName": "/ts-preserve-service/src/main/java/preserve"
      },
      "classId": "preserve.controller.PreserveController",
      "packageName": "preserve.controller",
      "className": "PreserveController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-preserve-service/src/main/java/preserve/controller/PreserveController.java",
        "directoryName": "/ts-preserve-service/src/main/java/preserve"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "PreserveController",
      "packageName": "preserve.controller",
      "methodId": "preserve.controller.PreserveController.home",
      "classId": "preserve.controller.PreserveController",
      "line": 26,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
        "msId": {
            "path": "/ts-preserve-service/src/main/java/preserve/controller/PreserveController.java"
        },
        "classId": "preserve.controller.PreserveController",
        "packageName": "preserve.controller",
        "className": "PreserveController",
        "role": "CONTROLLER"
    },
    "msControllerMethod": {
        "msId": {
            "path": "/ts-preserve-service/src/main/java/preserve/controller/PreserveController.java"
        },
        "returnType": "HttpEntity",
        "methodName": "preserve",
        "className": "PreserveController",
        "packageName": "preserve.controller",
        "methodId": "preserve.controller.PreserveController.preserve",
        "classId": "preserve.controller.PreserveController",
        "line": 34,
        "msArgumentList": [
            {
                "returnType": "OrderTicketsInfo"
            },
            {
                "returnType": "HttpHeaders"
            }
        ],
        "msAnnotations": [
            {
                "isHttpAnnotation": true,
                "annotationName": "CrossOrigin",
                "key": "origins",
                "value": "\"*\""
            },
            {
                "isHttpAnnotation": true,
                "annotationName": "PostMapping",
                "key": "value",
                "value": "\"/preserve\""
            },
            {
                "isHttpAnnotation": true,
                "annotationName": "HystrixCommand",
                "key": "commandProperties",
                "value": "{ @HystrixProperty(name \u003d \"execution.isolation.thread.timeoutInMilliseconds\", value \u003d \"20000\") }"
            }
        ]
    },
    "msServiceMethodCall": {
        "msId": {
            "path": "/ts-preserve-service/src/main/java/preserve/controller/PreserveController.java"
        },
        "parentPackageName": "preserve.controller",
        "parentClassName": "PreserveController",
        "parentMethodName": "preserve",
        "parentClassId": "preserve.controller.PreserveController",
        "lineNumber": 42,
        "calledMethodName": "preserve",
        "calledServiceId": "preserveService",
        "statementDeclaration": "preserveService.preserve(oti, headers)"
    },
    "msControllerServiceField": {
        "msId": {
            "path": "/ts-preserve-service/src/main/java/preserve/controller/PreserveController.java"
        },
        "fieldClass": "PreserveService",
        "fieldVariable": "preserveService",
        "parentMethod": {
            "parentClassName": "PreserveController",
            "parentPackageName": "preserve.controller"
        },
        "line": 24
    },
    "msService": {
        "msId": {
            "path": "/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java"
        },
        "classId": "preserve.service.PreserveServiceImpl",
        "packageName": "preserve.service",
        "className": "PreserveServiceImpl",
        "role": "SERVICE"
    },
    "msServiceMethod": {
        "msId": {
            "path": "/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java"
        },
        "returnType": "Response",
        "methodName": "preserve",
        "className": "PreserveServiceImpl",
        "packageName": "preserve.service",
        "methodId": "preserve.service.PreserveServiceImpl.preserve",
        "classId": "preserve.service.PreserveServiceImpl",
        "line": 32,
        "msArgumentList": [
            {
                "returnType": "OrderTicketsInfo"
            },
            {
                "returnType": "HttpHeaders"
            }
        ],
        "msAnnotations": [
            {
                "isHttpAnnotation": false,
                "annotationName": "Override"
            }
        ]
    },
    "msRestCalls": [
        {
            "api": "\"http://ts-ticketinfo-service:15681/api/v1/ticketinfoservice/ticketinfo\"",
            "httpMethod": "POST",
            "returnType": "TravelResult",
            "msId": {
                "path": "/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java"
            },
            "parentPackageName": "preserve.service",
            "parentClassName": "PreserveServiceImpl",
            "parentMethodName": "preserve",
            "parentClassId": "preserve.service.PreserveServiceImpl",
            "lineNumber": 112,
            "statementDeclaration": "restTemplate.exchange(\"http://ts-ticketinfo-service:15681/api/v1/ticketinfoservice/ticketinfo\", HttpMethod.POST, requestEntity, new ParameterizedTypeReference\u003cResponse\u003cTravelResult\u003e\u003e() {\n})"
        },
        {
            "api": "\"http://ts-security-service:11188/api/v1/securityservice/securityConfigs/\" + accountId",
            "httpMethod": "GET",
            "returnType": "requestCheckResult",
            "msId": {
                "path": "/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java"
            },
            "parentPackageName": "preserve.service",
            "parentClassName": "PreserveServiceImpl",
            "parentMethodName": "preserve",
            "parentClassId": "preserve.service.PreserveServiceImpl",
            "lineNumber": 318,
            "statementDeclaration": "restTemplate.exchange(\"http://ts-security-service:11188/api/v1/securityservice/securityConfigs/\" + accountId, HttpMethod.GET, requestCheckResult, Response.class)"
        },
        {
            "api": "\"http://ts-contacts-service:12347/api/v1/contactservice/contacts/\" + contactsId",
            "httpMethod": "GET",
            "returnType": "Contacts",
            "msId": {
                "path": "/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java"
            },
            "parentPackageName": "preserve.service",
            "parentClassName": "PreserveServiceImpl",
            "parentMethodName": "preserve",
            "parentClassId": "preserve.service.PreserveServiceImpl",
            "lineNumber": 347,
            "statementDeclaration": "restTemplate.exchange(\"http://ts-contacts-service:12347/api/v1/contactservice/contacts/\" + contactsId, HttpMethod.GET, requestGetContactsResult, new ParameterizedTypeReference\u003cResponse\u003cContacts\u003e\u003e() {\n})"
        },
        {
            "api": "\"http://ts-travel-service:12346/api/v1/travelservice/trip_detail\"",
            "httpMethod": "POST",
            "returnType": "TripAllDetail",
            "msId": {
                "path": "/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java"
            },
            "parentPackageName": "preserve.service",
            "parentClassName": "PreserveServiceImpl",
            "parentMethodName": "preserve",
            "parentClassId": "preserve.service.PreserveServiceImpl",
            "lineNumber": 332,
            "statementDeclaration": "restTemplate.exchange(\"http://ts-travel-service:12346/api/v1/travelservice/trip_detail\", HttpMethod.POST, requestGetTripAllDetailResult, new ParameterizedTypeReference\u003cResponse\u003cTripAllDetail\u003e\u003e() {\n})"
        },
        {
            "api": "\"http://ts-station-service:12345/api/v1/stationservice/stations/id/\" + stationName",
            "httpMethod": "GET",
            "returnType": "String",
            "msId": {
                "path": "/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java"
            },
            "parentPackageName": "preserve.service",
            "parentClassName": "PreserveServiceImpl",
            "parentMethodName": "preserve",
            "parentClassId": "preserve.service.PreserveServiceImpl",
            "lineNumber": 304,
            "statementDeclaration": "restTemplate.exchange(\"http://ts-station-service:12345/api/v1/stationservice/stations/id/\" + stationName, HttpMethod.GET, requestQueryForStationId, new ParameterizedTypeReference\u003cResponse\u003cString\u003e\u003e() {\n})"
        },
        {
            "api": "\"http://ts-station-service:12345/api/v1/stationservice/stations/id/\" + stationName",
            "httpMethod": "GET",
            "returnType": "String",
            "msId": {
                "path": "/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java"
            },
            "parentPackageName": "preserve.service",
            "parentClassName": "PreserveServiceImpl",
            "parentMethodName": "preserve",
            "parentClassId": "preserve.service.PreserveServiceImpl",
            "lineNumber": 304,
            "statementDeclaration": "restTemplate.exchange(\"http://ts-station-service:12345/api/v1/stationservice/stations/id/\" + stationName, HttpMethod.GET, requestQueryForStationId, new ParameterizedTypeReference\u003cResponse\u003cString\u003e\u003e() {\n})"
        },
        {
            "api": "\"http://ts-seat-service:18898/api/v1/seatservice/seats\"",
            "httpMethod": "POST",
            "returnType": "Ticket",
            "msId": {
                "path": "/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java"
            },
            "parentPackageName": "preserve.service",
            "parentClassName": "PreserveServiceImpl",
            "parentMethodName": "preserve",
            "parentClassId": "preserve.service.PreserveServiceImpl",
            "lineNumber": 251,
            "statementDeclaration": "restTemplate.exchange(\"http://ts-seat-service:18898/api/v1/seatservice/seats\", HttpMethod.POST, requestEntityTicket, new ParameterizedTypeReference\u003cResponse\u003cTicket\u003e\u003e() {\n})"
        },
        {
            "api": "\"http://ts-seat-service:18898/api/v1/seatservice/seats\"",
            "httpMethod": "POST",
            "returnType": "Ticket",
            "msId": {
                "path": "/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java"
            },
            "parentPackageName": "preserve.service",
            "parentClassName": "PreserveServiceImpl",
            "parentMethodName": "preserve",
            "parentClassId": "preserve.service.PreserveServiceImpl",
            "lineNumber": 251,
            "statementDeclaration": "restTemplate.exchange(\"http://ts-seat-service:18898/api/v1/seatservice/seats\", HttpMethod.POST, requestEntityTicket, new ParameterizedTypeReference\u003cResponse\u003cTicket\u003e\u003e() {\n})"
        },
        {
            "api": "\"http://ts-order-service:12031/api/v1/orderservice/order\"",
            "httpMethod": "POST",
            "returnType": "Order",
            "msId": {
                "path": "/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java"
            },
            "parentPackageName": "preserve.service",
            "parentClassName": "PreserveServiceImpl",
            "parentMethodName": "preserve",
            "parentClassId": "preserve.service.PreserveServiceImpl",
            "lineNumber": 361,
            "statementDeclaration": "restTemplate.exchange(\"http://ts-order-service:12031/api/v1/orderservice/order\", HttpMethod.POST, requestEntityCreateOrderResult, new ParameterizedTypeReference\u003cResponse\u003cOrder\u003e\u003e() {\n})"
        },
        {
            "api": "\"http://ts-assurance-service:18888/api/v1/assuranceservice/assurances/\" + assuranceType + \"/\" + orderId",
            "httpMethod": "GET",
            "returnType": "requestAddAssuranceResult",
            "msId": {
                "path": "/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java"
            },
            "parentPackageName": "preserve.service",
            "parentClassName": "PreserveServiceImpl",
            "parentMethodName": "preserve",
            "parentClassId": "preserve.service.PreserveServiceImpl",
            "lineNumber": 290,
            "statementDeclaration": "restTemplate.exchange(\"http://ts-assurance-service:18888/api/v1/assuranceservice/assurances/\" + assuranceType + \"/\" + orderId, HttpMethod.GET, requestAddAssuranceResult, Response.class)"
        },
        {
            "api": "\"http://ts-food-service:18856/api/v1/foodservice/orders\"",
            "httpMethod": "POST",
            "returnType": "requestEntityAddFoodOrderResult",
            "msId": {
                "path": "/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java"
            },
            "parentPackageName": "preserve.service",
            "parentClassName": "PreserveServiceImpl",
            "parentMethodName": "preserve",
            "parentClassId": "preserve.service.PreserveServiceImpl",
            "lineNumber": 375,
            "statementDeclaration": "restTemplate.exchange(\"http://ts-food-service:18856/api/v1/foodservice/orders\", HttpMethod.POST, requestEntityAddFoodOrderResult, Response.class)"
        },
        {
            "api": "\"http://ts-consign-service:16111/api/v1/consignservice/consigns\"",
            "httpMethod": "POST",
            "returnType": "requestEntityResultForTravel",
            "msId": {
                "path": "/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java"
            },
            "parentPackageName": "preserve.service",
            "parentClassName": "PreserveServiceImpl",
            "parentMethodName": "preserve",
            "parentClassId": "preserve.service.PreserveServiceImpl",
            "lineNumber": 388,
            "statementDeclaration": "restTemplate.exchange(\"http://ts-consign-service:16111/api/v1/consignservice/consigns\", HttpMethod.POST, requestEntityResultForTravel, Response.class)"
        },
        {
            "api": "\"http://ts-user-service:12342/api/v1/userservice/users/id/\" + accountId",
            "httpMethod": "GET",
            "returnType": "User",
            "msId": {
                "path": "/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java"
            },
            "parentPackageName": "preserve.service",
            "parentClassName": "PreserveServiceImpl",
            "parentMethodName": "preserve",
            "parentClassId": "preserve.service.PreserveServiceImpl",
            "lineNumber": 277,
            "statementDeclaration": "restTemplate.exchange(\"http://ts-user-service:12342/api/v1/userservice/users/id/\" + accountId, HttpMethod.GET, requestEntitySendEmail, new ParameterizedTypeReference\u003cResponse\u003cUser\u003e\u003e() {\n})"
        },
        {
            "api": "\"http://ts-notification-service:17853/api/v1/notifyservice/notification/preserve_success\"",
            "httpMethod": "POST",
            "returnType": "requestEntitySendEmail",
            "msId": {
                "path": "/ts-preserve-service/src/main/java/preserve/service/PreserveServiceImpl.java"
            },
            "parentPackageName": "preserve.service",
            "parentClassName": "PreserveServiceImpl",
            "parentMethodName": "preserve",
            "parentClassId": "preserve.service.PreserveServiceImpl",
            "lineNumber": 264,
            "statementDeclaration": "restTemplate.exchange(\"http://ts-notification-service:17853/api/v1/notifyservice/notification/preserve_success\", HttpMethod.POST, requestEntitySendEmail, Boolean.class)"
        }
    ]
},
  {
    "msController": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/controller/SecurityController.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "classId": "security.controller.SecurityController",
      "packageName": "security.controller",
      "className": "SecurityController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/controller/SecurityController.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "SecurityController",
      "packageName": "security.controller",
      "methodId": "security.controller.SecurityController.home",
      "classId": "security.controller.SecurityController",
      "line": 26,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/controller/SecurityController.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "classId": "security.controller.SecurityController",
      "packageName": "security.controller",
      "className": "SecurityController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/controller/SecurityController.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "returnType": "HttpEntity",
      "methodName": "findAllSecurityConfig",
      "className": "SecurityController",
      "packageName": "security.controller",
      "methodId": "security.controller.SecurityController.findAllSecurityConfig",
      "classId": "security.controller.SecurityController",
      "line": 31,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/securityConfigs\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/controller/SecurityController.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "parentPackageName": "security.controller",
      "parentClassName": "SecurityController",
      "parentMethodName": "findAllSecurityConfig",
      "parentClassId": "security.controller.SecurityController",
      "lineNumber": 35,
      "calledMethodName": "findAllSecurityConfig",
      "calledServiceId": "securityService",
      "statementDeclaration": "securityService.findAllSecurityConfig(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/controller/SecurityController.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "fieldClass": "SecurityService",
      "fieldVariable": "securityService",
      "parentMethod": {
        "parentClassName": "SecurityController",
        "parentPackageName": "security.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/service/SecurityServiceImpl.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "classId": "security.service.SecurityServiceImpl",
      "packageName": "security.service",
      "className": "SecurityServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/service/SecurityServiceImpl.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "returnType": "Response",
      "methodName": "findAllSecurityConfig",
      "className": "SecurityServiceImpl",
      "packageName": "security.service",
      "methodId": "security.service.SecurityServiceImpl.findAllSecurityConfig",
      "classId": "security.service.SecurityServiceImpl",
      "line": 38,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/service/SecurityServiceImpl.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "parentPackageName": "security.service",
      "parentClassName": "SecurityServiceImpl",
      "parentMethodName": "findAllSecurityConfig",
      "parentClassId": "security.service.SecurityServiceImpl",
      "lineNumber": 40,
      "calledMethodName": "findAll",
      "calledServiceId": "securityRepository",
      "statementDeclaration": "securityRepository.findAll()"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/service/SecurityServiceImpl.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "fieldClass": "SecurityRepository",
      "fieldVariable": "securityRepository",
      "parentMethod": {
        "parentClassName": "SecurityServiceImpl",
        "parentPackageName": "security.service"
      },
      "line": 28
    },
    "msRepository": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/repository/SecurityRepository.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "classId": "security.repository.SecurityRepository",
      "packageName": "security.repository",
      "className": "SecurityRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/repository/SecurityRepository.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "returnType": "ArrayList\u003cSecurityConfig\u003e",
      "methodName": "findAll",
      "className": "SecurityRepository",
      "packageName": "security.repository",
      "methodId": "security.repository.SecurityRepository.findAll",
      "classId": "security.repository.SecurityRepository",
      "line": 22,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/controller/SecurityController.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "classId": "security.controller.SecurityController",
      "packageName": "security.controller",
      "className": "SecurityController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/controller/SecurityController.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "returnType": "HttpEntity",
      "methodName": "create",
      "className": "SecurityController",
      "packageName": "security.controller",
      "methodId": "security.controller.SecurityController.create",
      "classId": "security.controller.SecurityController",
      "line": 38,
      "msArgumentList": [
        {
          "returnType": "SecurityConfig"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "path",
          "value": "\"/securityConfigs\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/controller/SecurityController.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "parentPackageName": "security.controller",
      "parentClassName": "SecurityController",
      "parentMethodName": "create",
      "parentClassId": "security.controller.SecurityController",
      "lineNumber": 42,
      "calledMethodName": "addNewSecurityConfig",
      "calledServiceId": "securityService",
      "statementDeclaration": "securityService.addNewSecurityConfig(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/controller/SecurityController.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "fieldClass": "SecurityService",
      "fieldVariable": "securityService",
      "parentMethod": {
        "parentClassName": "SecurityController",
        "parentPackageName": "security.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/service/SecurityServiceImpl.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "classId": "security.service.SecurityServiceImpl",
      "packageName": "security.service",
      "className": "SecurityServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/service/SecurityServiceImpl.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "returnType": "Response",
      "methodName": "addNewSecurityConfig",
      "className": "SecurityServiceImpl",
      "packageName": "security.service",
      "methodId": "security.service.SecurityServiceImpl.addNewSecurityConfig",
      "classId": "security.service.SecurityServiceImpl",
      "line": 48,
      "msArgumentList": [
        {
          "returnType": "SecurityConfig"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/service/SecurityServiceImpl.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "parentPackageName": "security.service",
      "parentClassName": "SecurityServiceImpl",
      "parentMethodName": "addNewSecurityConfig",
      "parentClassId": "security.service.SecurityServiceImpl",
      "lineNumber": 50,
      "calledMethodName": "findByName",
      "calledServiceId": "securityRepository",
      "statementDeclaration": "securityRepository.findByName(info.getName())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/service/SecurityServiceImpl.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "fieldClass": "SecurityRepository",
      "fieldVariable": "securityRepository",
      "parentMethod": {
        "parentClassName": "SecurityServiceImpl",
        "parentPackageName": "security.service"
      },
      "line": 28
    },
    "msRepository": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/repository/SecurityRepository.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "classId": "security.repository.SecurityRepository",
      "packageName": "security.repository",
      "className": "SecurityRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/repository/SecurityRepository.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "returnType": "SecurityConfig",
      "methodName": "findByName",
      "className": "SecurityRepository",
      "packageName": "security.repository",
      "methodId": "security.repository.SecurityRepository.findByName",
      "classId": "security.repository.SecurityRepository",
      "line": 16,
      "msArgumentList": [
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/controller/SecurityController.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "classId": "security.controller.SecurityController",
      "packageName": "security.controller",
      "className": "SecurityController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/controller/SecurityController.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "returnType": "HttpEntity",
      "methodName": "update",
      "className": "SecurityController",
      "packageName": "security.controller",
      "methodId": "security.controller.SecurityController.update",
      "classId": "security.controller.SecurityController",
      "line": 45,
      "msArgumentList": [
        {
          "returnType": "SecurityConfig"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PutMapping",
          "key": "path",
          "value": "\"/securityConfigs\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/controller/SecurityController.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "parentPackageName": "security.controller",
      "parentClassName": "SecurityController",
      "parentMethodName": "update",
      "parentClassId": "security.controller.SecurityController",
      "lineNumber": 49,
      "calledMethodName": "modifySecurityConfig",
      "calledServiceId": "securityService",
      "statementDeclaration": "securityService.modifySecurityConfig(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/controller/SecurityController.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "fieldClass": "SecurityService",
      "fieldVariable": "securityService",
      "parentMethod": {
        "parentClassName": "SecurityController",
        "parentPackageName": "security.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/service/SecurityServiceImpl.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "classId": "security.service.SecurityServiceImpl",
      "packageName": "security.service",
      "className": "SecurityServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/service/SecurityServiceImpl.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "returnType": "Response",
      "methodName": "modifySecurityConfig",
      "className": "SecurityServiceImpl",
      "packageName": "security.service",
      "methodId": "security.service.SecurityServiceImpl.modifySecurityConfig",
      "classId": "security.service.SecurityServiceImpl",
      "line": 65,
      "msArgumentList": [
        {
          "returnType": "SecurityConfig"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/service/SecurityServiceImpl.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "parentPackageName": "security.service",
      "parentClassName": "SecurityServiceImpl",
      "parentMethodName": "modifySecurityConfig",
      "parentClassId": "security.service.SecurityServiceImpl",
      "lineNumber": 67,
      "calledMethodName": "findById",
      "calledServiceId": "securityRepository",
      "statementDeclaration": "securityRepository.findById(info.getId())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/service/SecurityServiceImpl.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "fieldClass": "SecurityRepository",
      "fieldVariable": "securityRepository",
      "parentMethod": {
        "parentClassName": "SecurityServiceImpl",
        "parentPackageName": "security.service"
      },
      "line": 28
    },
    "msRepository": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/repository/SecurityRepository.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "classId": "security.repository.SecurityRepository",
      "packageName": "security.repository",
      "className": "SecurityRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/repository/SecurityRepository.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "returnType": "SecurityConfig",
      "methodName": "findById",
      "className": "SecurityRepository",
      "packageName": "security.repository",
      "methodId": "security.repository.SecurityRepository.findById",
      "classId": "security.repository.SecurityRepository",
      "line": 19,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/controller/SecurityController.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "classId": "security.controller.SecurityController",
      "packageName": "security.controller",
      "className": "SecurityController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/controller/SecurityController.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "returnType": "HttpEntity",
      "methodName": "delete",
      "className": "SecurityController",
      "packageName": "security.controller",
      "methodId": "security.controller.SecurityController.delete",
      "classId": "security.controller.SecurityController",
      "line": 52,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "DeleteMapping",
          "key": "path",
          "value": "\"/securityConfigs/{id}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/controller/SecurityController.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "parentPackageName": "security.controller",
      "parentClassName": "SecurityController",
      "parentMethodName": "delete",
      "parentClassId": "security.controller.SecurityController",
      "lineNumber": 56,
      "calledMethodName": "deleteSecurityConfig",
      "calledServiceId": "securityService",
      "statementDeclaration": "securityService.deleteSecurityConfig(id, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/controller/SecurityController.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "fieldClass": "SecurityService",
      "fieldVariable": "securityService",
      "parentMethod": {
        "parentClassName": "SecurityController",
        "parentPackageName": "security.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/service/SecurityServiceImpl.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "classId": "security.service.SecurityServiceImpl",
      "packageName": "security.service",
      "className": "SecurityServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/service/SecurityServiceImpl.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "returnType": "Response",
      "methodName": "deleteSecurityConfig",
      "className": "SecurityServiceImpl",
      "packageName": "security.service",
      "methodId": "security.service.SecurityServiceImpl.deleteSecurityConfig",
      "classId": "security.service.SecurityServiceImpl",
      "line": 80,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/service/SecurityServiceImpl.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "parentPackageName": "security.service",
      "parentClassName": "SecurityServiceImpl",
      "parentMethodName": "deleteSecurityConfig",
      "parentClassId": "security.service.SecurityServiceImpl",
      "lineNumber": 82,
      "calledMethodName": "deleteById",
      "calledServiceId": "securityRepository",
      "statementDeclaration": "securityRepository.deleteById(UUID.fromString(id))"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/service/SecurityServiceImpl.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "fieldClass": "SecurityRepository",
      "fieldVariable": "securityRepository",
      "parentMethod": {
        "parentClassName": "SecurityServiceImpl",
        "parentPackageName": "security.service"
      },
      "line": 28
    },
    "msRepository": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/repository/SecurityRepository.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "classId": "security.repository.SecurityRepository",
      "packageName": "security.repository",
      "className": "SecurityRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/repository/SecurityRepository.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "returnType": "void",
      "methodName": "deleteById",
      "className": "SecurityRepository",
      "packageName": "security.repository",
      "methodId": "security.repository.SecurityRepository.deleteById",
      "classId": "security.repository.SecurityRepository",
      "line": 25,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/controller/SecurityController.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "classId": "security.controller.SecurityController",
      "packageName": "security.controller",
      "className": "SecurityController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/controller/SecurityController.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "returnType": "HttpEntity",
      "methodName": "check",
      "className": "SecurityController",
      "packageName": "security.controller",
      "methodId": "security.controller.SecurityController.check",
      "classId": "security.controller.SecurityController",
      "line": 59,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/securityConfigs/{accountId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/controller/SecurityController.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "parentPackageName": "security.controller",
      "parentClassName": "SecurityController",
      "parentMethodName": "check",
      "parentClassId": "security.controller.SecurityController",
      "lineNumber": 63,
      "calledMethodName": "check",
      "calledServiceId": "securityService",
      "statementDeclaration": "securityService.check(accountId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/controller/SecurityController.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "fieldClass": "SecurityService",
      "fieldVariable": "securityService",
      "parentMethod": {
        "parentClassName": "SecurityController",
        "parentPackageName": "security.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/service/SecurityServiceImpl.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "classId": "security.service.SecurityServiceImpl",
      "packageName": "security.service",
      "className": "SecurityServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/service/SecurityServiceImpl.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "returnType": "Response",
      "methodName": "check",
      "className": "SecurityServiceImpl",
      "packageName": "security.service",
      "methodId": "security.service.SecurityServiceImpl.check",
      "classId": "security.service.SecurityServiceImpl",
      "line": 92,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/service/SecurityServiceImpl.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "parentPackageName": "security.service",
      "parentClassName": "SecurityServiceImpl",
      "parentMethodName": "check",
      "parentClassId": "security.service.SecurityServiceImpl",
      "lineNumber": 102,
      "calledMethodName": "findByName",
      "calledServiceId": "securityRepository",
      "statementDeclaration": "securityRepository.findByName(\"max_order_1_hour\")"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/service/SecurityServiceImpl.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "fieldClass": "SecurityRepository",
      "fieldVariable": "securityRepository",
      "parentMethod": {
        "parentClassName": "SecurityServiceImpl",
        "parentPackageName": "security.service"
      },
      "line": 28
    },
    "msRepository": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/repository/SecurityRepository.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "classId": "security.repository.SecurityRepository",
      "packageName": "security.repository",
      "className": "SecurityRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-security-service/src/main/java/security/repository/SecurityRepository.java",
        "directoryName": "/ts-security-service/src/main/java/security"
      },
      "returnType": "SecurityConfig",
      "methodName": "findByName",
      "className": "SecurityRepository",
      "packageName": "security.repository",
      "methodId": "security.repository.SecurityRepository.findByName",
      "classId": "security.repository.SecurityRepository",
      "line": 16,
      "msArgumentList": [
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/controller/ConsignController.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "classId": "consign.controller.ConsignController",
      "packageName": "consign.controller",
      "className": "ConsignController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/controller/ConsignController.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "ConsignController",
      "packageName": "consign.controller",
      "methodId": "consign.controller.ConsignController.home",
      "classId": "consign.controller.ConsignController",
      "line": 28,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/controller/ConsignController.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "classId": "consign.controller.ConsignController",
      "packageName": "consign.controller",
      "className": "ConsignController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/controller/ConsignController.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "returnType": "HttpEntity",
      "methodName": "insertConsign",
      "className": "ConsignController",
      "packageName": "consign.controller",
      "methodId": "consign.controller.ConsignController.insertConsign",
      "classId": "consign.controller.ConsignController",
      "line": 33,
      "msArgumentList": [
        {
          "returnType": "Consign"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/consigns\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/controller/ConsignController.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "parentPackageName": "consign.controller",
      "parentClassName": "ConsignController",
      "parentMethodName": "insertConsign",
      "parentClassId": "consign.controller.ConsignController",
      "lineNumber": 37,
      "calledMethodName": "insertConsignRecord",
      "calledServiceId": "service",
      "statementDeclaration": "service.insertConsignRecord(request, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/controller/ConsignController.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "fieldClass": "ConsignService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "ConsignController",
        "parentPackageName": "consign.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/service/ConsignServiceImpl.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "classId": "consign.service.ConsignServiceImpl",
      "packageName": "consign.service",
      "className": "ConsignServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/service/ConsignServiceImpl.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "returnType": "Response",
      "methodName": "insertConsignRecord",
      "className": "ConsignServiceImpl",
      "packageName": "consign.service",
      "methodId": "consign.service.ConsignServiceImpl.insertConsignRecord",
      "classId": "consign.service.ConsignServiceImpl",
      "line": 34,
      "msArgumentList": [
        {
          "returnType": "Consign"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/service/ConsignServiceImpl.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "parentPackageName": "consign.service",
      "parentClassName": "ConsignServiceImpl",
      "parentMethodName": "insertConsignRecord",
      "parentClassId": "consign.service.ConsignServiceImpl",
      "lineNumber": 65,
      "calledMethodName": "save",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.save(consignRecord)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/service/ConsignServiceImpl.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "fieldClass": "ConsignRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "ConsignServiceImpl",
        "parentPackageName": "consign.service"
      },
      "line": 26
    },
    "msRepository": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/repository/ConsignRepository.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "classId": "consign.repository.ConsignRepository",
      "packageName": "consign.repository",
      "className": "ConsignRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [
      {
        "api": "\"http://ts-consign-price-service:16110/api/v1/consignpriceservice/consignprice/\" + consignRequest.getWeight() + \"/\" + consignRequest.isWithin()",
        "httpMethod": "GET",
        "returnType": "Double",
        "msId": {
          "path": "/ts-consign-service/src/main/java/consign/service/ConsignServiceImpl.java",
          "directoryName": "/ts-consign-service/src/main/java/consign"
        },
        "parentPackageName": "consign.service",
        "parentClassName": "ConsignServiceImpl",
        "parentMethodName": "insertConsignRecord",
        "parentClassId": "consign.service.ConsignServiceImpl",
        "lineNumber": 56,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-consign-price-service:16110/api/v1/consignpriceservice/consignprice/\" + consignRequest.getWeight() + \"/\" + consignRequest.isWithin(), HttpMethod.GET, requestEntity, new ParameterizedTypeReference\u003cResponse\u003cDouble\u003e\u003e() {\n})"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/controller/ConsignController.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "classId": "consign.controller.ConsignController",
      "packageName": "consign.controller",
      "className": "ConsignController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/controller/ConsignController.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "returnType": "HttpEntity",
      "methodName": "updateConsign",
      "className": "ConsignController",
      "packageName": "consign.controller",
      "methodId": "consign.controller.ConsignController.updateConsign",
      "classId": "consign.controller.ConsignController",
      "line": 40,
      "msArgumentList": [
        {
          "returnType": "Consign"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PutMapping",
          "key": "value",
          "value": "\"/consigns\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/controller/ConsignController.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "parentPackageName": "consign.controller",
      "parentClassName": "ConsignController",
      "parentMethodName": "updateConsign",
      "parentClassId": "consign.controller.ConsignController",
      "lineNumber": 43,
      "calledMethodName": "updateConsignRecord",
      "calledServiceId": "service",
      "statementDeclaration": "service.updateConsignRecord(request, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/controller/ConsignController.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "fieldClass": "ConsignService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "ConsignController",
        "parentPackageName": "consign.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/service/ConsignServiceImpl.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "classId": "consign.service.ConsignServiceImpl",
      "packageName": "consign.service",
      "className": "ConsignServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/service/ConsignServiceImpl.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "returnType": "Response",
      "methodName": "updateConsignRecord",
      "className": "ConsignServiceImpl",
      "packageName": "consign.service",
      "methodId": "consign.service.ConsignServiceImpl.updateConsignRecord",
      "classId": "consign.service.ConsignServiceImpl",
      "line": 70,
      "msArgumentList": [
        {
          "returnType": "Consign"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/service/ConsignServiceImpl.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "parentPackageName": "consign.service",
      "parentClassName": "ConsignServiceImpl",
      "parentMethodName": "updateConsignRecord",
      "parentClassId": "consign.service.ConsignServiceImpl",
      "lineNumber": 74,
      "calledMethodName": "findById",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findById(consignRequest.getId())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/service/ConsignServiceImpl.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "fieldClass": "ConsignRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "ConsignServiceImpl",
        "parentPackageName": "consign.service"
      },
      "line": 26
    },
    "msRepository": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/repository/ConsignRepository.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "classId": "consign.repository.ConsignRepository",
      "packageName": "consign.repository",
      "className": "ConsignRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [
      {
        "api": "\"http://ts-consign-price-service:16110/api/v1/consignpriceservice/consignprice/\" + consignRequest.getWeight() + \"/\" + consignRequest.isWithin()",
        "httpMethod": "GET",
        "returnType": "Double",
        "msId": {
          "path": "/ts-consign-service/src/main/java/consign/service/ConsignServiceImpl.java",
          "directoryName": "/ts-consign-service/src/main/java/consign"
        },
        "parentPackageName": "consign.service",
        "parentClassName": "ConsignServiceImpl",
        "parentMethodName": "updateConsignRecord",
        "parentClassId": "consign.service.ConsignServiceImpl",
        "lineNumber": 88,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-consign-price-service:16110/api/v1/consignpriceservice/consignprice/\" + consignRequest.getWeight() + \"/\" + consignRequest.isWithin(), HttpMethod.GET, requestEntity, new ParameterizedTypeReference\u003cResponse\u003cDouble\u003e\u003e() {\n})"
      }
    ],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/repository/ConsignRepository.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "returnType": "ConsignRecord",
      "methodName": "findById",
      "className": "ConsignRepository",
      "packageName": "consign.repository",
      "methodId": "consign.repository.ConsignRepository.findById",
      "classId": "consign.repository.ConsignRepository",
      "line": 46,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/controller/ConsignController.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "classId": "consign.controller.ConsignController",
      "packageName": "consign.controller",
      "className": "ConsignController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/controller/ConsignController.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "returnType": "HttpEntity",
      "methodName": "findByAccountId",
      "className": "ConsignController",
      "packageName": "consign.controller",
      "methodId": "consign.controller.ConsignController.findByAccountId",
      "classId": "consign.controller.ConsignController",
      "line": 46,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/consigns/account/{id}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/controller/ConsignController.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "parentPackageName": "consign.controller",
      "parentClassName": "ConsignController",
      "parentMethodName": "findByAccountId",
      "parentClassId": "consign.controller.ConsignController",
      "lineNumber": 50,
      "calledMethodName": "queryByAccountId",
      "calledServiceId": "service",
      "statementDeclaration": "service.queryByAccountId(newid, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/controller/ConsignController.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "fieldClass": "ConsignService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "ConsignController",
        "parentPackageName": "consign.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/service/ConsignServiceImpl.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "classId": "consign.service.ConsignServiceImpl",
      "packageName": "consign.service",
      "className": "ConsignServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/service/ConsignServiceImpl.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "returnType": "Response",
      "methodName": "queryByAccountId",
      "className": "ConsignServiceImpl",
      "packageName": "consign.service",
      "methodId": "consign.service.ConsignServiceImpl.queryByAccountId",
      "classId": "consign.service.ConsignServiceImpl",
      "line": 106,
      "msArgumentList": [
        {
          "returnType": "UUID"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/service/ConsignServiceImpl.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "parentPackageName": "consign.service",
      "parentClassName": "ConsignServiceImpl",
      "parentMethodName": "queryByAccountId",
      "parentClassId": "consign.service.ConsignServiceImpl",
      "lineNumber": 108,
      "calledMethodName": "findByAccountId",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findByAccountId(accountId)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/service/ConsignServiceImpl.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "fieldClass": "ConsignRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "ConsignServiceImpl",
        "parentPackageName": "consign.service"
      },
      "line": 26
    },
    "msRepository": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/repository/ConsignRepository.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "classId": "consign.repository.ConsignRepository",
      "packageName": "consign.repository",
      "className": "ConsignRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/repository/ConsignRepository.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "returnType": "ArrayList\u003cConsignRecord\u003e",
      "methodName": "findByAccountId",
      "className": "ConsignRepository",
      "packageName": "consign.repository",
      "methodId": "consign.repository.ConsignRepository.findByAccountId",
      "classId": "consign.repository.ConsignRepository",
      "line": 22,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/controller/ConsignController.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "classId": "consign.controller.ConsignController",
      "packageName": "consign.controller",
      "className": "ConsignController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/controller/ConsignController.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "returnType": "HttpEntity",
      "methodName": "findByOrderId",
      "className": "ConsignController",
      "packageName": "consign.controller",
      "methodId": "consign.controller.ConsignController.findByOrderId",
      "classId": "consign.controller.ConsignController",
      "line": 53,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/consigns/order/{id}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/controller/ConsignController.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "parentPackageName": "consign.controller",
      "parentClassName": "ConsignController",
      "parentMethodName": "findByOrderId",
      "parentClassId": "consign.controller.ConsignController",
      "lineNumber": 57,
      "calledMethodName": "queryByOrderId",
      "calledServiceId": "service",
      "statementDeclaration": "service.queryByOrderId(newid, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/controller/ConsignController.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "fieldClass": "ConsignService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "ConsignController",
        "parentPackageName": "consign.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/service/ConsignServiceImpl.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "classId": "consign.service.ConsignServiceImpl",
      "packageName": "consign.service",
      "className": "ConsignServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/service/ConsignServiceImpl.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "returnType": "Response",
      "methodName": "queryByOrderId",
      "className": "ConsignServiceImpl",
      "packageName": "consign.service",
      "methodId": "consign.service.ConsignServiceImpl.queryByOrderId",
      "classId": "consign.service.ConsignServiceImpl",
      "line": 117,
      "msArgumentList": [
        {
          "returnType": "UUID"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/service/ConsignServiceImpl.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "parentPackageName": "consign.service",
      "parentClassName": "ConsignServiceImpl",
      "parentMethodName": "queryByOrderId",
      "parentClassId": "consign.service.ConsignServiceImpl",
      "lineNumber": 119,
      "calledMethodName": "findByOrderId",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findByOrderId(orderId)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/service/ConsignServiceImpl.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "fieldClass": "ConsignRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "ConsignServiceImpl",
        "parentPackageName": "consign.service"
      },
      "line": 26
    },
    "msRepository": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/repository/ConsignRepository.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "classId": "consign.repository.ConsignRepository",
      "packageName": "consign.repository",
      "className": "ConsignRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/repository/ConsignRepository.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "returnType": "ConsignRecord",
      "methodName": "findByOrderId",
      "className": "ConsignRepository",
      "packageName": "consign.repository",
      "methodId": "consign.repository.ConsignRepository.findByOrderId",
      "classId": "consign.repository.ConsignRepository",
      "line": 30,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/controller/ConsignController.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "classId": "consign.controller.ConsignController",
      "packageName": "consign.controller",
      "className": "ConsignController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/controller/ConsignController.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "returnType": "HttpEntity",
      "methodName": "findByConsignee",
      "className": "ConsignController",
      "packageName": "consign.controller",
      "methodId": "consign.controller.ConsignController.findByConsignee",
      "classId": "consign.controller.ConsignController",
      "line": 60,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/consigns/{consignee}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/controller/ConsignController.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "parentPackageName": "consign.controller",
      "parentClassName": "ConsignController",
      "parentMethodName": "findByConsignee",
      "parentClassId": "consign.controller.ConsignController",
      "lineNumber": 63,
      "calledMethodName": "queryByConsignee",
      "calledServiceId": "service",
      "statementDeclaration": "service.queryByConsignee(consignee, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/controller/ConsignController.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "fieldClass": "ConsignService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "ConsignController",
        "parentPackageName": "consign.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/service/ConsignServiceImpl.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "classId": "consign.service.ConsignServiceImpl",
      "packageName": "consign.service",
      "className": "ConsignServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/service/ConsignServiceImpl.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "returnType": "Response",
      "methodName": "queryByConsignee",
      "className": "ConsignServiceImpl",
      "packageName": "consign.service",
      "methodId": "consign.service.ConsignServiceImpl.queryByConsignee",
      "classId": "consign.service.ConsignServiceImpl",
      "line": 128,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/service/ConsignServiceImpl.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "parentPackageName": "consign.service",
      "parentClassName": "ConsignServiceImpl",
      "parentMethodName": "queryByConsignee",
      "parentClassId": "consign.service.ConsignServiceImpl",
      "lineNumber": 130,
      "calledMethodName": "findByConsignee",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findByConsignee(consignee)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/service/ConsignServiceImpl.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "fieldClass": "ConsignRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "ConsignServiceImpl",
        "parentPackageName": "consign.service"
      },
      "line": 26
    },
    "msRepository": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/repository/ConsignRepository.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "classId": "consign.repository.ConsignRepository",
      "packageName": "consign.repository",
      "className": "ConsignRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-consign-service/src/main/java/consign/repository/ConsignRepository.java",
        "directoryName": "/ts-consign-service/src/main/java/consign"
      },
      "returnType": "ArrayList\u003cConsignRecord\u003e",
      "methodName": "findByConsignee",
      "className": "ConsignRepository",
      "packageName": "consign.repository",
      "methodId": "consign.repository.ConsignRepository.findByConsignee",
      "classId": "consign.repository.ConsignRepository",
      "line": 38,
      "msArgumentList": [
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/controller/TrainController.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "classId": "train.controller.TrainController",
      "packageName": "train.controller",
      "className": "TrainController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/controller/TrainController.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "TrainController",
      "packageName": "train.controller",
      "methodId": "train.controller.TrainController.home",
      "classId": "train.controller.TrainController",
      "line": 28,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/trains/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/controller/TrainController.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "classId": "train.controller.TrainController",
      "packageName": "train.controller",
      "className": "TrainController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/controller/TrainController.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "returnType": "HttpEntity",
      "methodName": "create",
      "className": "TrainController",
      "packageName": "train.controller",
      "methodId": "train.controller.TrainController.create",
      "classId": "train.controller.TrainController",
      "line": 33,
      "msArgumentList": [
        {
          "returnType": "TrainType"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/trains\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/controller/TrainController.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "parentPackageName": "train.controller",
      "parentClassName": "TrainController",
      "parentMethodName": "create",
      "parentClassId": "train.controller.TrainController",
      "lineNumber": 37,
      "calledMethodName": "create",
      "calledServiceId": "trainService",
      "statementDeclaration": "trainService.create(trainType, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/controller/TrainController.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "fieldClass": "TrainService",
      "fieldVariable": "trainService",
      "parentMethod": {
        "parentClassName": "TrainController",
        "parentPackageName": "train.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/service/TrainServiceImpl.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "classId": "train.service.TrainServiceImpl",
      "packageName": "train.service",
      "className": "TrainServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/service/TrainServiceImpl.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "returnType": "boolean",
      "methodName": "create",
      "className": "TrainServiceImpl",
      "packageName": "train.service",
      "methodId": "train.service.TrainServiceImpl.create",
      "classId": "train.service.TrainServiceImpl",
      "line": 21,
      "msArgumentList": [
        {
          "returnType": "TrainType"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/service/TrainServiceImpl.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "parentPackageName": "train.service",
      "parentClassName": "TrainServiceImpl",
      "parentMethodName": "create",
      "parentClassId": "train.service.TrainServiceImpl",
      "lineNumber": 24,
      "calledMethodName": "findById",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findById(trainType.getId())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/service/TrainServiceImpl.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "fieldClass": "TrainTypeRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "TrainServiceImpl",
        "parentPackageName": "train.service"
      },
      "line": 16
    },
    "msRepository": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/repository/TrainTypeRepository.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "classId": "train.repository.TrainTypeRepository",
      "packageName": "train.repository",
      "className": "TrainTypeRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/repository/TrainTypeRepository.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "returnType": "TrainType",
      "methodName": "findById",
      "className": "TrainTypeRepository",
      "packageName": "train.repository",
      "methodId": "train.repository.TrainTypeRepository.findById",
      "classId": "train.repository.TrainTypeRepository",
      "line": 11,
      "msArgumentList": [
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/controller/TrainController.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "classId": "train.controller.TrainController",
      "packageName": "train.controller",
      "className": "TrainController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/controller/TrainController.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "returnType": "HttpEntity",
      "methodName": "retrieve",
      "className": "TrainController",
      "packageName": "train.controller",
      "methodId": "train.controller.TrainController.retrieve",
      "classId": "train.controller.TrainController",
      "line": 45,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/trains/{id}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/controller/TrainController.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "parentPackageName": "train.controller",
      "parentClassName": "TrainController",
      "parentMethodName": "retrieve",
      "parentClassId": "train.controller.TrainController",
      "lineNumber": 49,
      "calledMethodName": "retrieve",
      "calledServiceId": "trainService",
      "statementDeclaration": "trainService.retrieve(id, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/controller/TrainController.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "fieldClass": "TrainService",
      "fieldVariable": "trainService",
      "parentMethod": {
        "parentClassName": "TrainController",
        "parentPackageName": "train.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/service/TrainServiceImpl.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "classId": "train.service.TrainServiceImpl",
      "packageName": "train.service",
      "className": "TrainServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/service/TrainServiceImpl.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "returnType": "TrainType",
      "methodName": "retrieve",
      "className": "TrainServiceImpl",
      "packageName": "train.service",
      "methodId": "train.service.TrainServiceImpl.retrieve",
      "classId": "train.service.TrainServiceImpl",
      "line": 36,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/service/TrainServiceImpl.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "parentPackageName": "train.service",
      "parentClassName": "TrainServiceImpl",
      "parentMethodName": "retrieve",
      "parentClassId": "train.service.TrainServiceImpl",
      "lineNumber": 38,
      "calledMethodName": "findById",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findById(id)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/service/TrainServiceImpl.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "fieldClass": "TrainTypeRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "TrainServiceImpl",
        "parentPackageName": "train.service"
      },
      "line": 16
    },
    "msRepository": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/repository/TrainTypeRepository.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "classId": "train.repository.TrainTypeRepository",
      "packageName": "train.repository",
      "className": "TrainTypeRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/repository/TrainTypeRepository.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "returnType": "TrainType",
      "methodName": "findById",
      "className": "TrainTypeRepository",
      "packageName": "train.repository",
      "methodId": "train.repository.TrainTypeRepository.findById",
      "classId": "train.repository.TrainTypeRepository",
      "line": 11,
      "msArgumentList": [
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/controller/TrainController.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "classId": "train.controller.TrainController",
      "packageName": "train.controller",
      "className": "TrainController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/controller/TrainController.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "returnType": "HttpEntity",
      "methodName": "update",
      "className": "TrainController",
      "packageName": "train.controller",
      "methodId": "train.controller.TrainController.update",
      "classId": "train.controller.TrainController",
      "line": 57,
      "msArgumentList": [
        {
          "returnType": "TrainType"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PutMapping",
          "key": "value",
          "value": "\"/trains\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/controller/TrainController.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "parentPackageName": "train.controller",
      "parentClassName": "TrainController",
      "parentMethodName": "update",
      "parentClassId": "train.controller.TrainController",
      "lineNumber": 61,
      "calledMethodName": "update",
      "calledServiceId": "trainService",
      "statementDeclaration": "trainService.update(trainType, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/controller/TrainController.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "fieldClass": "TrainService",
      "fieldVariable": "trainService",
      "parentMethod": {
        "parentClassName": "TrainController",
        "parentPackageName": "train.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/service/TrainServiceImpl.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "classId": "train.service.TrainServiceImpl",
      "packageName": "train.service",
      "className": "TrainServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/service/TrainServiceImpl.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "returnType": "boolean",
      "methodName": "update",
      "className": "TrainServiceImpl",
      "packageName": "train.service",
      "methodId": "train.service.TrainServiceImpl.update",
      "classId": "train.service.TrainServiceImpl",
      "line": 46,
      "msArgumentList": [
        {
          "returnType": "TrainType"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/service/TrainServiceImpl.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "parentPackageName": "train.service",
      "parentClassName": "TrainServiceImpl",
      "parentMethodName": "update",
      "parentClassId": "train.service.TrainServiceImpl",
      "lineNumber": 49,
      "calledMethodName": "findById",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findById(trainType.getId())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/service/TrainServiceImpl.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "fieldClass": "TrainTypeRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "TrainServiceImpl",
        "parentPackageName": "train.service"
      },
      "line": 16
    },
    "msRepository": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/repository/TrainTypeRepository.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "classId": "train.repository.TrainTypeRepository",
      "packageName": "train.repository",
      "className": "TrainTypeRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/repository/TrainTypeRepository.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "returnType": "TrainType",
      "methodName": "findById",
      "className": "TrainTypeRepository",
      "packageName": "train.repository",
      "methodId": "train.repository.TrainTypeRepository.findById",
      "classId": "train.repository.TrainTypeRepository",
      "line": 11,
      "msArgumentList": [
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/controller/TrainController.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "classId": "train.controller.TrainController",
      "packageName": "train.controller",
      "className": "TrainController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/controller/TrainController.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "returnType": "HttpEntity",
      "methodName": "delete",
      "className": "TrainController",
      "packageName": "train.controller",
      "methodId": "train.controller.TrainController.delete",
      "classId": "train.controller.TrainController",
      "line": 69,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "DeleteMapping",
          "key": "value",
          "value": "\"/trains/{id}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/controller/TrainController.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "parentPackageName": "train.controller",
      "parentClassName": "TrainController",
      "parentMethodName": "delete",
      "parentClassId": "train.controller.TrainController",
      "lineNumber": 73,
      "calledMethodName": "delete",
      "calledServiceId": "trainService",
      "statementDeclaration": "trainService.delete(id, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/controller/TrainController.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "fieldClass": "TrainService",
      "fieldVariable": "trainService",
      "parentMethod": {
        "parentClassName": "TrainController",
        "parentPackageName": "train.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/service/TrainServiceImpl.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "classId": "train.service.TrainServiceImpl",
      "packageName": "train.service",
      "className": "TrainServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/service/TrainServiceImpl.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "returnType": "boolean",
      "methodName": "delete",
      "className": "TrainServiceImpl",
      "packageName": "train.service",
      "methodId": "train.service.TrainServiceImpl.delete",
      "classId": "train.service.TrainServiceImpl",
      "line": 61,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/service/TrainServiceImpl.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "parentPackageName": "train.service",
      "parentClassName": "TrainServiceImpl",
      "parentMethodName": "delete",
      "parentClassId": "train.service.TrainServiceImpl",
      "lineNumber": 64,
      "calledMethodName": "findById",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findById(id)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/service/TrainServiceImpl.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "fieldClass": "TrainTypeRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "TrainServiceImpl",
        "parentPackageName": "train.service"
      },
      "line": 16
    },
    "msRepository": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/repository/TrainTypeRepository.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "classId": "train.repository.TrainTypeRepository",
      "packageName": "train.repository",
      "className": "TrainTypeRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/repository/TrainTypeRepository.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "returnType": "TrainType",
      "methodName": "findById",
      "className": "TrainTypeRepository",
      "packageName": "train.repository",
      "methodId": "train.repository.TrainTypeRepository.findById",
      "classId": "train.repository.TrainTypeRepository",
      "line": 11,
      "msArgumentList": [
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/controller/TrainController.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "classId": "train.controller.TrainController",
      "packageName": "train.controller",
      "className": "TrainController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/controller/TrainController.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "returnType": "HttpEntity",
      "methodName": "query",
      "className": "TrainController",
      "packageName": "train.controller",
      "methodId": "train.controller.TrainController.query",
      "classId": "train.controller.TrainController",
      "line": 81,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/trains\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/controller/TrainController.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "parentPackageName": "train.controller",
      "parentClassName": "TrainController",
      "parentMethodName": "query",
      "parentClassId": "train.controller.TrainController",
      "lineNumber": 85,
      "calledMethodName": "query",
      "calledServiceId": "trainService",
      "statementDeclaration": "trainService.query(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/controller/TrainController.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "fieldClass": "TrainService",
      "fieldVariable": "trainService",
      "parentMethod": {
        "parentClassName": "TrainController",
        "parentPackageName": "train.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/service/TrainServiceImpl.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "classId": "train.service.TrainServiceImpl",
      "packageName": "train.service",
      "className": "TrainServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/service/TrainServiceImpl.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "returnType": "List\u003cTrainType\u003e",
      "methodName": "query",
      "className": "TrainServiceImpl",
      "packageName": "train.service",
      "methodId": "train.service.TrainServiceImpl.query",
      "classId": "train.service.TrainServiceImpl",
      "line": 74,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/service/TrainServiceImpl.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "parentPackageName": "train.service",
      "parentClassName": "TrainServiceImpl",
      "parentMethodName": "query",
      "parentClassId": "train.service.TrainServiceImpl",
      "lineNumber": 76,
      "calledMethodName": "findAll",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findAll()"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/service/TrainServiceImpl.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "fieldClass": "TrainTypeRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "TrainServiceImpl",
        "parentPackageName": "train.service"
      },
      "line": 16
    },
    "msRepository": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/repository/TrainTypeRepository.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "classId": "train.repository.TrainTypeRepository",
      "packageName": "train.repository",
      "className": "TrainTypeRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-train-service/src/main/java/train/repository/TrainTypeRepository.java",
        "directoryName": "/ts-train-service/src/main/java/train"
      },
      "returnType": "List\u003cTrainType\u003e",
      "methodName": "findAll",
      "className": "TrainTypeRepository",
      "packageName": "train.repository",
      "methodId": "train.repository.TrainTypeRepository.findAll",
      "classId": "train.repository.TrainTypeRepository",
      "line": 12,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.controller.OrderController",
      "packageName": "order.controller",
      "className": "OrderController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "OrderController",
      "packageName": "order.controller",
      "methodId": "order.controller.OrderController.home",
      "classId": "order.controller.OrderController",
      "line": 28,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.controller.OrderController",
      "packageName": "order.controller",
      "className": "OrderController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "HttpEntity",
      "methodName": "getTicketListByDateAndTripId",
      "className": "OrderController",
      "packageName": "order.controller",
      "methodId": "order.controller.OrderController.getTicketListByDateAndTripId",
      "classId": "order.controller.OrderController",
      "line": 35,
      "msArgumentList": [
        {
          "returnType": "Seat"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/order/tickets\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "parentPackageName": "order.controller",
      "parentClassName": "OrderController",
      "parentMethodName": "getTicketListByDateAndTripId",
      "parentClassId": "order.controller.OrderController",
      "lineNumber": 38,
      "calledMethodName": "getSoldTickets",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.getSoldTickets(seatRequest, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "fieldClass": "OrderService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderController",
        "parentPackageName": "order.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.service.OrderServiceImpl",
      "packageName": "order.service",
      "className": "OrderServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "Response",
      "methodName": "getSoldTickets",
      "className": "OrderServiceImpl",
      "packageName": "order.service",
      "methodId": "order.service.OrderServiceImpl.getSoldTickets",
      "classId": "order.service.OrderServiceImpl",
      "line": 36,
      "msArgumentList": [
        {
          "returnType": "Seat"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "parentPackageName": "order.service",
      "parentClassName": "OrderServiceImpl",
      "parentMethodName": "getSoldTickets",
      "parentClassId": "order.service.OrderServiceImpl",
      "lineNumber": 38,
      "calledMethodName": "findByTravelDateAndTrainNumber",
      "calledServiceId": "orderRepository",
      "statementDeclaration": "orderRepository.findByTravelDateAndTrainNumber(seatRequest.getTravelDate(), seatRequest.getTrainNumber())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "fieldClass": "OrderRepository",
      "fieldVariable": "orderRepository",
      "parentMethod": {
        "parentClassName": "OrderServiceImpl",
        "parentPackageName": "order.service"
      },
      "line": 25
    },
    "msRepository": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.repository.OrderRepository",
      "packageName": "order.repository",
      "className": "OrderRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "ArrayList\u003cOrder\u003e",
      "methodName": "findByTravelDateAndTrainNumber",
      "className": "OrderRepository",
      "packageName": "order.repository",
      "methodId": "order.repository.OrderRepository.findByTravelDateAndTrainNumber",
      "classId": "order.repository.OrderRepository",
      "line": 26,
      "msArgumentList": [
        {
          "returnType": "Date"
        },
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.controller.OrderController",
      "packageName": "order.controller",
      "className": "OrderController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "HttpEntity",
      "methodName": "createNewOrder",
      "className": "OrderController",
      "packageName": "order.controller",
      "methodId": "order.controller.OrderController.createNewOrder",
      "classId": "order.controller.OrderController",
      "line": 41,
      "msArgumentList": [
        {
          "returnType": "Order"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "path",
          "value": "\"/order\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "parentPackageName": "order.controller",
      "parentClassName": "OrderController",
      "parentMethodName": "createNewOrder",
      "parentClassId": "order.controller.OrderController",
      "lineNumber": 46,
      "calledMethodName": "create",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.create(createOrder, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "fieldClass": "OrderService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderController",
        "parentPackageName": "order.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.service.OrderServiceImpl",
      "packageName": "order.service",
      "className": "OrderServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "Response",
      "methodName": "create",
      "className": "OrderServiceImpl",
      "packageName": "order.service",
      "methodId": "order.service.OrderServiceImpl.create",
      "classId": "order.service.OrderServiceImpl",
      "line": 67,
      "msArgumentList": [
        {
          "returnType": "Order"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "parentPackageName": "order.service",
      "parentClassName": "OrderServiceImpl",
      "parentMethodName": "create",
      "parentClassId": "order.service.OrderServiceImpl",
      "lineNumber": 70,
      "calledMethodName": "findByAccountId",
      "calledServiceId": "orderRepository",
      "statementDeclaration": "orderRepository.findByAccountId(order.getAccountId())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "fieldClass": "OrderRepository",
      "fieldVariable": "orderRepository",
      "parentMethod": {
        "parentClassName": "OrderServiceImpl",
        "parentPackageName": "order.service"
      },
      "line": 25
    },
    "msRepository": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.repository.OrderRepository",
      "packageName": "order.repository",
      "className": "OrderRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "ArrayList\u003cOrder\u003e",
      "methodName": "findByAccountId",
      "className": "OrderRepository",
      "packageName": "order.repository",
      "methodId": "order.repository.OrderRepository.findByAccountId",
      "classId": "order.repository.OrderRepository",
      "line": 23,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.controller.OrderController",
      "packageName": "order.controller",
      "className": "OrderController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "HttpEntity",
      "methodName": "addcreateNewOrder",
      "className": "OrderController",
      "packageName": "order.controller",
      "methodId": "order.controller.OrderController.addcreateNewOrder",
      "classId": "order.controller.OrderController",
      "line": 49,
      "msArgumentList": [
        {
          "returnType": "Order"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "path",
          "value": "\"/order/admin\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "parentPackageName": "order.controller",
      "parentClassName": "OrderController",
      "parentMethodName": "addcreateNewOrder",
      "parentClassId": "order.controller.OrderController",
      "lineNumber": 52,
      "calledMethodName": "addNewOrder",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.addNewOrder(order, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "fieldClass": "OrderService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderController",
        "parentPackageName": "order.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.service.OrderServiceImpl",
      "packageName": "order.service",
      "className": "OrderServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "Response",
      "methodName": "addNewOrder",
      "className": "OrderServiceImpl",
      "packageName": "order.service",
      "methodId": "order.service.OrderServiceImpl.addNewOrder",
      "classId": "order.service.OrderServiceImpl",
      "line": 385,
      "msArgumentList": [
        {
          "returnType": "Order"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "parentPackageName": "order.service",
      "parentClassName": "OrderServiceImpl",
      "parentMethodName": "addNewOrder",
      "parentClassId": "order.service.OrderServiceImpl",
      "lineNumber": 388,
      "calledMethodName": "findByAccountId",
      "calledServiceId": "orderRepository",
      "statementDeclaration": "orderRepository.findByAccountId(order.getAccountId())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "fieldClass": "OrderRepository",
      "fieldVariable": "orderRepository",
      "parentMethod": {
        "parentClassName": "OrderServiceImpl",
        "parentPackageName": "order.service"
      },
      "line": 25
    },
    "msRepository": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.repository.OrderRepository",
      "packageName": "order.repository",
      "className": "OrderRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "ArrayList\u003cOrder\u003e",
      "methodName": "findByAccountId",
      "className": "OrderRepository",
      "packageName": "order.repository",
      "methodId": "order.repository.OrderRepository.findByAccountId",
      "classId": "order.repository.OrderRepository",
      "line": 23,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.controller.OrderController",
      "packageName": "order.controller",
      "className": "OrderController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "HttpEntity",
      "methodName": "queryOrders",
      "className": "OrderController",
      "packageName": "order.controller",
      "methodId": "order.controller.OrderController.queryOrders",
      "classId": "order.controller.OrderController",
      "line": 55,
      "msArgumentList": [
        {
          "returnType": "OrderInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "path",
          "value": "\"/order/query\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "parentPackageName": "order.controller",
      "parentClassName": "OrderController",
      "parentMethodName": "queryOrders",
      "parentClassId": "order.controller.OrderController",
      "lineNumber": 61,
      "calledMethodName": "queryOrders",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.queryOrders(qi, qi.getLoginId(), headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "fieldClass": "OrderService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderController",
        "parentPackageName": "order.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.service.OrderServiceImpl",
      "packageName": "order.service",
      "className": "OrderServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "Response\u003cArrayList\u003cOrder\u003e\u003e",
      "methodName": "queryOrders",
      "className": "OrderServiceImpl",
      "packageName": "order.service",
      "methodId": "order.service.OrderServiceImpl.queryOrders",
      "classId": "order.service.OrderServiceImpl",
      "line": 106,
      "msArgumentList": [
        {
          "returnType": "OrderInfo"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "parentPackageName": "order.service",
      "parentClassName": "OrderServiceImpl",
      "parentMethodName": "queryOrders",
      "parentClassId": "order.service.OrderServiceImpl",
      "lineNumber": 109,
      "calledMethodName": "findByAccountId",
      "calledServiceId": "orderRepository",
      "statementDeclaration": "orderRepository.findByAccountId(UUID.fromString(accountId))"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "fieldClass": "OrderRepository",
      "fieldVariable": "orderRepository",
      "parentMethod": {
        "parentClassName": "OrderServiceImpl",
        "parentPackageName": "order.service"
      },
      "line": 25
    },
    "msRepository": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.repository.OrderRepository",
      "packageName": "order.repository",
      "className": "OrderRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "ArrayList\u003cOrder\u003e",
      "methodName": "findByAccountId",
      "className": "OrderRepository",
      "packageName": "order.repository",
      "methodId": "order.repository.OrderRepository.findByAccountId",
      "classId": "order.repository.OrderRepository",
      "line": 23,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.controller.OrderController",
      "packageName": "order.controller",
      "className": "OrderController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "HttpEntity",
      "methodName": "queryOrdersForRefresh",
      "className": "OrderController",
      "packageName": "order.controller",
      "methodId": "order.controller.OrderController.queryOrdersForRefresh",
      "classId": "order.controller.OrderController",
      "line": 64,
      "msArgumentList": [
        {
          "returnType": "OrderInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "path",
          "value": "\"/order/refresh\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "parentPackageName": "order.controller",
      "parentClassName": "OrderController",
      "parentMethodName": "queryOrdersForRefresh",
      "parentClassId": "order.controller.OrderController",
      "lineNumber": 69,
      "calledMethodName": "queryOrdersForRefresh",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.queryOrdersForRefresh(qi, qi.getLoginId(), headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "fieldClass": "OrderService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderController",
        "parentPackageName": "order.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.service.OrderServiceImpl",
      "packageName": "order.service",
      "className": "OrderServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "Response",
      "methodName": "queryOrdersForRefresh",
      "className": "OrderServiceImpl",
      "packageName": "order.service",
      "methodId": "order.service.OrderServiceImpl.queryOrdersForRefresh",
      "classId": "order.service.OrderServiceImpl",
      "line": 167,
      "msArgumentList": [
        {
          "returnType": "OrderInfo"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": []
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.controller.OrderController",
      "packageName": "order.controller",
      "className": "OrderController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "HttpEntity",
      "methodName": "calculateSoldTicket",
      "className": "OrderController",
      "packageName": "order.controller",
      "methodId": "order.controller.OrderController.calculateSoldTicket",
      "classId": "order.controller.OrderController",
      "line": 72,
      "msArgumentList": [
        {
          "returnType": "Date"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/order/{travelDate}/{trainNumber}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "parentPackageName": "order.controller",
      "parentClassName": "OrderController",
      "parentMethodName": "calculateSoldTicket",
      "parentClassId": "order.controller.OrderController",
      "lineNumber": 77,
      "calledMethodName": "queryAlreadySoldOrders",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.queryAlreadySoldOrders(travelDate, trainNumber, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "fieldClass": "OrderService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderController",
        "parentPackageName": "order.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.service.OrderServiceImpl",
      "packageName": "order.service",
      "className": "OrderServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "Response",
      "methodName": "queryAlreadySoldOrders",
      "className": "OrderServiceImpl",
      "packageName": "order.service",
      "methodId": "order.service.OrderServiceImpl.queryAlreadySoldOrders",
      "classId": "order.service.OrderServiceImpl",
      "line": 240,
      "msArgumentList": [
        {
          "returnType": "Date"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "parentPackageName": "order.service",
      "parentClassName": "OrderServiceImpl",
      "parentMethodName": "queryAlreadySoldOrders",
      "parentClassId": "order.service.OrderServiceImpl",
      "lineNumber": 242,
      "calledMethodName": "findByTravelDateAndTrainNumber",
      "calledServiceId": "orderRepository",
      "statementDeclaration": "orderRepository.findByTravelDateAndTrainNumber(travelDate, trainNumber)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "fieldClass": "OrderRepository",
      "fieldVariable": "orderRepository",
      "parentMethod": {
        "parentClassName": "OrderServiceImpl",
        "parentPackageName": "order.service"
      },
      "line": 25
    },
    "msRepository": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.repository.OrderRepository",
      "packageName": "order.repository",
      "className": "OrderRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "ArrayList\u003cOrder\u003e",
      "methodName": "findByTravelDateAndTrainNumber",
      "className": "OrderRepository",
      "packageName": "order.repository",
      "methodId": "order.repository.OrderRepository.findByTravelDateAndTrainNumber",
      "classId": "order.repository.OrderRepository",
      "line": 26,
      "msArgumentList": [
        {
          "returnType": "Date"
        },
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.controller.OrderController",
      "packageName": "order.controller",
      "className": "OrderController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "HttpEntity",
      "methodName": "getOrderPrice",
      "className": "OrderController",
      "packageName": "order.controller",
      "methodId": "order.controller.OrderController.getOrderPrice",
      "classId": "order.controller.OrderController",
      "line": 80,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/order/price/{orderId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "parentPackageName": "order.controller",
      "parentClassName": "OrderController",
      "parentMethodName": "getOrderPrice",
      "parentClassId": "order.controller.OrderController",
      "lineNumber": 85,
      "calledMethodName": "getOrderPrice",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.getOrderPrice(orderId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "fieldClass": "OrderService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderController",
        "parentPackageName": "order.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.service.OrderServiceImpl",
      "packageName": "order.service",
      "className": "OrderServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "Response",
      "methodName": "getOrderPrice",
      "className": "OrderServiceImpl",
      "packageName": "order.service",
      "methodId": "order.service.OrderServiceImpl.getOrderPrice",
      "classId": "order.service.OrderServiceImpl",
      "line": 300,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "parentPackageName": "order.service",
      "parentClassName": "OrderServiceImpl",
      "parentMethodName": "getOrderPrice",
      "parentClassId": "order.service.OrderServiceImpl",
      "lineNumber": 302,
      "calledMethodName": "findById",
      "calledServiceId": "orderRepository",
      "statementDeclaration": "orderRepository.findById(UUID.fromString(orderId))"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "fieldClass": "OrderRepository",
      "fieldVariable": "orderRepository",
      "parentMethod": {
        "parentClassName": "OrderServiceImpl",
        "parentPackageName": "order.service"
      },
      "line": 25
    },
    "msRepository": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.repository.OrderRepository",
      "packageName": "order.repository",
      "className": "OrderRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "Order",
      "methodName": "findById",
      "className": "OrderRepository",
      "packageName": "order.repository",
      "methodId": "order.repository.OrderRepository.findById",
      "classId": "order.repository.OrderRepository",
      "line": 17,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.controller.OrderController",
      "packageName": "order.controller",
      "className": "OrderController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "HttpEntity",
      "methodName": "payOrder",
      "className": "OrderController",
      "packageName": "order.controller",
      "methodId": "order.controller.OrderController.payOrder",
      "classId": "order.controller.OrderController",
      "line": 89,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/order/orderPay/{orderId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "parentPackageName": "order.controller",
      "parentClassName": "OrderController",
      "parentMethodName": "payOrder",
      "parentClassId": "order.controller.OrderController",
      "lineNumber": 94,
      "calledMethodName": "payOrder",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.payOrder(orderId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "fieldClass": "OrderService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderController",
        "parentPackageName": "order.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.service.OrderServiceImpl",
      "packageName": "order.service",
      "className": "OrderServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "Response",
      "methodName": "payOrder",
      "className": "OrderServiceImpl",
      "packageName": "order.service",
      "methodId": "order.service.OrderServiceImpl.payOrder",
      "classId": "order.service.OrderServiceImpl",
      "line": 312,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "parentPackageName": "order.service",
      "parentClassName": "OrderServiceImpl",
      "parentMethodName": "payOrder",
      "parentClassId": "order.service.OrderServiceImpl",
      "lineNumber": 314,
      "calledMethodName": "findById",
      "calledServiceId": "orderRepository",
      "statementDeclaration": "orderRepository.findById(UUID.fromString(orderId))"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "fieldClass": "OrderRepository",
      "fieldVariable": "orderRepository",
      "parentMethod": {
        "parentClassName": "OrderServiceImpl",
        "parentPackageName": "order.service"
      },
      "line": 25
    },
    "msRepository": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.repository.OrderRepository",
      "packageName": "order.repository",
      "className": "OrderRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "Order",
      "methodName": "findById",
      "className": "OrderRepository",
      "packageName": "order.repository",
      "methodId": "order.repository.OrderRepository.findById",
      "classId": "order.repository.OrderRepository",
      "line": 17,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.controller.OrderController",
      "packageName": "order.controller",
      "className": "OrderController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "HttpEntity",
      "methodName": "getOrderById",
      "className": "OrderController",
      "packageName": "order.controller",
      "methodId": "order.controller.OrderController.getOrderById",
      "classId": "order.controller.OrderController",
      "line": 97,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/order/{orderId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "parentPackageName": "order.controller",
      "parentClassName": "OrderController",
      "parentMethodName": "getOrderById",
      "parentClassId": "order.controller.OrderController",
      "lineNumber": 102,
      "calledMethodName": "getOrderById",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.getOrderById(orderId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "fieldClass": "OrderService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderController",
        "parentPackageName": "order.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.service.OrderServiceImpl",
      "packageName": "order.service",
      "className": "OrderServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "Response",
      "methodName": "getOrderById",
      "className": "OrderServiceImpl",
      "packageName": "order.service",
      "methodId": "order.service.OrderServiceImpl.getOrderById",
      "classId": "order.service.OrderServiceImpl",
      "line": 325,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "parentPackageName": "order.service",
      "parentClassName": "OrderServiceImpl",
      "parentMethodName": "getOrderById",
      "parentClassId": "order.service.OrderServiceImpl",
      "lineNumber": 327,
      "calledMethodName": "findById",
      "calledServiceId": "orderRepository",
      "statementDeclaration": "orderRepository.findById(UUID.fromString(orderId))"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "fieldClass": "OrderRepository",
      "fieldVariable": "orderRepository",
      "parentMethod": {
        "parentClassName": "OrderServiceImpl",
        "parentPackageName": "order.service"
      },
      "line": 25
    },
    "msRepository": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.repository.OrderRepository",
      "packageName": "order.repository",
      "className": "OrderRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "Order",
      "methodName": "findById",
      "className": "OrderRepository",
      "packageName": "order.repository",
      "methodId": "order.repository.OrderRepository.findById",
      "classId": "order.repository.OrderRepository",
      "line": 17,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.controller.OrderController",
      "packageName": "order.controller",
      "className": "OrderController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "HttpEntity",
      "methodName": "modifyOrder",
      "className": "OrderController",
      "packageName": "order.controller",
      "methodId": "order.controller.OrderController.modifyOrder",
      "classId": "order.controller.OrderController",
      "line": 105,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "int"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/order/status/{orderId}/{status}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "parentPackageName": "order.controller",
      "parentClassName": "OrderController",
      "parentMethodName": "modifyOrder",
      "parentClassId": "order.controller.OrderController",
      "lineNumber": 110,
      "calledMethodName": "modifyOrder",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.modifyOrder(orderId, status, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "fieldClass": "OrderService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderController",
        "parentPackageName": "order.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.service.OrderServiceImpl",
      "packageName": "order.service",
      "className": "OrderServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "Response",
      "methodName": "modifyOrder",
      "className": "OrderServiceImpl",
      "packageName": "order.service",
      "methodId": "order.service.OrderServiceImpl.modifyOrder",
      "classId": "order.service.OrderServiceImpl",
      "line": 287,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "int"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "parentPackageName": "order.service",
      "parentClassName": "OrderServiceImpl",
      "parentMethodName": "modifyOrder",
      "parentClassId": "order.service.OrderServiceImpl",
      "lineNumber": 289,
      "calledMethodName": "findById",
      "calledServiceId": "orderRepository",
      "statementDeclaration": "orderRepository.findById(UUID.fromString(orderId))"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "fieldClass": "OrderRepository",
      "fieldVariable": "orderRepository",
      "parentMethod": {
        "parentClassName": "OrderServiceImpl",
        "parentPackageName": "order.service"
      },
      "line": 25
    },
    "msRepository": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.repository.OrderRepository",
      "packageName": "order.repository",
      "className": "OrderRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "Order",
      "methodName": "findById",
      "className": "OrderRepository",
      "packageName": "order.repository",
      "methodId": "order.repository.OrderRepository.findById",
      "classId": "order.repository.OrderRepository",
      "line": 17,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.controller.OrderController",
      "packageName": "order.controller",
      "className": "OrderController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "HttpEntity",
      "methodName": "securityInfoCheck",
      "className": "OrderController",
      "packageName": "order.controller",
      "methodId": "order.controller.OrderController.securityInfoCheck",
      "classId": "order.controller.OrderController",
      "line": 114,
      "msArgumentList": [
        {
          "returnType": "Date"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/order/security/{checkDate}/{accountId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "parentPackageName": "order.controller",
      "parentClassName": "OrderController",
      "parentMethodName": "securityInfoCheck",
      "parentClassId": "order.controller.OrderController",
      "lineNumber": 119,
      "calledMethodName": "checkSecurityAboutOrder",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.checkSecurityAboutOrder(checkDate, accountId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "fieldClass": "OrderService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderController",
        "parentPackageName": "order.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.service.OrderServiceImpl",
      "packageName": "order.service",
      "className": "OrderServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "Response",
      "methodName": "checkSecurityAboutOrder",
      "className": "OrderServiceImpl",
      "packageName": "order.service",
      "methodId": "order.service.OrderServiceImpl.checkSecurityAboutOrder",
      "classId": "order.service.OrderServiceImpl",
      "line": 346,
      "msArgumentList": [
        {
          "returnType": "Date"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "parentPackageName": "order.service",
      "parentClassName": "OrderServiceImpl",
      "parentMethodName": "checkSecurityAboutOrder",
      "parentClassId": "order.service.OrderServiceImpl",
      "lineNumber": 349,
      "calledMethodName": "findByAccountId",
      "calledServiceId": "orderRepository",
      "statementDeclaration": "orderRepository.findByAccountId(UUID.fromString(accountId))"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "fieldClass": "OrderRepository",
      "fieldVariable": "orderRepository",
      "parentMethod": {
        "parentClassName": "OrderServiceImpl",
        "parentPackageName": "order.service"
      },
      "line": 25
    },
    "msRepository": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.repository.OrderRepository",
      "packageName": "order.repository",
      "className": "OrderRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "ArrayList\u003cOrder\u003e",
      "methodName": "findByAccountId",
      "className": "OrderRepository",
      "packageName": "order.repository",
      "methodId": "order.repository.OrderRepository.findByAccountId",
      "classId": "order.repository.OrderRepository",
      "line": 23,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.controller.OrderController",
      "packageName": "order.controller",
      "className": "OrderController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "HttpEntity",
      "methodName": "saveOrderInfo",
      "className": "OrderController",
      "packageName": "order.controller",
      "methodId": "order.controller.OrderController.saveOrderInfo",
      "classId": "order.controller.OrderController",
      "line": 123,
      "msArgumentList": [
        {
          "returnType": "Order"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PutMapping",
          "key": "path",
          "value": "\"/order\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "parentPackageName": "order.controller",
      "parentClassName": "OrderController",
      "parentMethodName": "saveOrderInfo",
      "parentClassId": "order.controller.OrderController",
      "lineNumber": 129,
      "calledMethodName": "saveChanges",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.saveChanges(orderInfo, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "fieldClass": "OrderService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderController",
        "parentPackageName": "order.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.service.OrderServiceImpl",
      "packageName": "order.service",
      "className": "OrderServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "Response",
      "methodName": "saveChanges",
      "className": "OrderServiceImpl",
      "packageName": "order.service",
      "methodId": "order.service.OrderServiceImpl.saveChanges",
      "classId": "order.service.OrderServiceImpl",
      "line": 197,
      "msArgumentList": [
        {
          "returnType": "Order"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "parentPackageName": "order.service",
      "parentClassName": "OrderServiceImpl",
      "parentMethodName": "saveChanges",
      "parentClassId": "order.service.OrderServiceImpl",
      "lineNumber": 200,
      "calledMethodName": "findById",
      "calledServiceId": "orderRepository",
      "statementDeclaration": "orderRepository.findById(order.getId())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "fieldClass": "OrderRepository",
      "fieldVariable": "orderRepository",
      "parentMethod": {
        "parentClassName": "OrderServiceImpl",
        "parentPackageName": "order.service"
      },
      "line": 25
    },
    "msRepository": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.repository.OrderRepository",
      "packageName": "order.repository",
      "className": "OrderRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "Order",
      "methodName": "findById",
      "className": "OrderRepository",
      "packageName": "order.repository",
      "methodId": "order.repository.OrderRepository.findById",
      "classId": "order.repository.OrderRepository",
      "line": 17,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.controller.OrderController",
      "packageName": "order.controller",
      "className": "OrderController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "HttpEntity",
      "methodName": "updateOrder",
      "className": "OrderController",
      "packageName": "order.controller",
      "methodId": "order.controller.OrderController.updateOrder",
      "classId": "order.controller.OrderController",
      "line": 132,
      "msArgumentList": [
        {
          "returnType": "Order"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PutMapping",
          "key": "path",
          "value": "\"/order/admin\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "parentPackageName": "order.controller",
      "parentClassName": "OrderController",
      "parentMethodName": "updateOrder",
      "parentClassId": "order.controller.OrderController",
      "lineNumber": 137,
      "calledMethodName": "updateOrder",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.updateOrder(order, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "fieldClass": "OrderService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderController",
        "parentPackageName": "order.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.service.OrderServiceImpl",
      "packageName": "order.service",
      "className": "OrderServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "Response",
      "methodName": "updateOrder",
      "className": "OrderServiceImpl",
      "packageName": "order.service",
      "methodId": "order.service.OrderServiceImpl.updateOrder",
      "classId": "order.service.OrderServiceImpl",
      "line": 401,
      "msArgumentList": [
        {
          "returnType": "Order"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "parentPackageName": "order.service",
      "parentClassName": "OrderServiceImpl",
      "parentMethodName": "updateOrder",
      "parentClassId": "order.service.OrderServiceImpl",
      "lineNumber": 404,
      "calledMethodName": "findById",
      "calledServiceId": "orderRepository",
      "statementDeclaration": "orderRepository.findById(order.getId())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "fieldClass": "OrderRepository",
      "fieldVariable": "orderRepository",
      "parentMethod": {
        "parentClassName": "OrderServiceImpl",
        "parentPackageName": "order.service"
      },
      "line": 25
    },
    "msRepository": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.repository.OrderRepository",
      "packageName": "order.repository",
      "className": "OrderRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "Order",
      "methodName": "findById",
      "className": "OrderRepository",
      "packageName": "order.repository",
      "methodId": "order.repository.OrderRepository.findById",
      "classId": "order.repository.OrderRepository",
      "line": 17,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.controller.OrderController",
      "packageName": "order.controller",
      "className": "OrderController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "HttpEntity",
      "methodName": "deleteOrder",
      "className": "OrderController",
      "packageName": "order.controller",
      "methodId": "order.controller.OrderController.deleteOrder",
      "classId": "order.controller.OrderController",
      "line": 141,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "DeleteMapping",
          "key": "path",
          "value": "\"/order/{orderId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "parentPackageName": "order.controller",
      "parentClassName": "OrderController",
      "parentMethodName": "deleteOrder",
      "parentClassId": "order.controller.OrderController",
      "lineNumber": 146,
      "calledMethodName": "deleteOrder",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.deleteOrder(orderId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "fieldClass": "OrderService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderController",
        "parentPackageName": "order.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.service.OrderServiceImpl",
      "packageName": "order.service",
      "className": "OrderServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "Response",
      "methodName": "deleteOrder",
      "className": "OrderServiceImpl",
      "packageName": "order.service",
      "methodId": "order.service.OrderServiceImpl.deleteOrder",
      "classId": "order.service.OrderServiceImpl",
      "line": 371,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "parentPackageName": "order.service",
      "parentClassName": "OrderServiceImpl",
      "parentMethodName": "deleteOrder",
      "parentClassId": "order.service.OrderServiceImpl",
      "lineNumber": 374,
      "calledMethodName": "findById",
      "calledServiceId": "orderRepository",
      "statementDeclaration": "orderRepository.findById(orderUuid)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "fieldClass": "OrderRepository",
      "fieldVariable": "orderRepository",
      "parentMethod": {
        "parentClassName": "OrderServiceImpl",
        "parentPackageName": "order.service"
      },
      "line": 25
    },
    "msRepository": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.repository.OrderRepository",
      "packageName": "order.repository",
      "className": "OrderRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "Order",
      "methodName": "findById",
      "className": "OrderRepository",
      "packageName": "order.repository",
      "methodId": "order.repository.OrderRepository.findById",
      "classId": "order.repository.OrderRepository",
      "line": 17,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.controller.OrderController",
      "packageName": "order.controller",
      "className": "OrderController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "HttpEntity",
      "methodName": "findAllOrder",
      "className": "OrderController",
      "packageName": "order.controller",
      "methodId": "order.controller.OrderController.findAllOrder",
      "classId": "order.controller.OrderController",
      "line": 151,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/order\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "parentPackageName": "order.controller",
      "parentClassName": "OrderController",
      "parentMethodName": "findAllOrder",
      "parentClassId": "order.controller.OrderController",
      "lineNumber": 156,
      "calledMethodName": "getAllOrders",
      "calledServiceId": "orderService",
      "statementDeclaration": "orderService.getAllOrders(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/controller/OrderController.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "fieldClass": "OrderService",
      "fieldVariable": "orderService",
      "parentMethod": {
        "parentClassName": "OrderController",
        "parentPackageName": "order.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.service.OrderServiceImpl",
      "packageName": "order.service",
      "className": "OrderServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "Response",
      "methodName": "getAllOrders",
      "className": "OrderServiceImpl",
      "packageName": "order.service",
      "methodId": "order.service.OrderServiceImpl.getAllOrders",
      "classId": "order.service.OrderServiceImpl",
      "line": 276,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "parentPackageName": "order.service",
      "parentClassName": "OrderServiceImpl",
      "parentMethodName": "getAllOrders",
      "parentClassId": "order.service.OrderServiceImpl",
      "lineNumber": 278,
      "calledMethodName": "findAll",
      "calledServiceId": "orderRepository",
      "statementDeclaration": "orderRepository.findAll()"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/service/OrderServiceImpl.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "fieldClass": "OrderRepository",
      "fieldVariable": "orderRepository",
      "parentMethod": {
        "parentClassName": "OrderServiceImpl",
        "parentPackageName": "order.service"
      },
      "line": 25
    },
    "msRepository": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "classId": "order.repository.OrderRepository",
      "packageName": "order.repository",
      "className": "OrderRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-order-service/src/main/java/order/repository/OrderRepository.java",
        "directoryName": "/ts-order-service/src/main/java/order"
      },
      "returnType": "ArrayList\u003cOrder\u003e",
      "methodName": "findAll",
      "className": "OrderRepository",
      "packageName": "order.repository",
      "methodId": "order.repository.OrderRepository.findAll",
      "classId": "order.repository.OrderRepository",
      "line": 20,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-verification-code-service/src/main/java/verifycode/controller/VerifyCodeController.java",
        "directoryName": "/ts-verification-code-service/src/main/java/verifycode"
      },
      "classId": "verifycode.controller.VerifyCodeController",
      "packageName": "verifycode.controller",
      "className": "VerifyCodeController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-verification-code-service/src/main/java/verifycode/controller/VerifyCodeController.java",
        "directoryName": "/ts-verification-code-service/src/main/java/verifycode"
      },
      "returnType": "void",
      "methodName": "imageCode",
      "className": "VerifyCodeController",
      "packageName": "verifycode.controller",
      "methodId": "verifycode.controller.VerifyCodeController.imageCode",
      "classId": "verifycode.controller.VerifyCodeController",
      "line": 29,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        },
        {
          "returnType": "HttpServletRequest"
        },
        {
          "returnType": "HttpServletResponse"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "GetMapping"
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-verification-code-service/src/main/java/verifycode/controller/VerifyCodeController.java",
        "directoryName": "/ts-verification-code-service/src/main/java/verifycode"
      },
      "parentPackageName": "verifycode.controller",
      "parentClassName": "VerifyCodeController",
      "parentMethodName": "imageCode",
      "parentClassId": "verifycode.controller.VerifyCodeController",
      "lineNumber": 35,
      "calledMethodName": "getImageCode",
      "calledServiceId": "verifyCodeService",
      "statementDeclaration": "verifyCodeService.getImageCode(60, 20, os, request, response, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-verification-code-service/src/main/java/verifycode/controller/VerifyCodeController.java",
        "directoryName": "/ts-verification-code-service/src/main/java/verifycode"
      },
      "fieldClass": "VerifyCodeService",
      "fieldVariable": "verifyCodeService",
      "parentMethod": {
        "parentClassName": "VerifyCodeController",
        "parentPackageName": "verifycode.controller"
      },
      "line": 26
    },
    "msService": {
      "msId": {
        "path": "/ts-verification-code-service/src/main/java/verifycode/service/impl/VerifyCodeServiceImpl.java",
        "directoryName": "/ts-verification-code-service/src/main/java/verifycode"
      },
      "classId": "verifycode.service.impl.VerifyCodeServiceImpl",
      "packageName": "verifycode.service.impl",
      "className": "VerifyCodeServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-verification-code-service/src/main/java/verifycode/service/impl/VerifyCodeServiceImpl.java",
        "directoryName": "/ts-verification-code-service/src/main/java/verifycode"
      },
      "returnType": "Map\u003cString,Object\u003e",
      "methodName": "getImageCode",
      "className": "VerifyCodeServiceImpl",
      "packageName": "verifycode.service.impl",
      "methodId": "verifycode.service.impl.VerifyCodeServiceImpl.getImageCode",
      "classId": "verifycode.service.impl.VerifyCodeServiceImpl",
      "line": 49,
      "msArgumentList": [
        {
          "returnType": "int"
        },
        {
          "returnType": "int"
        },
        {
          "returnType": "OutputStream"
        },
        {
          "returnType": "HttpServletRequest"
        },
        {
          "returnType": "HttpServletResponse"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": []
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-verification-code-service/src/main/java/verifycode/controller/VerifyCodeController.java",
        "directoryName": "/ts-verification-code-service/src/main/java/verifycode"
      },
      "classId": "verifycode.controller.VerifyCodeController",
      "packageName": "verifycode.controller",
      "className": "VerifyCodeController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-verification-code-service/src/main/java/verifycode/controller/VerifyCodeController.java",
        "directoryName": "/ts-verification-code-service/src/main/java/verifycode"
      },
      "returnType": "boolean",
      "methodName": "verifyCode",
      "className": "VerifyCodeController",
      "packageName": "verifycode.controller",
      "methodId": "verifycode.controller.VerifyCodeController.verifyCode",
      "classId": "verifycode.controller.VerifyCodeController",
      "line": 48,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpServletRequest"
        },
        {
          "returnType": "HttpServletResponse"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/verify/{verifyCode}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-verification-code-service/src/main/java/verifycode/controller/VerifyCodeController.java",
        "directoryName": "/ts-verification-code-service/src/main/java/verifycode"
      },
      "parentPackageName": "verifycode.controller",
      "parentClassName": "VerifyCodeController",
      "parentMethodName": "verifyCode",
      "parentClassId": "verifycode.controller.VerifyCodeController",
      "lineNumber": 53,
      "calledMethodName": "verifyCode",
      "calledServiceId": "verifyCodeService",
      "statementDeclaration": "verifyCodeService.verifyCode(request, response, verifyCode, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-verification-code-service/src/main/java/verifycode/controller/VerifyCodeController.java",
        "directoryName": "/ts-verification-code-service/src/main/java/verifycode"
      },
      "fieldClass": "VerifyCodeService",
      "fieldVariable": "verifyCodeService",
      "parentMethod": {
        "parentClassName": "VerifyCodeController",
        "parentPackageName": "verifycode.controller"
      },
      "line": 26
    },
    "msService": {
      "msId": {
        "path": "/ts-verification-code-service/src/main/java/verifycode/service/impl/VerifyCodeServiceImpl.java",
        "directoryName": "/ts-verification-code-service/src/main/java/verifycode"
      },
      "classId": "verifycode.service.impl.VerifyCodeServiceImpl",
      "packageName": "verifycode.service.impl",
      "className": "VerifyCodeServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-verification-code-service/src/main/java/verifycode/service/impl/VerifyCodeServiceImpl.java",
        "directoryName": "/ts-verification-code-service/src/main/java/verifycode"
      },
      "returnType": "boolean",
      "methodName": "verifyCode",
      "className": "VerifyCodeServiceImpl",
      "packageName": "verifycode.service.impl",
      "methodId": "verifycode.service.impl.VerifyCodeServiceImpl.verifyCode",
      "classId": "verifycode.service.impl.VerifyCodeServiceImpl",
      "line": 112,
      "msArgumentList": [
        {
          "returnType": "HttpServletRequest"
        },
        {
          "returnType": "HttpServletResponse"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": []
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "classId": "foodsearch.controller.FoodController",
      "packageName": "foodsearch.controller",
      "className": "FoodController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "FoodController",
      "packageName": "foodsearch.controller",
      "methodId": "foodsearch.controller.FoodController.home",
      "classId": "foodsearch.controller.FoodController",
      "line": 32,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "classId": "foodsearch.controller.FoodController",
      "packageName": "foodsearch.controller",
      "className": "FoodController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "returnType": "boolean",
      "methodName": "test_send_delivery",
      "className": "FoodController",
      "packageName": "foodsearch.controller",
      "methodId": "foodsearch.controller.FoodController.test_send_delivery",
      "classId": "foodsearch.controller.FoodController",
      "line": 37,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/test_send_delivery\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "classId": "foodsearch.controller.FoodController",
      "packageName": "foodsearch.controller",
      "className": "FoodController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "returnType": "HttpEntity",
      "methodName": "findAllFoodOrder",
      "className": "FoodController",
      "packageName": "foodsearch.controller",
      "methodId": "foodsearch.controller.FoodController.findAllFoodOrder",
      "classId": "foodsearch.controller.FoodController",
      "line": 50,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/orders\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "parentPackageName": "foodsearch.controller",
      "parentClassName": "FoodController",
      "parentMethodName": "findAllFoodOrder",
      "parentClassId": "foodsearch.controller.FoodController",
      "lineNumber": 53,
      "calledMethodName": "findAllFoodOrder",
      "calledServiceId": "foodService",
      "statementDeclaration": "foodService.findAllFoodOrder(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "fieldClass": "FoodService",
      "fieldVariable": "foodService",
      "parentMethod": {
        "parentClassName": "FoodController",
        "parentPackageName": "foodsearch.controller"
      },
      "line": 24
    },
    "msService": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "classId": "foodsearch.service.FoodServiceImpl",
      "packageName": "foodsearch.service",
      "className": "FoodServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "returnType": "Response",
      "methodName": "findAllFoodOrder",
      "className": "FoodServiceImpl",
      "packageName": "foodsearch.service",
      "methodId": "foodsearch.service.FoodServiceImpl.findAllFoodOrder",
      "classId": "foodsearch.service.FoodServiceImpl",
      "line": 151,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "parentPackageName": "foodsearch.service",
      "parentClassName": "FoodServiceImpl",
      "parentMethodName": "findAllFoodOrder",
      "parentClassId": "foodsearch.service.FoodServiceImpl",
      "lineNumber": 153,
      "calledMethodName": "findAll",
      "calledServiceId": "foodOrderRepository",
      "statementDeclaration": "foodOrderRepository.findAll()"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "fieldClass": "FoodOrderRepository",
      "fieldVariable": "foodOrderRepository",
      "parentMethod": {
        "parentClassName": "FoodServiceImpl",
        "parentPackageName": "foodsearch.service"
      },
      "line": 32
    },
    "msRepository": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/repository/FoodOrderRepository.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "classId": "foodsearch.repository.FoodOrderRepository",
      "packageName": "foodsearch.repository",
      "className": "FoodOrderRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/repository/FoodOrderRepository.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "returnType": "List\u003cFoodOrder\u003e",
      "methodName": "findAll",
      "className": "FoodOrderRepository",
      "packageName": "foodsearch.repository",
      "methodId": "foodsearch.repository.FoodOrderRepository.findAll",
      "classId": "foodsearch.repository.FoodOrderRepository",
      "line": 19,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "classId": "foodsearch.controller.FoodController",
      "packageName": "foodsearch.controller",
      "className": "FoodController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "returnType": "HttpEntity",
      "methodName": "createFoodOrder",
      "className": "FoodController",
      "packageName": "foodsearch.controller",
      "methodId": "foodsearch.controller.FoodController.createFoodOrder",
      "classId": "foodsearch.controller.FoodController",
      "line": 56,
      "msArgumentList": [
        {
          "returnType": "FoodOrder"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "path",
          "value": "\"/orders\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "parentPackageName": "foodsearch.controller",
      "parentClassName": "FoodController",
      "parentMethodName": "createFoodOrder",
      "parentClassId": "foodsearch.controller.FoodController",
      "lineNumber": 59,
      "calledMethodName": "createFoodOrder",
      "calledServiceId": "foodService",
      "statementDeclaration": "foodService.createFoodOrder(addFoodOrder, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "fieldClass": "FoodService",
      "fieldVariable": "foodService",
      "parentMethod": {
        "parentClassName": "FoodController",
        "parentPackageName": "foodsearch.controller"
      },
      "line": 24
    },
    "msService": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "classId": "foodsearch.service.FoodServiceImpl",
      "packageName": "foodsearch.service",
      "className": "FoodServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "returnType": "Response",
      "methodName": "createFoodOrder",
      "className": "FoodServiceImpl",
      "packageName": "foodsearch.service",
      "methodId": "foodsearch.service.FoodServiceImpl.createFoodOrder",
      "classId": "foodsearch.service.FoodServiceImpl",
      "line": 99,
      "msArgumentList": [
        {
          "returnType": "FoodOrder"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "parentPackageName": "foodsearch.service",
      "parentClassName": "FoodServiceImpl",
      "parentMethodName": "createFoodOrder",
      "parentClassId": "foodsearch.service.FoodServiceImpl",
      "lineNumber": 102,
      "calledMethodName": "findByOrderId",
      "calledServiceId": "foodOrderRepository",
      "statementDeclaration": "foodOrderRepository.findByOrderId(addFoodOrder.getOrderId())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "fieldClass": "FoodOrderRepository",
      "fieldVariable": "foodOrderRepository",
      "parentMethod": {
        "parentClassName": "FoodServiceImpl",
        "parentPackageName": "foodsearch.service"
      },
      "line": 32
    },
    "msRepository": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/repository/FoodOrderRepository.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "classId": "foodsearch.repository.FoodOrderRepository",
      "packageName": "foodsearch.repository",
      "className": "FoodOrderRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/repository/FoodOrderRepository.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "returnType": "FoodOrder",
      "methodName": "findByOrderId",
      "className": "FoodOrderRepository",
      "packageName": "foodsearch.repository",
      "methodId": "foodsearch.repository.FoodOrderRepository.findByOrderId",
      "classId": "foodsearch.repository.FoodOrderRepository",
      "line": 16,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "classId": "foodsearch.controller.FoodController",
      "packageName": "foodsearch.controller",
      "className": "FoodController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "returnType": "HttpEntity",
      "methodName": "createFoodBatches",
      "className": "FoodController",
      "packageName": "foodsearch.controller",
      "methodId": "foodsearch.controller.FoodController.createFoodBatches",
      "classId": "foodsearch.controller.FoodController",
      "line": 62,
      "msArgumentList": [
        {
          "returnType": "List\u003cFoodOrder\u003e"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "path",
          "value": "\"/createOrderBatch\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "parentPackageName": "foodsearch.controller",
      "parentClassName": "FoodController",
      "parentMethodName": "createFoodBatches",
      "parentClassId": "foodsearch.controller.FoodController",
      "lineNumber": 65,
      "calledMethodName": "createFoodOrdersInBatch",
      "calledServiceId": "foodService",
      "statementDeclaration": "foodService.createFoodOrdersInBatch(foodOrderList, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "fieldClass": "FoodService",
      "fieldVariable": "foodService",
      "parentMethod": {
        "parentClassName": "FoodController",
        "parentPackageName": "foodsearch.controller"
      },
      "line": 24
    },
    "msService": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "classId": "foodsearch.service.FoodServiceImpl",
      "packageName": "foodsearch.service",
      "className": "FoodServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "returnType": "Response",
      "methodName": "createFoodOrdersInBatch",
      "className": "FoodServiceImpl",
      "packageName": "foodsearch.service",
      "methodId": "foodsearch.service.FoodServiceImpl.createFoodOrdersInBatch",
      "classId": "foodsearch.service.FoodServiceImpl",
      "line": 43,
      "msArgumentList": [
        {
          "returnType": "List\u003cFoodOrder\u003e"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": []
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "parentPackageName": "foodsearch.service",
      "parentClassName": "FoodServiceImpl",
      "parentMethodName": "createFoodOrdersInBatch",
      "parentClassId": "foodsearch.service.FoodServiceImpl",
      "lineNumber": 49,
      "calledMethodName": "findByOrderId",
      "calledServiceId": "foodOrderRepository",
      "statementDeclaration": "foodOrderRepository.findByOrderId(addFoodOrder.getOrderId())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "fieldClass": "FoodOrderRepository",
      "fieldVariable": "foodOrderRepository",
      "parentMethod": {
        "parentClassName": "FoodServiceImpl",
        "parentPackageName": "foodsearch.service"
      },
      "line": 32
    },
    "msRepository": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/repository/FoodOrderRepository.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "classId": "foodsearch.repository.FoodOrderRepository",
      "packageName": "foodsearch.repository",
      "className": "FoodOrderRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/repository/FoodOrderRepository.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "returnType": "FoodOrder",
      "methodName": "findByOrderId",
      "className": "FoodOrderRepository",
      "packageName": "foodsearch.repository",
      "methodId": "foodsearch.repository.FoodOrderRepository.findByOrderId",
      "classId": "foodsearch.repository.FoodOrderRepository",
      "line": 16,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "classId": "foodsearch.controller.FoodController",
      "packageName": "foodsearch.controller",
      "className": "FoodController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "returnType": "HttpEntity",
      "methodName": "updateFoodOrder",
      "className": "FoodController",
      "packageName": "foodsearch.controller",
      "methodId": "foodsearch.controller.FoodController.updateFoodOrder",
      "classId": "foodsearch.controller.FoodController",
      "line": 69,
      "msArgumentList": [
        {
          "returnType": "FoodOrder"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PutMapping",
          "key": "path",
          "value": "\"/orders\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "parentPackageName": "foodsearch.controller",
      "parentClassName": "FoodController",
      "parentMethodName": "updateFoodOrder",
      "parentClassId": "foodsearch.controller.FoodController",
      "lineNumber": 72,
      "calledMethodName": "updateFoodOrder",
      "calledServiceId": "foodService",
      "statementDeclaration": "foodService.updateFoodOrder(updateFoodOrder, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "fieldClass": "FoodService",
      "fieldVariable": "foodService",
      "parentMethod": {
        "parentClassName": "FoodController",
        "parentPackageName": "foodsearch.controller"
      },
      "line": 24
    },
    "msService": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "classId": "foodsearch.service.FoodServiceImpl",
      "packageName": "foodsearch.service",
      "className": "FoodServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "returnType": "Response",
      "methodName": "updateFoodOrder",
      "className": "FoodServiceImpl",
      "packageName": "foodsearch.service",
      "methodId": "foodsearch.service.FoodServiceImpl.updateFoodOrder",
      "classId": "foodsearch.service.FoodServiceImpl",
      "line": 163,
      "msArgumentList": [
        {
          "returnType": "FoodOrder"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "parentPackageName": "foodsearch.service",
      "parentClassName": "FoodServiceImpl",
      "parentMethodName": "updateFoodOrder",
      "parentClassId": "foodsearch.service.FoodServiceImpl",
      "lineNumber": 165,
      "calledMethodName": "findById",
      "calledServiceId": "foodOrderRepository",
      "statementDeclaration": "foodOrderRepository.findById(updateFoodOrder.getId())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "fieldClass": "FoodOrderRepository",
      "fieldVariable": "foodOrderRepository",
      "parentMethod": {
        "parentClassName": "FoodServiceImpl",
        "parentPackageName": "foodsearch.service"
      },
      "line": 32
    },
    "msRepository": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/repository/FoodOrderRepository.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "classId": "foodsearch.repository.FoodOrderRepository",
      "packageName": "foodsearch.repository",
      "className": "FoodOrderRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/repository/FoodOrderRepository.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "returnType": "FoodOrder",
      "methodName": "findById",
      "className": "FoodOrderRepository",
      "packageName": "foodsearch.repository",
      "methodId": "foodsearch.repository.FoodOrderRepository.findById",
      "classId": "foodsearch.repository.FoodOrderRepository",
      "line": 14,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "classId": "foodsearch.controller.FoodController",
      "packageName": "foodsearch.controller",
      "className": "FoodController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "returnType": "HttpEntity",
      "methodName": "deleteFoodOrder",
      "className": "FoodController",
      "packageName": "foodsearch.controller",
      "methodId": "foodsearch.controller.FoodController.deleteFoodOrder",
      "classId": "foodsearch.controller.FoodController",
      "line": 75,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "ResponseStatus"
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "DeleteMapping",
          "key": "path",
          "value": "\"/orders/{orderId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "parentPackageName": "foodsearch.controller",
      "parentClassName": "FoodController",
      "parentMethodName": "deleteFoodOrder",
      "parentClassId": "foodsearch.controller.FoodController",
      "lineNumber": 79,
      "calledMethodName": "deleteFoodOrder",
      "calledServiceId": "foodService",
      "statementDeclaration": "foodService.deleteFoodOrder(orderId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "fieldClass": "FoodService",
      "fieldVariable": "foodService",
      "parentMethod": {
        "parentClassName": "FoodController",
        "parentPackageName": "foodsearch.controller"
      },
      "line": 24
    },
    "msService": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "classId": "foodsearch.service.FoodServiceImpl",
      "packageName": "foodsearch.service",
      "className": "FoodServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "returnType": "Response",
      "methodName": "deleteFoodOrder",
      "className": "FoodServiceImpl",
      "packageName": "foodsearch.service",
      "methodId": "foodsearch.service.FoodServiceImpl.deleteFoodOrder",
      "classId": "foodsearch.service.FoodServiceImpl",
      "line": 138,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "parentPackageName": "foodsearch.service",
      "parentClassName": "FoodServiceImpl",
      "parentMethodName": "deleteFoodOrder",
      "parentClassId": "foodsearch.service.FoodServiceImpl",
      "lineNumber": 140,
      "calledMethodName": "findByOrderId",
      "calledServiceId": "foodOrderRepository",
      "statementDeclaration": "foodOrderRepository.findByOrderId(UUID.fromString(orderId))"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "fieldClass": "FoodOrderRepository",
      "fieldVariable": "foodOrderRepository",
      "parentMethod": {
        "parentClassName": "FoodServiceImpl",
        "parentPackageName": "foodsearch.service"
      },
      "line": 32
    },
    "msRepository": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/repository/FoodOrderRepository.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "classId": "foodsearch.repository.FoodOrderRepository",
      "packageName": "foodsearch.repository",
      "className": "FoodOrderRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/repository/FoodOrderRepository.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "returnType": "FoodOrder",
      "methodName": "findByOrderId",
      "className": "FoodOrderRepository",
      "packageName": "foodsearch.repository",
      "methodId": "foodsearch.repository.FoodOrderRepository.findByOrderId",
      "classId": "foodsearch.repository.FoodOrderRepository",
      "line": 16,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "classId": "foodsearch.controller.FoodController",
      "packageName": "foodsearch.controller",
      "className": "FoodController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "returnType": "HttpEntity",
      "methodName": "findFoodOrderByOrderId",
      "className": "FoodController",
      "packageName": "foodsearch.controller",
      "methodId": "foodsearch.controller.FoodController.findFoodOrderByOrderId",
      "classId": "foodsearch.controller.FoodController",
      "line": 82,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/orders/{orderId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "parentPackageName": "foodsearch.controller",
      "parentClassName": "FoodController",
      "parentMethodName": "findFoodOrderByOrderId",
      "parentClassId": "foodsearch.controller.FoodController",
      "lineNumber": 85,
      "calledMethodName": "findByOrderId",
      "calledServiceId": "foodService",
      "statementDeclaration": "foodService.findByOrderId(orderId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "fieldClass": "FoodService",
      "fieldVariable": "foodService",
      "parentMethod": {
        "parentClassName": "FoodController",
        "parentPackageName": "foodsearch.controller"
      },
      "line": 24
    },
    "msService": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "classId": "foodsearch.service.FoodServiceImpl",
      "packageName": "foodsearch.service",
      "className": "FoodServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "returnType": "Response",
      "methodName": "findByOrderId",
      "className": "FoodServiceImpl",
      "packageName": "foodsearch.service",
      "methodId": "foodsearch.service.FoodServiceImpl.findByOrderId",
      "classId": "foodsearch.service.FoodServiceImpl",
      "line": 183,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "parentPackageName": "foodsearch.service",
      "parentClassName": "FoodServiceImpl",
      "parentMethodName": "findByOrderId",
      "parentClassId": "foodsearch.service.FoodServiceImpl",
      "lineNumber": 185,
      "calledMethodName": "findByOrderId",
      "calledServiceId": "foodOrderRepository",
      "statementDeclaration": "foodOrderRepository.findByOrderId(UUID.fromString(orderId))"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "fieldClass": "FoodOrderRepository",
      "fieldVariable": "foodOrderRepository",
      "parentMethod": {
        "parentClassName": "FoodServiceImpl",
        "parentPackageName": "foodsearch.service"
      },
      "line": 32
    },
    "msRepository": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/repository/FoodOrderRepository.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "classId": "foodsearch.repository.FoodOrderRepository",
      "packageName": "foodsearch.repository",
      "className": "FoodOrderRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/repository/FoodOrderRepository.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "returnType": "FoodOrder",
      "methodName": "findByOrderId",
      "className": "FoodOrderRepository",
      "packageName": "foodsearch.repository",
      "methodId": "foodsearch.repository.FoodOrderRepository.findByOrderId",
      "classId": "foodsearch.repository.FoodOrderRepository",
      "line": 16,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "classId": "foodsearch.controller.FoodController",
      "packageName": "foodsearch.controller",
      "className": "FoodController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "returnType": "HttpEntity",
      "methodName": "getAllFood",
      "className": "FoodController",
      "packageName": "foodsearch.controller",
      "methodId": "foodsearch.controller.FoodController.getAllFood",
      "classId": "foodsearch.controller.FoodController",
      "line": 89,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/foods/{date}/{startStation}/{endStation}/{tripId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "parentPackageName": "foodsearch.controller",
      "parentClassName": "FoodController",
      "parentMethodName": "getAllFood",
      "parentClassId": "foodsearch.controller.FoodController",
      "lineNumber": 94,
      "calledMethodName": "getAllFood",
      "calledServiceId": "foodService",
      "statementDeclaration": "foodService.getAllFood(date, startStation, endStation, tripId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/controller/FoodController.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "fieldClass": "FoodService",
      "fieldVariable": "foodService",
      "parentMethod": {
        "parentClassName": "FoodController",
        "parentPackageName": "foodsearch.controller"
      },
      "line": 24
    },
    "msService": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "classId": "foodsearch.service.FoodServiceImpl",
      "packageName": "foodsearch.service",
      "className": "FoodServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
        "directoryName": "/ts-food-service/src/main/java/foodsearch"
      },
      "returnType": "Response",
      "methodName": "getAllFood",
      "className": "FoodServiceImpl",
      "packageName": "foodsearch.service",
      "methodId": "foodsearch.service.FoodServiceImpl.getAllFood",
      "classId": "foodsearch.service.FoodServiceImpl",
      "line": 196,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "api": "\"http://ts-food-map-service:18855/api/v1/foodmapservice/trainfoods/\" + tripId",
        "httpMethod": "GET",
        "returnType": "List\u003cTrainFood\u003e",
        "msId": {
          "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
          "directoryName": "/ts-food-service/src/main/java/foodsearch"
        },
        "parentPackageName": "foodsearch.service",
        "parentClassName": "FoodServiceImpl",
        "parentMethodName": "getAllFood",
        "parentClassId": "foodsearch.service.FoodServiceImpl",
        "lineNumber": 212,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-food-map-service:18855/api/v1/foodmapservice/trainfoods/\" + tripId, HttpMethod.GET, requestEntityGetTrainFoodListResult, new ParameterizedTypeReference\u003cResponse\u003cList\u003cTrainFood\u003e\u003e\u003e() {\n})"
      },
      {
        "api": "\"http://ts-travel-service:12346/api/v1/travelservice/routes/\" + tripId",
        "httpMethod": "GET",
        "returnType": "Route",
        "msId": {
          "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
          "directoryName": "/ts-food-service/src/main/java/foodsearch"
        },
        "parentPackageName": "foodsearch.service",
        "parentClassName": "FoodServiceImpl",
        "parentMethodName": "getAllFood",
        "parentClassId": "foodsearch.service.FoodServiceImpl",
        "lineNumber": 231,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-travel-service:12346/api/v1/travelservice/routes/\" + tripId, HttpMethod.GET, requestEntityGetRouteResult, new ParameterizedTypeReference\u003cResponse\u003cRoute\u003e\u003e() {\n})"
      },
      {
        "api": "\"http://ts-station-service:12345/api/v1/stationservice/stations/id/\" + startStation",
        "httpMethod": "GET",
        "returnType": "String",
        "msId": {
          "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
          "directoryName": "/ts-food-service/src/main/java/foodsearch"
        },
        "parentPackageName": "foodsearch.service",
        "parentClassName": "FoodServiceImpl",
        "parentMethodName": "getAllFood",
        "parentClassId": "foodsearch.service.FoodServiceImpl",
        "lineNumber": 246,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-station-service:12345/api/v1/stationservice/stations/id/\" + startStation, HttpMethod.GET, requestEntityStartStationId, new ParameterizedTypeReference\u003cResponse\u003cString\u003e\u003e() {\n})"
      },
      {
        "api": "\"http://ts-station-service:12345/api/v1/stationservice/stations/id/\" + endStation",
        "httpMethod": "GET",
        "returnType": "String",
        "msId": {
          "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
          "directoryName": "/ts-food-service/src/main/java/foodsearch"
        },
        "parentPackageName": "foodsearch.service",
        "parentClassName": "FoodServiceImpl",
        "parentMethodName": "getAllFood",
        "parentClassId": "foodsearch.service.FoodServiceImpl",
        "lineNumber": 265,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-station-service:12345/api/v1/stationservice/stations/id/\" + endStation, HttpMethod.GET, requestEntityEndStationId, new ParameterizedTypeReference\u003cResponse\u003cString\u003e\u003e() {\n})"
      },
      {
        "api": "\"http://ts-food-map-service:18855/api/v1/foodmapservice/foodstores\"",
        "httpMethod": "POST",
        "returnType": "List\u003cFoodStore\u003e",
        "msId": {
          "path": "/ts-food-service/src/main/java/foodsearch/service/FoodServiceImpl.java",
          "directoryName": "/ts-food-service/src/main/java/foodsearch"
        },
        "parentPackageName": "foodsearch.service",
        "parentClassName": "FoodServiceImpl",
        "parentMethodName": "getAllFood",
        "parentClassId": "foodsearch.service.FoodServiceImpl",
        "lineNumber": 283,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-food-map-service:18855/api/v1/foodmapservice/foodstores\", HttpMethod.POST, requestEntityFoodStoresListResult, new ParameterizedTypeReference\u003cResponse\u003cList\u003cFoodStore\u003e\u003e\u003e() {\n})"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-rebook-service/src/main/java/rebook/controller/RebookController.java",
        "directoryName": "/ts-rebook-service/src/main/java/rebook"
      },
      "classId": "rebook.controller.RebookController",
      "packageName": "rebook.controller",
      "className": "RebookController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-rebook-service/src/main/java/rebook/controller/RebookController.java",
        "directoryName": "/ts-rebook-service/src/main/java/rebook"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "RebookController",
      "packageName": "rebook.controller",
      "methodId": "rebook.controller.RebookController.home",
      "classId": "rebook.controller.RebookController",
      "line": 26,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-rebook-service/src/main/java/rebook/controller/RebookController.java",
        "directoryName": "/ts-rebook-service/src/main/java/rebook"
      },
      "classId": "rebook.controller.RebookController",
      "packageName": "rebook.controller",
      "className": "RebookController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-rebook-service/src/main/java/rebook/controller/RebookController.java",
        "directoryName": "/ts-rebook-service/src/main/java/rebook"
      },
      "returnType": "HttpEntity",
      "methodName": "payDifference",
      "className": "RebookController",
      "packageName": "rebook.controller",
      "methodId": "rebook.controller.RebookController.payDifference",
      "classId": "rebook.controller.RebookController",
      "line": 31,
      "msArgumentList": [
        {
          "returnType": "RebookInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/rebook/difference\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-rebook-service/src/main/java/rebook/controller/RebookController.java",
        "directoryName": "/ts-rebook-service/src/main/java/rebook"
      },
      "parentPackageName": "rebook.controller",
      "parentClassName": "RebookController",
      "parentMethodName": "payDifference",
      "parentClassId": "rebook.controller.RebookController",
      "lineNumber": 35,
      "calledMethodName": "payDifference",
      "calledServiceId": "service",
      "statementDeclaration": "service.payDifference(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-rebook-service/src/main/java/rebook/controller/RebookController.java",
        "directoryName": "/ts-rebook-service/src/main/java/rebook"
      },
      "fieldClass": "RebookService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "RebookController",
        "parentPackageName": "rebook.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-rebook-service/src/main/java/rebook/service/RebookServiceImpl.java",
        "directoryName": "/ts-rebook-service/src/main/java/rebook"
      },
      "classId": "rebook.service.RebookServiceImpl",
      "packageName": "rebook.service",
      "className": "RebookServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-rebook-service/src/main/java/rebook/service/RebookServiceImpl.java",
        "directoryName": "/ts-rebook-service/src/main/java/rebook"
      },
      "returnType": "Response",
      "methodName": "payDifference",
      "className": "RebookServiceImpl",
      "packageName": "rebook.service",
      "methodId": "rebook.service.RebookServiceImpl.payDifference",
      "classId": "rebook.service.RebookServiceImpl",
      "line": 130,
      "msArgumentList": [
        {
          "returnType": "RebookInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": []
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-rebook-service/src/main/java/rebook/controller/RebookController.java",
        "directoryName": "/ts-rebook-service/src/main/java/rebook"
      },
      "classId": "rebook.controller.RebookController",
      "packageName": "rebook.controller",
      "className": "RebookController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-rebook-service/src/main/java/rebook/controller/RebookController.java",
        "directoryName": "/ts-rebook-service/src/main/java/rebook"
      },
      "returnType": "HttpEntity",
      "methodName": "rebook",
      "className": "RebookController",
      "packageName": "rebook.controller",
      "methodId": "rebook.controller.RebookController.rebook",
      "classId": "rebook.controller.RebookController",
      "line": 38,
      "msArgumentList": [
        {
          "returnType": "RebookInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/rebook\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-rebook-service/src/main/java/rebook/controller/RebookController.java",
        "directoryName": "/ts-rebook-service/src/main/java/rebook"
      },
      "parentPackageName": "rebook.controller",
      "parentClassName": "RebookController",
      "parentMethodName": "rebook",
      "parentClassId": "rebook.controller.RebookController",
      "lineNumber": 41,
      "calledMethodName": "rebook",
      "calledServiceId": "service",
      "statementDeclaration": "service.rebook(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-rebook-service/src/main/java/rebook/controller/RebookController.java",
        "directoryName": "/ts-rebook-service/src/main/java/rebook"
      },
      "fieldClass": "RebookService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "RebookController",
        "parentPackageName": "rebook.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-rebook-service/src/main/java/rebook/service/RebookServiceImpl.java",
        "directoryName": "/ts-rebook-service/src/main/java/rebook"
      },
      "classId": "rebook.service.RebookServiceImpl",
      "packageName": "rebook.service",
      "className": "RebookServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-rebook-service/src/main/java/rebook/service/RebookServiceImpl.java",
        "directoryName": "/ts-rebook-service/src/main/java/rebook"
      },
      "returnType": "Response",
      "methodName": "rebook",
      "className": "RebookServiceImpl",
      "packageName": "rebook.service",
      "methodId": "rebook.service.RebookServiceImpl.rebook",
      "classId": "rebook.service.RebookServiceImpl",
      "line": 32,
      "msArgumentList": [
        {
          "returnType": "RebookInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": []
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "className": "AdminBasicInfoController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "methodId": "adminbasic.controller.AdminBasicInfoController.home",
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "line": 25,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "className": "AdminBasicInfoController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "HttpEntity",
      "methodName": "getAllContacts",
      "className": "AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "methodId": "adminbasic.controller.AdminBasicInfoController.getAllContacts",
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "line": 30,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/adminbasic/contacts\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "parentPackageName": "adminbasic.controller",
      "parentClassName": "AdminBasicInfoController",
      "parentMethodName": "getAllContacts",
      "parentClassId": "adminbasic.controller.AdminBasicInfoController",
      "lineNumber": 34,
      "calledMethodName": "getAllContacts",
      "calledServiceId": "adminBasicInfoService",
      "statementDeclaration": "adminBasicInfoService.getAllContacts(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "fieldClass": "AdminBasicInfoService",
      "fieldVariable": "adminBasicInfoService",
      "parentMethod": {
        "parentClassName": "AdminBasicInfoController",
        "parentPackageName": "adminbasic.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "className": "AdminBasicInfoServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "Response",
      "methodName": "getAllContacts",
      "className": "AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "methodId": "adminbasic.service.AdminBasicInfoServiceImpl.getAllContacts",
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "line": 32,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "api": "\"http://ts-contacts-service:12347/api/v1/contactservice/contacts\"",
        "httpMethod": "GET",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
          "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
        },
        "parentPackageName": "adminbasic.service",
        "parentClassName": "AdminBasicInfoServiceImpl",
        "parentMethodName": "getAllContacts",
        "parentClassId": "adminbasic.service.AdminBasicInfoServiceImpl",
        "lineNumber": 37,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-contacts-service:12347/api/v1/contactservice/contacts\", HttpMethod.GET, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "className": "AdminBasicInfoController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "HttpEntity",
      "methodName": "deleteContacts",
      "className": "AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "methodId": "adminbasic.controller.AdminBasicInfoController.deleteContacts",
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "line": 37,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "DeleteMapping",
          "key": "path",
          "value": "\"/adminbasic/contacts/{contactsId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "parentPackageName": "adminbasic.controller",
      "parentClassName": "AdminBasicInfoController",
      "parentMethodName": "deleteContacts",
      "parentClassId": "adminbasic.controller.AdminBasicInfoController",
      "lineNumber": 41,
      "calledMethodName": "deleteContact",
      "calledServiceId": "adminBasicInfoService",
      "statementDeclaration": "adminBasicInfoService.deleteContact(contactsId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "fieldClass": "AdminBasicInfoService",
      "fieldVariable": "adminBasicInfoService",
      "parentMethod": {
        "parentClassName": "AdminBasicInfoController",
        "parentPackageName": "adminbasic.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "className": "AdminBasicInfoServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "Response",
      "methodName": "deleteContact",
      "className": "AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "methodId": "adminbasic.service.AdminBasicInfoServiceImpl.deleteContact",
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "line": 47,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "api": "\"http://ts-contacts-service:12347/api/v1/contactservice/contacts/\" + contactsId",
        "httpMethod": "DELETE",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
          "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
        },
        "parentPackageName": "adminbasic.service",
        "parentClassName": "AdminBasicInfoServiceImpl",
        "parentMethodName": "deleteContact",
        "parentClassId": "adminbasic.service.AdminBasicInfoServiceImpl",
        "lineNumber": 52,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-contacts-service:12347/api/v1/contactservice/contacts/\" + contactsId, HttpMethod.DELETE, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "className": "AdminBasicInfoController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "HttpEntity",
      "methodName": "modifyContacts",
      "className": "AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "methodId": "adminbasic.controller.AdminBasicInfoController.modifyContacts",
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "line": 44,
      "msArgumentList": [
        {
          "returnType": "Contacts"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PutMapping",
          "key": "path",
          "value": "\"/adminbasic/contacts\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "parentPackageName": "adminbasic.controller",
      "parentClassName": "AdminBasicInfoController",
      "parentMethodName": "modifyContacts",
      "parentClassId": "adminbasic.controller.AdminBasicInfoController",
      "lineNumber": 48,
      "calledMethodName": "modifyContact",
      "calledServiceId": "adminBasicInfoService",
      "statementDeclaration": "adminBasicInfoService.modifyContact(mci, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "fieldClass": "AdminBasicInfoService",
      "fieldVariable": "adminBasicInfoService",
      "parentMethod": {
        "parentClassName": "AdminBasicInfoController",
        "parentPackageName": "adminbasic.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "className": "AdminBasicInfoServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "Response",
      "methodName": "modifyContact",
      "className": "AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "methodId": "adminbasic.service.AdminBasicInfoServiceImpl.modifyContact",
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "line": 62,
      "msArgumentList": [
        {
          "returnType": "Contacts"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "api": "\"http://ts-contacts-service:12347/api/v1/contactservice/contacts\"",
        "httpMethod": "PUT",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
          "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
        },
        "parentPackageName": "adminbasic.service",
        "parentClassName": "AdminBasicInfoServiceImpl",
        "parentMethodName": "modifyContact",
        "parentClassId": "adminbasic.service.AdminBasicInfoServiceImpl",
        "lineNumber": 67,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-contacts-service:12347/api/v1/contactservice/contacts\", HttpMethod.PUT, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "className": "AdminBasicInfoController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "HttpEntity",
      "methodName": "addContacts",
      "className": "AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "methodId": "adminbasic.controller.AdminBasicInfoController.addContacts",
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "line": 51,
      "msArgumentList": [
        {
          "returnType": "Contacts"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "path",
          "value": "\"/adminbasic/contacts\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "parentPackageName": "adminbasic.controller",
      "parentClassName": "AdminBasicInfoController",
      "parentMethodName": "addContacts",
      "parentClassId": "adminbasic.controller.AdminBasicInfoController",
      "lineNumber": 55,
      "calledMethodName": "addContact",
      "calledServiceId": "adminBasicInfoService",
      "statementDeclaration": "adminBasicInfoService.addContact(c, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "fieldClass": "AdminBasicInfoService",
      "fieldVariable": "adminBasicInfoService",
      "parentMethod": {
        "parentClassName": "AdminBasicInfoController",
        "parentPackageName": "adminbasic.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "className": "AdminBasicInfoServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "Response",
      "methodName": "addContact",
      "className": "AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "methodId": "adminbasic.service.AdminBasicInfoServiceImpl.addContact",
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "line": 78,
      "msArgumentList": [
        {
          "returnType": "Contacts"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "api": "\"http://ts-contacts-service:12347/api/v1/contactservice/contacts/admin\"",
        "httpMethod": "POST",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
          "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
        },
        "parentPackageName": "adminbasic.service",
        "parentClassName": "AdminBasicInfoServiceImpl",
        "parentMethodName": "addContact",
        "parentClassId": "adminbasic.service.AdminBasicInfoServiceImpl",
        "lineNumber": 83,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-contacts-service:12347/api/v1/contactservice/contacts/admin\", HttpMethod.POST, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "className": "AdminBasicInfoController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "HttpEntity",
      "methodName": "getAllStations",
      "className": "AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "methodId": "adminbasic.controller.AdminBasicInfoController.getAllStations",
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "line": 58,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/adminbasic/stations\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "parentPackageName": "adminbasic.controller",
      "parentClassName": "AdminBasicInfoController",
      "parentMethodName": "getAllStations",
      "parentClassId": "adminbasic.controller.AdminBasicInfoController",
      "lineNumber": 62,
      "calledMethodName": "getAllStations",
      "calledServiceId": "adminBasicInfoService",
      "statementDeclaration": "adminBasicInfoService.getAllStations(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "fieldClass": "AdminBasicInfoService",
      "fieldVariable": "adminBasicInfoService",
      "parentMethod": {
        "parentClassName": "AdminBasicInfoController",
        "parentPackageName": "adminbasic.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "className": "AdminBasicInfoServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "Response",
      "methodName": "getAllStations",
      "className": "AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "methodId": "adminbasic.service.AdminBasicInfoServiceImpl.getAllStations",
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "line": 93,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "httpMethod": "GET",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
          "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
        },
        "parentPackageName": "adminbasic.service",
        "parentClassName": "AdminBasicInfoServiceImpl",
        "parentMethodName": "getAllStations",
        "parentClassId": "adminbasic.service.AdminBasicInfoServiceImpl",
        "lineNumber": 97,
        "statementDeclaration": "restTemplate.exchange(stations, HttpMethod.GET, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "className": "AdminBasicInfoController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "HttpEntity",
      "methodName": "deleteStation",
      "className": "AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "methodId": "adminbasic.controller.AdminBasicInfoController.deleteStation",
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "line": 65,
      "msArgumentList": [
        {
          "returnType": "Station"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "DeleteMapping",
          "key": "path",
          "value": "\"/adminbasic/stations\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "parentPackageName": "adminbasic.controller",
      "parentClassName": "AdminBasicInfoController",
      "parentMethodName": "deleteStation",
      "parentClassId": "adminbasic.controller.AdminBasicInfoController",
      "lineNumber": 69,
      "calledMethodName": "deleteStation",
      "calledServiceId": "adminBasicInfoService",
      "statementDeclaration": "adminBasicInfoService.deleteStation(s, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "fieldClass": "AdminBasicInfoService",
      "fieldVariable": "adminBasicInfoService",
      "parentMethod": {
        "parentClassName": "AdminBasicInfoController",
        "parentPackageName": "adminbasic.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "className": "AdminBasicInfoServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "Response",
      "methodName": "deleteStation",
      "className": "AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "methodId": "adminbasic.service.AdminBasicInfoServiceImpl.deleteStation",
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "line": 122,
      "msArgumentList": [
        {
          "returnType": "Station"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "httpMethod": "DELETE",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
          "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
        },
        "parentPackageName": "adminbasic.service",
        "parentClassName": "AdminBasicInfoServiceImpl",
        "parentMethodName": "deleteStation",
        "parentClassId": "adminbasic.service.AdminBasicInfoServiceImpl",
        "lineNumber": 127,
        "statementDeclaration": "restTemplate.exchange(stations, HttpMethod.DELETE, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "className": "AdminBasicInfoController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "HttpEntity",
      "methodName": "modifyStation",
      "className": "AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "methodId": "adminbasic.controller.AdminBasicInfoController.modifyStation",
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "line": 72,
      "msArgumentList": [
        {
          "returnType": "Station"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PutMapping",
          "key": "path",
          "value": "\"/adminbasic/stations\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "parentPackageName": "adminbasic.controller",
      "parentClassName": "AdminBasicInfoController",
      "parentMethodName": "modifyStation",
      "parentClassId": "adminbasic.controller.AdminBasicInfoController",
      "lineNumber": 76,
      "calledMethodName": "modifyStation",
      "calledServiceId": "adminBasicInfoService",
      "statementDeclaration": "adminBasicInfoService.modifyStation(s, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "fieldClass": "AdminBasicInfoService",
      "fieldVariable": "adminBasicInfoService",
      "parentMethod": {
        "parentClassName": "AdminBasicInfoController",
        "parentPackageName": "adminbasic.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "className": "AdminBasicInfoServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "Response",
      "methodName": "modifyStation",
      "className": "AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "methodId": "adminbasic.service.AdminBasicInfoServiceImpl.modifyStation",
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "line": 137,
      "msArgumentList": [
        {
          "returnType": "Station"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "httpMethod": "PUT",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
          "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
        },
        "parentPackageName": "adminbasic.service",
        "parentClassName": "AdminBasicInfoServiceImpl",
        "parentMethodName": "modifyStation",
        "parentClassId": "adminbasic.service.AdminBasicInfoServiceImpl",
        "lineNumber": 142,
        "statementDeclaration": "restTemplate.exchange(stations, HttpMethod.PUT, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "className": "AdminBasicInfoController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "HttpEntity",
      "methodName": "addStation",
      "className": "AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "methodId": "adminbasic.controller.AdminBasicInfoController.addStation",
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "line": 79,
      "msArgumentList": [
        {
          "returnType": "Station"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "path",
          "value": "\"/adminbasic/stations\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "parentPackageName": "adminbasic.controller",
      "parentClassName": "AdminBasicInfoController",
      "parentMethodName": "addStation",
      "parentClassId": "adminbasic.controller.AdminBasicInfoController",
      "lineNumber": 83,
      "calledMethodName": "addStation",
      "calledServiceId": "adminBasicInfoService",
      "statementDeclaration": "adminBasicInfoService.addStation(s, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "fieldClass": "AdminBasicInfoService",
      "fieldVariable": "adminBasicInfoService",
      "parentMethod": {
        "parentClassName": "AdminBasicInfoController",
        "parentPackageName": "adminbasic.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "className": "AdminBasicInfoServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "Response",
      "methodName": "addStation",
      "className": "AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "methodId": "adminbasic.service.AdminBasicInfoServiceImpl.addStation",
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "line": 108,
      "msArgumentList": [
        {
          "returnType": "Station"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "httpMethod": "POST",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
          "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
        },
        "parentPackageName": "adminbasic.service",
        "parentClassName": "AdminBasicInfoServiceImpl",
        "parentMethodName": "addStation",
        "parentClassId": "adminbasic.service.AdminBasicInfoServiceImpl",
        "lineNumber": 113,
        "statementDeclaration": "restTemplate.exchange(stations, HttpMethod.POST, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "className": "AdminBasicInfoController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "HttpEntity",
      "methodName": "getAllTrains",
      "className": "AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "methodId": "adminbasic.controller.AdminBasicInfoController.getAllTrains",
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "line": 86,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/adminbasic/trains\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "parentPackageName": "adminbasic.controller",
      "parentClassName": "AdminBasicInfoController",
      "parentMethodName": "getAllTrains",
      "parentClassId": "adminbasic.controller.AdminBasicInfoController",
      "lineNumber": 90,
      "calledMethodName": "getAllTrains",
      "calledServiceId": "adminBasicInfoService",
      "statementDeclaration": "adminBasicInfoService.getAllTrains(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "fieldClass": "AdminBasicInfoService",
      "fieldVariable": "adminBasicInfoService",
      "parentMethod": {
        "parentClassName": "AdminBasicInfoController",
        "parentPackageName": "adminbasic.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "className": "AdminBasicInfoServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "Response",
      "methodName": "getAllTrains",
      "className": "AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "methodId": "adminbasic.service.AdminBasicInfoServiceImpl.getAllTrains",
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "line": 153,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "httpMethod": "GET",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
          "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
        },
        "parentPackageName": "adminbasic.service",
        "parentClassName": "AdminBasicInfoServiceImpl",
        "parentMethodName": "getAllTrains",
        "parentClassId": "adminbasic.service.AdminBasicInfoServiceImpl",
        "lineNumber": 157,
        "statementDeclaration": "restTemplate.exchange(trains, HttpMethod.GET, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "className": "AdminBasicInfoController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "HttpEntity",
      "methodName": "deleteTrain",
      "className": "AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "methodId": "adminbasic.controller.AdminBasicInfoController.deleteTrain",
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "line": 93,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "DeleteMapping",
          "key": "path",
          "value": "\"/adminbasic/trains/{id}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "parentPackageName": "adminbasic.controller",
      "parentClassName": "AdminBasicInfoController",
      "parentMethodName": "deleteTrain",
      "parentClassId": "adminbasic.controller.AdminBasicInfoController",
      "lineNumber": 97,
      "calledMethodName": "deleteTrain",
      "calledServiceId": "adminBasicInfoService",
      "statementDeclaration": "adminBasicInfoService.deleteTrain(id, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "fieldClass": "AdminBasicInfoService",
      "fieldVariable": "adminBasicInfoService",
      "parentMethod": {
        "parentClassName": "AdminBasicInfoController",
        "parentPackageName": "adminbasic.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "className": "AdminBasicInfoServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "Response",
      "methodName": "deleteTrain",
      "className": "AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "methodId": "adminbasic.service.AdminBasicInfoServiceImpl.deleteTrain",
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "line": 182,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "api": "\"http://ts-train-service:14567/api/v1/trainservice/trains/\" + id",
        "httpMethod": "DELETE",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
          "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
        },
        "parentPackageName": "adminbasic.service",
        "parentClassName": "AdminBasicInfoServiceImpl",
        "parentMethodName": "deleteTrain",
        "parentClassId": "adminbasic.service.AdminBasicInfoServiceImpl",
        "lineNumber": 187,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-train-service:14567/api/v1/trainservice/trains/\" + id, HttpMethod.DELETE, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "className": "AdminBasicInfoController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "HttpEntity",
      "methodName": "modifyTrain",
      "className": "AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "methodId": "adminbasic.controller.AdminBasicInfoController.modifyTrain",
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "line": 100,
      "msArgumentList": [
        {
          "returnType": "TrainType"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PutMapping",
          "key": "path",
          "value": "\"/adminbasic/trains\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "parentPackageName": "adminbasic.controller",
      "parentClassName": "AdminBasicInfoController",
      "parentMethodName": "modifyTrain",
      "parentClassId": "adminbasic.controller.AdminBasicInfoController",
      "lineNumber": 104,
      "calledMethodName": "modifyTrain",
      "calledServiceId": "adminBasicInfoService",
      "statementDeclaration": "adminBasicInfoService.modifyTrain(t, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "fieldClass": "AdminBasicInfoService",
      "fieldVariable": "adminBasicInfoService",
      "parentMethod": {
        "parentClassName": "AdminBasicInfoController",
        "parentPackageName": "adminbasic.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "className": "AdminBasicInfoServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "Response",
      "methodName": "modifyTrain",
      "className": "AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "methodId": "adminbasic.service.AdminBasicInfoServiceImpl.modifyTrain",
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "line": 196,
      "msArgumentList": [
        {
          "returnType": "TrainType"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "httpMethod": "PUT",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
          "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
        },
        "parentPackageName": "adminbasic.service",
        "parentClassName": "AdminBasicInfoServiceImpl",
        "parentMethodName": "modifyTrain",
        "parentClassId": "adminbasic.service.AdminBasicInfoServiceImpl",
        "lineNumber": 201,
        "statementDeclaration": "restTemplate.exchange(trains, HttpMethod.PUT, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "className": "AdminBasicInfoController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "HttpEntity",
      "methodName": "addTrain",
      "className": "AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "methodId": "adminbasic.controller.AdminBasicInfoController.addTrain",
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "line": 107,
      "msArgumentList": [
        {
          "returnType": "TrainType"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "path",
          "value": "\"/adminbasic/trains\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "parentPackageName": "adminbasic.controller",
      "parentClassName": "AdminBasicInfoController",
      "parentMethodName": "addTrain",
      "parentClassId": "adminbasic.controller.AdminBasicInfoController",
      "lineNumber": 111,
      "calledMethodName": "addTrain",
      "calledServiceId": "adminBasicInfoService",
      "statementDeclaration": "adminBasicInfoService.addTrain(t, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "fieldClass": "AdminBasicInfoService",
      "fieldVariable": "adminBasicInfoService",
      "parentMethod": {
        "parentClassName": "AdminBasicInfoController",
        "parentPackageName": "adminbasic.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "className": "AdminBasicInfoServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "Response",
      "methodName": "addTrain",
      "className": "AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "methodId": "adminbasic.service.AdminBasicInfoServiceImpl.addTrain",
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "line": 167,
      "msArgumentList": [
        {
          "returnType": "TrainType"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "httpMethod": "POST",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
          "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
        },
        "parentPackageName": "adminbasic.service",
        "parentClassName": "AdminBasicInfoServiceImpl",
        "parentMethodName": "addTrain",
        "parentClassId": "adminbasic.service.AdminBasicInfoServiceImpl",
        "lineNumber": 172,
        "statementDeclaration": "restTemplate.exchange(trains, HttpMethod.POST, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "className": "AdminBasicInfoController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "HttpEntity",
      "methodName": "getAllConfigs",
      "className": "AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "methodId": "adminbasic.controller.AdminBasicInfoController.getAllConfigs",
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "line": 114,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/adminbasic/configs\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "parentPackageName": "adminbasic.controller",
      "parentClassName": "AdminBasicInfoController",
      "parentMethodName": "getAllConfigs",
      "parentClassId": "adminbasic.controller.AdminBasicInfoController",
      "lineNumber": 118,
      "calledMethodName": "getAllConfigs",
      "calledServiceId": "adminBasicInfoService",
      "statementDeclaration": "adminBasicInfoService.getAllConfigs(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "fieldClass": "AdminBasicInfoService",
      "fieldVariable": "adminBasicInfoService",
      "parentMethod": {
        "parentClassName": "AdminBasicInfoController",
        "parentPackageName": "adminbasic.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "className": "AdminBasicInfoServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "Response",
      "methodName": "getAllConfigs",
      "className": "AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "methodId": "adminbasic.service.AdminBasicInfoServiceImpl.getAllConfigs",
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "line": 210,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "httpMethod": "GET",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
          "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
        },
        "parentPackageName": "adminbasic.service",
        "parentClassName": "AdminBasicInfoServiceImpl",
        "parentMethodName": "getAllConfigs",
        "parentClassId": "adminbasic.service.AdminBasicInfoServiceImpl",
        "lineNumber": 215,
        "statementDeclaration": "restTemplate.exchange(configs, HttpMethod.GET, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "className": "AdminBasicInfoController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "HttpEntity",
      "methodName": "deleteConfig",
      "className": "AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "methodId": "adminbasic.controller.AdminBasicInfoController.deleteConfig",
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "line": 121,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "DeleteMapping",
          "key": "path",
          "value": "\"/adminbasic/configs/{name}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "parentPackageName": "adminbasic.controller",
      "parentClassName": "AdminBasicInfoController",
      "parentMethodName": "deleteConfig",
      "parentClassId": "adminbasic.controller.AdminBasicInfoController",
      "lineNumber": 125,
      "calledMethodName": "deleteConfig",
      "calledServiceId": "adminBasicInfoService",
      "statementDeclaration": "adminBasicInfoService.deleteConfig(name, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "fieldClass": "AdminBasicInfoService",
      "fieldVariable": "adminBasicInfoService",
      "parentMethod": {
        "parentClassName": "AdminBasicInfoController",
        "parentPackageName": "adminbasic.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "className": "AdminBasicInfoServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "Response",
      "methodName": "deleteConfig",
      "className": "AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "methodId": "adminbasic.service.AdminBasicInfoServiceImpl.deleteConfig",
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "line": 237,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "api": "\"http://ts-config-service:15679/api/v1/configservice/configs/\" + name",
        "httpMethod": "DELETE",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
          "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
        },
        "parentPackageName": "adminbasic.service",
        "parentClassName": "AdminBasicInfoServiceImpl",
        "parentMethodName": "deleteConfig",
        "parentClassId": "adminbasic.service.AdminBasicInfoServiceImpl",
        "lineNumber": 241,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-config-service:15679/api/v1/configservice/configs/\" + name, HttpMethod.DELETE, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "className": "AdminBasicInfoController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "HttpEntity",
      "methodName": "modifyConfig",
      "className": "AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "methodId": "adminbasic.controller.AdminBasicInfoController.modifyConfig",
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "line": 128,
      "msArgumentList": [
        {
          "returnType": "Config"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PutMapping",
          "key": "path",
          "value": "\"/adminbasic/configs\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "parentPackageName": "adminbasic.controller",
      "parentClassName": "AdminBasicInfoController",
      "parentMethodName": "modifyConfig",
      "parentClassId": "adminbasic.controller.AdminBasicInfoController",
      "lineNumber": 132,
      "calledMethodName": "modifyConfig",
      "calledServiceId": "adminBasicInfoService",
      "statementDeclaration": "adminBasicInfoService.modifyConfig(c, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "fieldClass": "AdminBasicInfoService",
      "fieldVariable": "adminBasicInfoService",
      "parentMethod": {
        "parentClassName": "AdminBasicInfoController",
        "parentPackageName": "adminbasic.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "className": "AdminBasicInfoServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "Response",
      "methodName": "modifyConfig",
      "className": "AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "methodId": "adminbasic.service.AdminBasicInfoServiceImpl.modifyConfig",
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "line": 249,
      "msArgumentList": [
        {
          "returnType": "Config"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "httpMethod": "PUT",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
          "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
        },
        "parentPackageName": "adminbasic.service",
        "parentClassName": "AdminBasicInfoServiceImpl",
        "parentMethodName": "modifyConfig",
        "parentClassId": "adminbasic.service.AdminBasicInfoServiceImpl",
        "lineNumber": 254,
        "statementDeclaration": "restTemplate.exchange(configs, HttpMethod.PUT, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "className": "AdminBasicInfoController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "HttpEntity",
      "methodName": "addConfig",
      "className": "AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "methodId": "adminbasic.controller.AdminBasicInfoController.addConfig",
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "line": 135,
      "msArgumentList": [
        {
          "returnType": "Config"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "path",
          "value": "\"/adminbasic/configs\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "parentPackageName": "adminbasic.controller",
      "parentClassName": "AdminBasicInfoController",
      "parentMethodName": "addConfig",
      "parentClassId": "adminbasic.controller.AdminBasicInfoController",
      "lineNumber": 139,
      "calledMethodName": "addConfig",
      "calledServiceId": "adminBasicInfoService",
      "statementDeclaration": "adminBasicInfoService.addConfig(c, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "fieldClass": "AdminBasicInfoService",
      "fieldVariable": "adminBasicInfoService",
      "parentMethod": {
        "parentClassName": "AdminBasicInfoController",
        "parentPackageName": "adminbasic.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "className": "AdminBasicInfoServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "Response",
      "methodName": "addConfig",
      "className": "AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "methodId": "adminbasic.service.AdminBasicInfoServiceImpl.addConfig",
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "line": 224,
      "msArgumentList": [
        {
          "returnType": "Config"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "httpMethod": "POST",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
          "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
        },
        "parentPackageName": "adminbasic.service",
        "parentClassName": "AdminBasicInfoServiceImpl",
        "parentMethodName": "addConfig",
        "parentClassId": "adminbasic.service.AdminBasicInfoServiceImpl",
        "lineNumber": 229,
        "statementDeclaration": "restTemplate.exchange(configs, HttpMethod.POST, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "className": "AdminBasicInfoController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "HttpEntity",
      "methodName": "getAllPrices",
      "className": "AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "methodId": "adminbasic.controller.AdminBasicInfoController.getAllPrices",
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "line": 142,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/adminbasic/prices\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "parentPackageName": "adminbasic.controller",
      "parentClassName": "AdminBasicInfoController",
      "parentMethodName": "getAllPrices",
      "parentClassId": "adminbasic.controller.AdminBasicInfoController",
      "lineNumber": 146,
      "calledMethodName": "getAllPrices",
      "calledServiceId": "adminBasicInfoService",
      "statementDeclaration": "adminBasicInfoService.getAllPrices(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "fieldClass": "AdminBasicInfoService",
      "fieldVariable": "adminBasicInfoService",
      "parentMethod": {
        "parentClassName": "AdminBasicInfoController",
        "parentPackageName": "adminbasic.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "className": "AdminBasicInfoServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "Response",
      "methodName": "getAllPrices",
      "className": "AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "methodId": "adminbasic.service.AdminBasicInfoServiceImpl.getAllPrices",
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "line": 262,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "httpMethod": "GET",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
          "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
        },
        "parentPackageName": "adminbasic.service",
        "parentClassName": "AdminBasicInfoServiceImpl",
        "parentMethodName": "getAllPrices",
        "parentClassId": "adminbasic.service.AdminBasicInfoServiceImpl",
        "lineNumber": 267,
        "statementDeclaration": "restTemplate.exchange(prices, HttpMethod.GET, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "className": "AdminBasicInfoController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "HttpEntity",
      "methodName": "deletePrice",
      "className": "AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "methodId": "adminbasic.controller.AdminBasicInfoController.deletePrice",
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "line": 149,
      "msArgumentList": [
        {
          "returnType": "PriceInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "DeleteMapping",
          "key": "path",
          "value": "\"/adminbasic/prices\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "parentPackageName": "adminbasic.controller",
      "parentClassName": "AdminBasicInfoController",
      "parentMethodName": "deletePrice",
      "parentClassId": "adminbasic.controller.AdminBasicInfoController",
      "lineNumber": 153,
      "calledMethodName": "deletePrice",
      "calledServiceId": "adminBasicInfoService",
      "statementDeclaration": "adminBasicInfoService.deletePrice(pi, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "fieldClass": "AdminBasicInfoService",
      "fieldVariable": "adminBasicInfoService",
      "parentMethod": {
        "parentClassName": "AdminBasicInfoController",
        "parentPackageName": "adminbasic.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "className": "AdminBasicInfoServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "Response",
      "methodName": "deletePrice",
      "className": "AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "methodId": "adminbasic.service.AdminBasicInfoServiceImpl.deletePrice",
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "line": 290,
      "msArgumentList": [
        {
          "returnType": "PriceInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "httpMethod": "DELETE",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
          "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
        },
        "parentPackageName": "adminbasic.service",
        "parentClassName": "AdminBasicInfoServiceImpl",
        "parentMethodName": "deletePrice",
        "parentClassId": "adminbasic.service.AdminBasicInfoServiceImpl",
        "lineNumber": 295,
        "statementDeclaration": "restTemplate.exchange(prices, HttpMethod.DELETE, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "className": "AdminBasicInfoController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "HttpEntity",
      "methodName": "modifyPrice",
      "className": "AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "methodId": "adminbasic.controller.AdminBasicInfoController.modifyPrice",
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "line": 156,
      "msArgumentList": [
        {
          "returnType": "PriceInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PutMapping",
          "key": "path",
          "value": "\"/adminbasic/prices\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "parentPackageName": "adminbasic.controller",
      "parentClassName": "AdminBasicInfoController",
      "parentMethodName": "modifyPrice",
      "parentClassId": "adminbasic.controller.AdminBasicInfoController",
      "lineNumber": 160,
      "calledMethodName": "modifyPrice",
      "calledServiceId": "adminBasicInfoService",
      "statementDeclaration": "adminBasicInfoService.modifyPrice(pi, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "fieldClass": "AdminBasicInfoService",
      "fieldVariable": "adminBasicInfoService",
      "parentMethod": {
        "parentClassName": "AdminBasicInfoController",
        "parentPackageName": "adminbasic.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "className": "AdminBasicInfoServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "Response",
      "methodName": "modifyPrice",
      "className": "AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "methodId": "adminbasic.service.AdminBasicInfoServiceImpl.modifyPrice",
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "line": 305,
      "msArgumentList": [
        {
          "returnType": "PriceInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "httpMethod": "PUT",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
          "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
        },
        "parentPackageName": "adminbasic.service",
        "parentClassName": "AdminBasicInfoServiceImpl",
        "parentMethodName": "modifyPrice",
        "parentClassId": "adminbasic.service.AdminBasicInfoServiceImpl",
        "lineNumber": 308,
        "statementDeclaration": "restTemplate.exchange(prices, HttpMethod.PUT, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "className": "AdminBasicInfoController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "HttpEntity",
      "methodName": "addPrice",
      "className": "AdminBasicInfoController",
      "packageName": "adminbasic.controller",
      "methodId": "adminbasic.controller.AdminBasicInfoController.addPrice",
      "classId": "adminbasic.controller.AdminBasicInfoController",
      "line": 163,
      "msArgumentList": [
        {
          "returnType": "PriceInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "path",
          "value": "\"/adminbasic/prices\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "parentPackageName": "adminbasic.controller",
      "parentClassName": "AdminBasicInfoController",
      "parentMethodName": "addPrice",
      "parentClassId": "adminbasic.controller.AdminBasicInfoController",
      "lineNumber": 167,
      "calledMethodName": "addPrice",
      "calledServiceId": "adminBasicInfoService",
      "statementDeclaration": "adminBasicInfoService.addPrice(pi, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/controller/AdminBasicInfoController.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "fieldClass": "AdminBasicInfoService",
      "fieldVariable": "adminBasicInfoService",
      "parentMethod": {
        "parentClassName": "AdminBasicInfoController",
        "parentPackageName": "adminbasic.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "className": "AdminBasicInfoServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
        "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
      },
      "returnType": "Response",
      "methodName": "addPrice",
      "className": "AdminBasicInfoServiceImpl",
      "packageName": "adminbasic.service",
      "methodId": "adminbasic.service.AdminBasicInfoServiceImpl.addPrice",
      "classId": "adminbasic.service.AdminBasicInfoServiceImpl",
      "line": 277,
      "msArgumentList": [
        {
          "returnType": "PriceInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "httpMethod": "POST",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-basic-info-service/src/main/java/adminbasic/service/AdminBasicInfoServiceImpl.java",
          "directoryName": "/ts-admin-basic-info-service/src/main/java/adminbasic"
        },
        "parentPackageName": "adminbasic.service",
        "parentClassName": "AdminBasicInfoServiceImpl",
        "parentMethodName": "addPrice",
        "parentClassId": "adminbasic.service.AdminBasicInfoServiceImpl",
        "lineNumber": 281,
        "statementDeclaration": "restTemplate.exchange(prices, HttpMethod.POST, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/controller/ConsignPriceController.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "classId": "consignprice.controller.ConsignPriceController",
      "packageName": "consignprice.controller",
      "className": "ConsignPriceController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/controller/ConsignPriceController.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "ConsignPriceController",
      "packageName": "consignprice.controller",
      "methodId": "consignprice.controller.ConsignPriceController.home",
      "classId": "consignprice.controller.ConsignPriceController",
      "line": 26,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/controller/ConsignPriceController.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "classId": "consignprice.controller.ConsignPriceController",
      "packageName": "consignprice.controller",
      "className": "ConsignPriceController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/controller/ConsignPriceController.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "returnType": "HttpEntity",
      "methodName": "getPriceByWeightAndRegion",
      "className": "ConsignPriceController",
      "packageName": "consignprice.controller",
      "methodId": "consignprice.controller.ConsignPriceController.getPriceByWeightAndRegion",
      "classId": "consignprice.controller.ConsignPriceController",
      "line": 31,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/consignprice/{weight}/{isWithinRegion}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/controller/ConsignPriceController.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "parentPackageName": "consignprice.controller",
      "parentClassName": "ConsignPriceController",
      "parentMethodName": "getPriceByWeightAndRegion",
      "parentClassId": "consignprice.controller.ConsignPriceController",
      "lineNumber": 35,
      "calledMethodName": "getPriceByWeightAndRegion",
      "calledServiceId": "service",
      "statementDeclaration": "service.getPriceByWeightAndRegion(Double.parseDouble(weight), Boolean.parseBoolean(isWithinRegion), headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/controller/ConsignPriceController.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "fieldClass": "ConsignPriceService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "ConsignPriceController",
        "parentPackageName": "consignprice.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/service/ConsignPriceServiceImpl.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "classId": "consignprice.service.ConsignPriceServiceImpl",
      "packageName": "consignprice.service",
      "className": "ConsignPriceServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/service/ConsignPriceServiceImpl.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "returnType": "Response",
      "methodName": "getPriceByWeightAndRegion",
      "className": "ConsignPriceServiceImpl",
      "packageName": "consignprice.service",
      "methodId": "consignprice.service.ConsignPriceServiceImpl.getPriceByWeightAndRegion",
      "classId": "consignprice.service.ConsignPriceServiceImpl",
      "line": 25,
      "msArgumentList": [
        {
          "returnType": "double"
        },
        {
          "returnType": "boolean"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/service/ConsignPriceServiceImpl.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "parentPackageName": "consignprice.service",
      "parentClassName": "ConsignPriceServiceImpl",
      "parentMethodName": "getPriceByWeightAndRegion",
      "parentClassId": "consignprice.service.ConsignPriceServiceImpl",
      "lineNumber": 27,
      "calledMethodName": "findByIndex",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findByIndex(0)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/service/ConsignPriceServiceImpl.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "fieldClass": "ConsignPriceConfigRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "ConsignPriceServiceImpl",
        "parentPackageName": "consignprice.service"
      },
      "line": 18
    },
    "msRepository": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/repository/ConsignPriceConfigRepository.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "classId": "consignprice.repository.ConsignPriceConfigRepository",
      "packageName": "consignprice.repository",
      "className": "ConsignPriceConfigRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/repository/ConsignPriceConfigRepository.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "returnType": "ConsignPrice",
      "methodName": "findByIndex",
      "className": "ConsignPriceConfigRepository",
      "packageName": "consignprice.repository",
      "methodId": "consignprice.repository.ConsignPriceConfigRepository.findByIndex",
      "classId": "consignprice.repository.ConsignPriceConfigRepository",
      "line": 20,
      "msArgumentList": [
        {
          "returnType": "int"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/controller/ConsignPriceController.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "classId": "consignprice.controller.ConsignPriceController",
      "packageName": "consignprice.controller",
      "className": "ConsignPriceController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/controller/ConsignPriceController.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "returnType": "HttpEntity",
      "methodName": "getPriceInfo",
      "className": "ConsignPriceController",
      "packageName": "consignprice.controller",
      "methodId": "consignprice.controller.ConsignPriceController.getPriceInfo",
      "classId": "consignprice.controller.ConsignPriceController",
      "line": 39,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/consignprice/price\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/controller/ConsignPriceController.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "parentPackageName": "consignprice.controller",
      "parentClassName": "ConsignPriceController",
      "parentMethodName": "getPriceInfo",
      "parentClassId": "consignprice.controller.ConsignPriceController",
      "lineNumber": 42,
      "calledMethodName": "queryPriceInformation",
      "calledServiceId": "service",
      "statementDeclaration": "service.queryPriceInformation(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/controller/ConsignPriceController.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "fieldClass": "ConsignPriceService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "ConsignPriceController",
        "parentPackageName": "consignprice.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/service/ConsignPriceServiceImpl.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "classId": "consignprice.service.ConsignPriceServiceImpl",
      "packageName": "consignprice.service",
      "className": "ConsignPriceServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/service/ConsignPriceServiceImpl.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "returnType": "Response",
      "methodName": "queryPriceInformation",
      "className": "ConsignPriceServiceImpl",
      "packageName": "consignprice.service",
      "methodId": "consignprice.service.ConsignPriceServiceImpl.queryPriceInformation",
      "classId": "consignprice.service.ConsignPriceServiceImpl",
      "line": 43,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/service/ConsignPriceServiceImpl.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "parentPackageName": "consignprice.service",
      "parentClassName": "ConsignPriceServiceImpl",
      "parentMethodName": "queryPriceInformation",
      "parentClassId": "consignprice.service.ConsignPriceServiceImpl",
      "lineNumber": 46,
      "calledMethodName": "findByIndex",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findByIndex(0)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/service/ConsignPriceServiceImpl.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "fieldClass": "ConsignPriceConfigRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "ConsignPriceServiceImpl",
        "parentPackageName": "consignprice.service"
      },
      "line": 18
    },
    "msRepository": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/repository/ConsignPriceConfigRepository.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "classId": "consignprice.repository.ConsignPriceConfigRepository",
      "packageName": "consignprice.repository",
      "className": "ConsignPriceConfigRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/repository/ConsignPriceConfigRepository.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "returnType": "ConsignPrice",
      "methodName": "findByIndex",
      "className": "ConsignPriceConfigRepository",
      "packageName": "consignprice.repository",
      "methodId": "consignprice.repository.ConsignPriceConfigRepository.findByIndex",
      "classId": "consignprice.repository.ConsignPriceConfigRepository",
      "line": 20,
      "msArgumentList": [
        {
          "returnType": "int"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/controller/ConsignPriceController.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "classId": "consignprice.controller.ConsignPriceController",
      "packageName": "consignprice.controller",
      "className": "ConsignPriceController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/controller/ConsignPriceController.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "returnType": "HttpEntity",
      "methodName": "getPriceConfig",
      "className": "ConsignPriceController",
      "packageName": "consignprice.controller",
      "methodId": "consignprice.controller.ConsignPriceController.getPriceConfig",
      "classId": "consignprice.controller.ConsignPriceController",
      "line": 45,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/consignprice/config\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/controller/ConsignPriceController.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "parentPackageName": "consignprice.controller",
      "parentClassName": "ConsignPriceController",
      "parentMethodName": "getPriceConfig",
      "parentClassId": "consignprice.controller.ConsignPriceController",
      "lineNumber": 48,
      "calledMethodName": "getPriceConfig",
      "calledServiceId": "service",
      "statementDeclaration": "service.getPriceConfig(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/controller/ConsignPriceController.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "fieldClass": "ConsignPriceService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "ConsignPriceController",
        "parentPackageName": "consignprice.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/service/ConsignPriceServiceImpl.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "classId": "consignprice.service.ConsignPriceServiceImpl",
      "packageName": "consignprice.service",
      "className": "ConsignPriceServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/service/ConsignPriceServiceImpl.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "returnType": "Response",
      "methodName": "getPriceConfig",
      "className": "ConsignPriceServiceImpl",
      "packageName": "consignprice.service",
      "methodId": "consignprice.service.ConsignPriceServiceImpl.getPriceConfig",
      "classId": "consignprice.service.ConsignPriceServiceImpl",
      "line": 79,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/service/ConsignPriceServiceImpl.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "parentPackageName": "consignprice.service",
      "parentClassName": "ConsignPriceServiceImpl",
      "parentMethodName": "getPriceConfig",
      "parentClassId": "consignprice.service.ConsignPriceServiceImpl",
      "lineNumber": 81,
      "calledMethodName": "findByIndex",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findByIndex(0)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/service/ConsignPriceServiceImpl.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "fieldClass": "ConsignPriceConfigRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "ConsignPriceServiceImpl",
        "parentPackageName": "consignprice.service"
      },
      "line": 18
    },
    "msRepository": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/repository/ConsignPriceConfigRepository.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "classId": "consignprice.repository.ConsignPriceConfigRepository",
      "packageName": "consignprice.repository",
      "className": "ConsignPriceConfigRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/repository/ConsignPriceConfigRepository.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "returnType": "ConsignPrice",
      "methodName": "findByIndex",
      "className": "ConsignPriceConfigRepository",
      "packageName": "consignprice.repository",
      "methodId": "consignprice.repository.ConsignPriceConfigRepository.findByIndex",
      "classId": "consignprice.repository.ConsignPriceConfigRepository",
      "line": 20,
      "msArgumentList": [
        {
          "returnType": "int"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/controller/ConsignPriceController.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "classId": "consignprice.controller.ConsignPriceController",
      "packageName": "consignprice.controller",
      "className": "ConsignPriceController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/controller/ConsignPriceController.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "returnType": "HttpEntity",
      "methodName": "modifyPriceConfig",
      "className": "ConsignPriceController",
      "packageName": "consignprice.controller",
      "methodId": "consignprice.controller.ConsignPriceController.modifyPriceConfig",
      "classId": "consignprice.controller.ConsignPriceController",
      "line": 51,
      "msArgumentList": [
        {
          "returnType": "ConsignPrice"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/consignprice\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/controller/ConsignPriceController.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "parentPackageName": "consignprice.controller",
      "parentClassName": "ConsignPriceController",
      "parentMethodName": "modifyPriceConfig",
      "parentClassId": "consignprice.controller.ConsignPriceController",
      "lineNumber": 55,
      "calledMethodName": "createAndModifyPrice",
      "calledServiceId": "service",
      "statementDeclaration": "service.createAndModifyPrice(priceConfig, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/controller/ConsignPriceController.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "fieldClass": "ConsignPriceService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "ConsignPriceController",
        "parentPackageName": "consignprice.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/service/ConsignPriceServiceImpl.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "classId": "consignprice.service.ConsignPriceServiceImpl",
      "packageName": "consignprice.service",
      "className": "ConsignPriceServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/service/ConsignPriceServiceImpl.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "returnType": "Response",
      "methodName": "createAndModifyPrice",
      "className": "ConsignPriceServiceImpl",
      "packageName": "consignprice.service",
      "methodId": "consignprice.service.ConsignPriceServiceImpl.createAndModifyPrice",
      "classId": "consignprice.service.ConsignPriceServiceImpl",
      "line": 59,
      "msArgumentList": [
        {
          "returnType": "ConsignPrice"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/service/ConsignPriceServiceImpl.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "parentPackageName": "consignprice.service",
      "parentClassName": "ConsignPriceServiceImpl",
      "parentMethodName": "createAndModifyPrice",
      "parentClassId": "consignprice.service.ConsignPriceServiceImpl",
      "lineNumber": 64,
      "calledMethodName": "findByIndex",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findByIndex(0)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/service/ConsignPriceServiceImpl.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "fieldClass": "ConsignPriceConfigRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "ConsignPriceServiceImpl",
        "parentPackageName": "consignprice.service"
      },
      "line": 18
    },
    "msRepository": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/repository/ConsignPriceConfigRepository.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "classId": "consignprice.repository.ConsignPriceConfigRepository",
      "packageName": "consignprice.repository",
      "className": "ConsignPriceConfigRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-consign-price-service/src/main/java/consignprice/repository/ConsignPriceConfigRepository.java",
        "directoryName": "/ts-consign-price-service/src/main/java/consignprice"
      },
      "returnType": "ConsignPrice",
      "methodName": "findByIndex",
      "className": "ConsignPriceConfigRepository",
      "packageName": "consignprice.repository",
      "methodId": "consignprice.repository.ConsignPriceConfigRepository.findByIndex",
      "classId": "consignprice.repository.ConsignPriceConfigRepository",
      "line": 20,
      "msArgumentList": [
        {
          "returnType": "int"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Query"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-basic-service/src/main/java/fdse/microservice/controller/BasicController.java",
        "directoryName": "/ts-basic-service/src/main/java/fdse"
      },
      "classId": "fdse.microservice.controller.BasicController",
      "packageName": "fdse.microservice.controller",
      "className": "BasicController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-basic-service/src/main/java/fdse/microservice/controller/BasicController.java",
        "directoryName": "/ts-basic-service/src/main/java/fdse"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "BasicController",
      "packageName": "fdse.microservice.controller",
      "methodId": "fdse.microservice.controller.BasicController.home",
      "classId": "fdse.microservice.controller.BasicController",
      "line": 28,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-basic-service/src/main/java/fdse/microservice/controller/BasicController.java"
      },
      "classId": "fdse.microservice.controller.BasicController",
      "packageName": "fdse.microservice.controller",
      "className": "BasicController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-basic-service/src/main/java/fdse/microservice/controller/BasicController.java"
      },
      "returnType": "HttpEntity",
      "methodName": "queryForTravel",
      "className": "BasicController",
      "packageName": "fdse.microservice.controller",
      "methodId": "fdse.microservice.controller.BasicController.queryForTravel",
      "classId": "fdse.microservice.controller.BasicController",
      "line": 35,
      "msArgumentList": [
        {
          "returnType": "Travel"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/basic/travel\""
        },
        {
          "isHttpAnnotation": false,
          "annotationName": "HystrixCommand"
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-basic-service/src/main/java/fdse/microservice/controller/BasicController.java"
      },
      "parentPackageName": "fdse.microservice.controller",
      "parentClassName": "BasicController",
      "parentMethodName": "queryForTravel",
      "parentClassId": "fdse.microservice.controller.BasicController",
      "lineNumber": 39,
      "calledMethodName": "queryForTravel",
      "calledServiceId": "service",
      "statementDeclaration": "service.queryForTravel(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-basic-service/src/main/java/fdse/microservice/controller/BasicController.java"
      },
      "fieldClass": "BasicService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "BasicController",
        "parentPackageName": "fdse.microservice.controller"
      },
      "line": 27
    },
    "msService": {
      "msId": {
        "path": "/ts-basic-service/src/main/java/fdse/microservice/service/BasicServiceImpl.java"
      },
      "classId": "fdse.microservice.service.BasicServiceImpl",
      "packageName": "fdse.microservice.service",
      "className": "BasicServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-basic-service/src/main/java/fdse/microservice/service/BasicServiceImpl.java"
      },
      "returnType": "Response",
      "methodName": "queryForTravel",
      "className": "BasicServiceImpl",
      "packageName": "fdse.microservice.service",
      "methodId": "fdse.microservice.service.BasicServiceImpl.queryForTravel",
      "classId": "fdse.microservice.service.BasicServiceImpl",
      "line": 31,
      "msArgumentList": [
        {
          "returnType": "Travel"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "api": "\"http://ts-station-service:12345/api/v1/stationservice/stations/id/\" + stationName",
        "httpMethod": "GET",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-basic-service/src/main/java/fdse/microservice/service/BasicServiceImpl.java"
        },
        "parentPackageName": "fdse.microservice.service",
        "parentClassName": "BasicServiceImpl",
        "parentMethodName": "queryForTravel",
        "parentClassId": "fdse.microservice.service.BasicServiceImpl",
        "lineNumber": 121,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-station-service:12345/api/v1/stationservice/stations/id/\" + stationName, HttpMethod.GET, requestEntity, Response.class)"
      },
      {
        "api": "\"http://ts-station-service:12345/api/v1/stationservice/stations/id/\" + stationName",
        "httpMethod": "GET",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-basic-service/src/main/java/fdse/microservice/service/BasicServiceImpl.java"
        },
        "parentPackageName": "fdse.microservice.service",
        "parentClassName": "BasicServiceImpl",
        "parentMethodName": "queryForTravel",
        "parentClassId": "fdse.microservice.service.BasicServiceImpl",
        "lineNumber": 121,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-station-service:12345/api/v1/stationservice/stations/id/\" + stationName, HttpMethod.GET, requestEntity, Response.class)"
      },
      {
        "api": "\"http://ts-train-service:14567/api/v1/trainservice/trains/\" + trainTypeId",
        "httpMethod": "GET",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-basic-service/src/main/java/fdse/microservice/service/BasicServiceImpl.java"
        },
        "parentPackageName": "fdse.microservice.service",
        "parentClassName": "BasicServiceImpl",
        "parentMethodName": "queryForTravel",
        "parentClassId": "fdse.microservice.service.BasicServiceImpl",
        "lineNumber": 134,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-train-service:14567/api/v1/trainservice/trains/\" + trainTypeId, HttpMethod.GET, requestEntity, Response.class)"
      },
      {
        "api": "\"http://ts-route-service:11178/api/v1/routeservice/routes/\" + routeId",
        "httpMethod": "GET",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-basic-service/src/main/java/fdse/microservice/service/BasicServiceImpl.java"
        },
        "parentPackageName": "fdse.microservice.service",
        "parentClassName": "BasicServiceImpl",
        "parentMethodName": "queryForTravel",
        "parentClassId": "fdse.microservice.service.BasicServiceImpl",
        "lineNumber": 147,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-route-service:11178/api/v1/routeservice/routes/\" + routeId, HttpMethod.GET, requestEntity, Response.class)"
      },
      {
        "api": "\"http://ts-price-service:16579/api/v1/priceservice/prices/\" + routeId + \"/\" + trainType",
        "httpMethod": "GET",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-basic-service/src/main/java/fdse/microservice/service/BasicServiceImpl.java"
        },
        "parentPackageName": "fdse.microservice.service",
        "parentClassName": "BasicServiceImpl",
        "parentMethodName": "queryForTravel",
        "parentClassId": "fdse.microservice.service.BasicServiceImpl",
        "lineNumber": 165,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-price-service:16579/api/v1/priceservice/prices/\" + routeId + \"/\" + trainType, HttpMethod.GET, requestEntity, Response.class)"
      },
      {
        "api": "\"http://ts-station-service:12345/api/v1/stationservice/stations/id/\" + stationName",
        "httpMethod": "GET",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-basic-service/src/main/java/fdse/microservice/service/BasicServiceImpl.java"
        },
        "parentPackageName": "fdse.microservice.service",
        "parentClassName": "BasicServiceImpl",
        "parentMethodName": "queryForTravel",
        "parentClassId": "fdse.microservice.service.BasicServiceImpl",
        "lineNumber": 110,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-station-service:12345/api/v1/stationservice/stations/id/\" + stationName, HttpMethod.GET, requestEntity, Response.class)"
      },
      {
        "api": "\"http://ts-station-service:12345/api/v1/stationservice/stations/id/\" + stationName",
        "httpMethod": "GET",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-basic-service/src/main/java/fdse/microservice/service/BasicServiceImpl.java"
        },
        "parentPackageName": "fdse.microservice.service",
        "parentClassName": "BasicServiceImpl",
        "parentMethodName": "queryForTravel",
        "parentClassId": "fdse.microservice.service.BasicServiceImpl",
        "lineNumber": 110,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-station-service:12345/api/v1/stationservice/stations/id/\" + stationName, HttpMethod.GET, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-basic-service/src/main/java/fdse/microservice/controller/BasicController.java",
        "directoryName": "/ts-basic-service/src/main/java/fdse"
      },
      "classId": "fdse.microservice.controller.BasicController",
      "packageName": "fdse.microservice.controller",
      "className": "BasicController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-basic-service/src/main/java/fdse/microservice/controller/BasicController.java",
        "directoryName": "/ts-basic-service/src/main/java/fdse"
      },
      "returnType": "HttpEntity",
      "methodName": "queryForStationId",
      "className": "BasicController",
      "packageName": "fdse.microservice.controller",
      "methodId": "fdse.microservice.controller.BasicController.queryForStationId",
      "classId": "fdse.microservice.controller.BasicController",
      "line": 40,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/basic/{stationName}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-basic-service/src/main/java/fdse/microservice/controller/BasicController.java",
        "directoryName": "/ts-basic-service/src/main/java/fdse"
      },
      "parentPackageName": "fdse.microservice.controller",
      "parentClassName": "BasicController",
      "parentMethodName": "queryForStationId",
      "parentClassId": "fdse.microservice.controller.BasicController",
      "lineNumber": 44,
      "calledMethodName": "queryForStationId",
      "calledServiceId": "service",
      "statementDeclaration": "service.queryForStationId(stationName, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-basic-service/src/main/java/fdse/microservice/controller/BasicController.java",
        "directoryName": "/ts-basic-service/src/main/java/fdse"
      },
      "fieldClass": "BasicService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "BasicController",
        "parentPackageName": "fdse.microservice.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-basic-service/src/main/java/fdse/microservice/service/BasicServiceImpl.java",
        "directoryName": "/ts-basic-service/src/main/java/fdse"
      },
      "classId": "fdse.microservice.service.BasicServiceImpl",
      "packageName": "fdse.microservice.service",
      "className": "BasicServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-basic-service/src/main/java/fdse/microservice/service/BasicServiceImpl.java",
        "directoryName": "/ts-basic-service/src/main/java/fdse"
      },
      "returnType": "Response",
      "methodName": "queryForStationId",
      "className": "BasicServiceImpl",
      "packageName": "fdse.microservice.service",
      "methodId": "fdse.microservice.service.BasicServiceImpl.queryForStationId",
      "classId": "fdse.microservice.service.BasicServiceImpl",
      "line": 108,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "api": "\"http://ts-station-service:12345/api/v1/stationservice/stations/id/\" + stationName",
        "httpMethod": "GET",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-basic-service/src/main/java/fdse/microservice/service/BasicServiceImpl.java",
          "directoryName": "/ts-basic-service/src/main/java/fdse"
        },
        "parentPackageName": "fdse.microservice.service",
        "parentClassName": "BasicServiceImpl",
        "parentMethodName": "queryForStationId",
        "parentClassId": "fdse.microservice.service.BasicServiceImpl",
        "lineNumber": 112,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-station-service:12345/api/v1/stationservice/stations/id/\" + stationName, HttpMethod.GET, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-preserve-other-service/src/main/java/preserveOther/controller/PreserveOtherController.java",
        "directoryName": "/ts-preserve-other-service/src/main/java/preserveOther"
      },
      "classId": "preserveOther.controller.PreserveOtherController",
      "packageName": "preserveOther.controller",
      "className": "PreserveOtherController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-preserve-other-service/src/main/java/preserveOther/controller/PreserveOtherController.java",
        "directoryName": "/ts-preserve-other-service/src/main/java/preserveOther"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "PreserveOtherController",
      "packageName": "preserveOther.controller",
      "methodId": "preserveOther.controller.PreserveOtherController.home",
      "classId": "preserveOther.controller.PreserveOtherController",
      "line": 26,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
        "msId": {
            "path": "/ts-preserve-other-service/src/main/java/preserveOther/controller/PreserveOtherController.java"
        },
        "classId": "preserveOther.controller.PreserveOtherController",
        "packageName": "preserveOther.controller",
        "className": "PreserveOtherController",
        "role": "CONTROLLER"
    },
    "msControllerMethod": {
        "msId": {
            "path": "/ts-preserve-other-service/src/main/java/preserveOther/controller/PreserveOtherController.java"
        },
        "returnType": "HttpEntity",
        "methodName": "preserve",
        "className": "PreserveOtherController",
        "packageName": "preserveOther.controller",
        "methodId": "preserveOther.controller.PreserveOtherController.preserve",
        "classId": "preserveOther.controller.PreserveOtherController",
        "line": 34,
        "msArgumentList": [
            {
                "returnType": "OrderTicketsInfo"
            },
            {
                "returnType": "HttpHeaders"
            }
        ],
        "msAnnotations": [
            {
                "isHttpAnnotation": true,
                "annotationName": "CrossOrigin",
                "key": "origins",
                "value": "\"*\""
            },
            {
                "isHttpAnnotation": true,
                "annotationName": "PostMapping",
                "key": "value",
                "value": "\"/preserveOther\""
            },
            {
                "isHttpAnnotation": true,
                "annotationName": "HystrixCommand",
                "key": "commandProperties",
                "value": "{ @HystrixProperty(name \u003d \"execution.isolation.thread.timeoutInMilliseconds\", value \u003d \"20000\") }"
            }
        ]
    },
    "msServiceMethodCall": {
        "msId": {
            "path": "/ts-preserve-other-service/src/main/java/preserveOther/controller/PreserveOtherController.java"
        },
        "parentPackageName": "preserveOther.controller",
        "parentClassName": "PreserveOtherController",
        "parentMethodName": "preserve",
        "parentClassId": "preserveOther.controller.PreserveOtherController",
        "lineNumber": 42,
        "calledMethodName": "preserve",
        "calledServiceId": "preserveService",
        "statementDeclaration": "preserveService.preserve(oti, headers)"
    },
    "msControllerServiceField": {
        "msId": {
            "path": "/ts-preserve-other-service/src/main/java/preserveOther/controller/PreserveOtherController.java"
        },
        "fieldClass": "PreserveOtherService",
        "fieldVariable": "preserveService",
        "parentMethod": {
            "parentClassName": "PreserveOtherController",
            "parentPackageName": "preserveOther.controller"
        },
        "line": 24
    },
    "msService": {
        "msId": {
            "path": "/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java"
        },
        "classId": "preserveOther.service.PreserveOtherServiceImpl",
        "packageName": "preserveOther.service",
        "className": "PreserveOtherServiceImpl",
        "role": "SERVICE"
    },
    "msServiceMethod": {
        "msId": {
            "path": "/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java"
        },
        "returnType": "Response",
        "methodName": "preserve",
        "className": "PreserveOtherServiceImpl",
        "packageName": "preserveOther.service",
        "methodId": "preserveOther.service.PreserveOtherServiceImpl.preserve",
        "classId": "preserveOther.service.PreserveOtherServiceImpl",
        "line": 32,
        "msArgumentList": [
            {
                "returnType": "OrderTicketsInfo"
            },
            {
                "returnType": "HttpHeaders"
            }
        ],
        "msAnnotations": [
            {
                "isHttpAnnotation": false,
                "annotationName": "Override"
            }
        ]
    },
    "msRestCalls": [
        {
            "api": "\"http://ts-ticketinfo-service:15681/api/v1/ticketinfoservice/ticketinfo\"",
            "httpMethod": "POST",
            "returnType": "TravelResult",
            "msId": {
                "path": "/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java"
            },
            "parentPackageName": "preserveOther.service",
            "parentClassName": "PreserveOtherServiceImpl",
            "parentMethodName": "preserve",
            "parentClassId": "preserveOther.service.PreserveOtherServiceImpl",
            "lineNumber": 120,
            "statementDeclaration": "restTemplate.exchange(\"http://ts-ticketinfo-service:15681/api/v1/ticketinfoservice/ticketinfo\", HttpMethod.POST, requestEntity, new ParameterizedTypeReference\u003cResponse\u003cTravelResult\u003e\u003e() {\n})"
        },
        {
            "api": "\"http://ts-security-service:11188/api/v1/securityservice/securityConfigs/\" + accountId",
            "httpMethod": "GET",
            "returnType": "requestCheckResult",
            "msId": {
                "path": "/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java"
            },
            "parentPackageName": "preserveOther.service",
            "parentClassName": "PreserveOtherServiceImpl",
            "parentMethodName": "preserve",
            "parentClassId": "preserveOther.service.PreserveOtherServiceImpl",
            "lineNumber": 326,
            "statementDeclaration": "restTemplate.exchange(\"http://ts-security-service:11188/api/v1/securityservice/securityConfigs/\" + accountId, HttpMethod.GET, requestCheckResult, Response.class)"
        },
        {
            "api": "\"http://ts-contacts-service:12347/api/v1/contactservice/contacts/\" + contactsId",
            "httpMethod": "GET",
            "returnType": "Contacts",
            "msId": {
                "path": "/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java"
            },
            "parentPackageName": "preserveOther.service",
            "parentClassName": "PreserveOtherServiceImpl",
            "parentMethodName": "preserve",
            "parentClassId": "preserveOther.service.PreserveOtherServiceImpl",
            "lineNumber": 354,
            "statementDeclaration": "restTemplate.exchange(\"http://ts-contacts-service:12347/api/v1/contactservice/contacts/\" + contactsId, HttpMethod.GET, requestGetContactsResult, new ParameterizedTypeReference\u003cResponse\u003cContacts\u003e\u003e() {\n})"
        },
        {
            "api": "\"http://ts-travel2-service:16346/api/v1/travel2service/trip_detail\"",
            "httpMethod": "POST",
            "returnType": "TripAllDetail",
            "msId": {
                "path": "/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java"
            },
            "parentPackageName": "preserveOther.service",
            "parentClassName": "PreserveOtherServiceImpl",
            "parentMethodName": "preserve",
            "parentClassId": "preserveOther.service.PreserveOtherServiceImpl",
            "lineNumber": 340,
            "statementDeclaration": "restTemplate.exchange(\"http://ts-travel2-service:16346/api/v1/travel2service/trip_detail\", HttpMethod.POST, requestGetTripAllDetailResult, new ParameterizedTypeReference\u003cResponse\u003cTripAllDetail\u003e\u003e() {\n})"
        },
        {
            "api": "\"http://ts-station-service:12345/api/v1/stationservice/stations/id/\" + stationName",
            "httpMethod": "GET",
            "returnType": "String",
            "msId": {
                "path": "/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java"
            },
            "parentPackageName": "preserveOther.service",
            "parentClassName": "PreserveOtherServiceImpl",
            "parentMethodName": "preserve",
            "parentClassId": "preserveOther.service.PreserveOtherServiceImpl",
            "lineNumber": 313,
            "statementDeclaration": "restTemplate.exchange(\"http://ts-station-service:12345/api/v1/stationservice/stations/id/\" + stationName, HttpMethod.GET, requestQueryForStationId, new ParameterizedTypeReference\u003cResponse\u003cString\u003e\u003e() {\n})"
        },
        {
            "api": "\"http://ts-station-service:12345/api/v1/stationservice/stations/id/\" + stationName",
            "httpMethod": "GET",
            "returnType": "String",
            "msId": {
                "path": "/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java"
            },
            "parentPackageName": "preserveOther.service",
            "parentClassName": "PreserveOtherServiceImpl",
            "parentMethodName": "preserve",
            "parentClassId": "preserveOther.service.PreserveOtherServiceImpl",
            "lineNumber": 313,
            "statementDeclaration": "restTemplate.exchange(\"http://ts-station-service:12345/api/v1/stationservice/stations/id/\" + stationName, HttpMethod.GET, requestQueryForStationId, new ParameterizedTypeReference\u003cResponse\u003cString\u003e\u003e() {\n})"
        },
        {
            "api": "\"http://ts-seat-service:18898/api/v1/seatservice/seats\"",
            "httpMethod": "POST",
            "returnType": "Ticket",
            "msId": {
                "path": "/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java"
            },
            "parentPackageName": "preserveOther.service",
            "parentClassName": "PreserveOtherServiceImpl",
            "parentMethodName": "preserve",
            "parentClassId": "preserveOther.service.PreserveOtherServiceImpl",
            "lineNumber": 255,
            "statementDeclaration": "restTemplate.exchange(\"http://ts-seat-service:18898/api/v1/seatservice/seats\", HttpMethod.POST, requestEntityTicket, new ParameterizedTypeReference\u003cResponse\u003cTicket\u003e\u003e() {\n})"
        },
        {
            "api": "\"http://ts-seat-service:18898/api/v1/seatservice/seats\"",
            "httpMethod": "POST",
            "returnType": "Ticket",
            "msId": {
                "path": "/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java"
            },
            "parentPackageName": "preserveOther.service",
            "parentClassName": "PreserveOtherServiceImpl",
            "parentMethodName": "preserve",
            "parentClassId": "preserveOther.service.PreserveOtherServiceImpl",
            "lineNumber": 255,
            "statementDeclaration": "restTemplate.exchange(\"http://ts-seat-service:18898/api/v1/seatservice/seats\", HttpMethod.POST, requestEntityTicket, new ParameterizedTypeReference\u003cResponse\u003cTicket\u003e\u003e() {\n})"
        },
        {
            "api": "\"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther\"",
            "httpMethod": "POST",
            "returnType": "Order",
            "msId": {
                "path": "/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java"
            },
            "parentPackageName": "preserveOther.service",
            "parentClassName": "PreserveOtherServiceImpl",
            "parentMethodName": "preserve",
            "parentClassId": "preserveOther.service.PreserveOtherServiceImpl",
            "lineNumber": 368,
            "statementDeclaration": "restTemplate.exchange(\"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther\", HttpMethod.POST, requestEntityCreateOrderResult, new ParameterizedTypeReference\u003cResponse\u003cOrder\u003e\u003e() {\n})"
        },
        {
            "api": "\"http://ts-assurance-service:18888/api/v1/assuranceservice/assurances/\" + assuranceType + \"/\" + orderId",
            "httpMethod": "GET",
            "returnType": "Assurance",
            "msId": {
                "path": "/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java"
            },
            "parentPackageName": "preserveOther.service",
            "parentClassName": "PreserveOtherServiceImpl",
            "parentMethodName": "preserve",
            "parentClassId": "preserveOther.service.PreserveOtherServiceImpl",
            "lineNumber": 297,
            "statementDeclaration": "restTemplate.exchange(\"http://ts-assurance-service:18888/api/v1/assuranceservice/assurances/\" + assuranceType + \"/\" + orderId, HttpMethod.GET, requestAddAssuranceResult, new ParameterizedTypeReference\u003cResponse\u003cAssurance\u003e\u003e() {\n})"
        },
        {
            "api": "\"http://ts-food-service:18856/api/v1/foodservice/orders\"",
            "httpMethod": "POST",
            "returnType": "requestEntityAddFoodOrderResult",
            "msId": {
                "path": "/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java"
            },
            "parentPackageName": "preserveOther.service",
            "parentClassName": "PreserveOtherServiceImpl",
            "parentMethodName": "preserve",
            "parentClassId": "preserveOther.service.PreserveOtherServiceImpl",
            "lineNumber": 383,
            "statementDeclaration": "restTemplate.exchange(\"http://ts-food-service:18856/api/v1/foodservice/orders\", HttpMethod.POST, requestEntityAddFoodOrderResult, Response.class)"
        },
        {
            "api": "\"http://ts-consign-service:16111/api/v1/consignservice/consigns\"",
            "httpMethod": "POST",
            "returnType": "requestEntityResultForTravel",
            "msId": {
                "path": "/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java"
            },
            "parentPackageName": "preserveOther.service",
            "parentClassName": "PreserveOtherServiceImpl",
            "parentMethodName": "preserve",
            "parentClassId": "preserveOther.service.PreserveOtherServiceImpl",
            "lineNumber": 396,
            "statementDeclaration": "restTemplate.exchange(\"http://ts-consign-service:16111/api/v1/consignservice/consigns\", HttpMethod.POST, requestEntityResultForTravel, Response.class)"
        },
        {
            "api": "\"http://ts-user-service:12342/api/v1/userservice/users/id/\" + accountId",
            "httpMethod": "GET",
            "returnType": "User",
            "msId": {
                "path": "/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java"
            },
            "parentPackageName": "preserveOther.service",
            "parentClassName": "PreserveOtherServiceImpl",
            "parentMethodName": "preserve",
            "parentClassId": "preserveOther.service.PreserveOtherServiceImpl",
            "lineNumber": 282,
            "statementDeclaration": "restTemplate.exchange(\"http://ts-user-service:12342/api/v1/userservice/users/id/\" + accountId, HttpMethod.GET, requestEntitySendEmail, new ParameterizedTypeReference\u003cResponse\u003cUser\u003e\u003e() {\n})"
        },
        {
            "api": "\"http://ts-notification-service:17853/api/v1/notifyservice/notification/preserve_success\"",
            "httpMethod": "POST",
            "returnType": "requestEntitySendEmail",
            "msId": {
                "path": "/ts-preserve-other-service/src/main/java/preserveOther/service/PreserveOtherServiceImpl.java"
            },
            "parentPackageName": "preserveOther.service",
            "parentClassName": "PreserveOtherServiceImpl",
            "parentMethodName": "preserve",
            "parentClassId": "preserveOther.service.PreserveOtherServiceImpl",
            "lineNumber": 269,
            "statementDeclaration": "restTemplate.exchange(\"http://ts-notification-service:17853/api/v1/notifyservice/notification/preserve_success\", HttpMethod.POST, requestEntitySendEmail, Boolean.class)"
        }
    ]
},
  {
    "msController": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "classId": "fdse.microservice.controller.StationController",
      "packageName": "fdse.microservice.controller",
      "className": "StationController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "StationController",
      "packageName": "fdse.microservice.controller",
      "methodId": "fdse.microservice.controller.StationController.home",
      "classId": "fdse.microservice.controller.StationController",
      "line": 28,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "classId": "fdse.microservice.controller.StationController",
      "packageName": "fdse.microservice.controller",
      "className": "StationController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "returnType": "HttpEntity",
      "methodName": "query",
      "className": "StationController",
      "packageName": "fdse.microservice.controller",
      "methodId": "fdse.microservice.controller.StationController.query",
      "classId": "fdse.microservice.controller.StationController",
      "line": 33,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/stations\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "parentPackageName": "fdse.microservice.controller",
      "parentClassName": "StationController",
      "parentMethodName": "query",
      "parentClassId": "fdse.microservice.controller.StationController",
      "lineNumber": 35,
      "calledMethodName": "query",
      "calledServiceId": "stationService",
      "statementDeclaration": "stationService.query(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "fieldClass": "StationService",
      "fieldVariable": "stationService",
      "parentMethod": {
        "parentClassName": "StationController",
        "parentPackageName": "fdse.microservice.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "classId": "fdse.microservice.service.StationServiceImpl",
      "packageName": "fdse.microservice.service",
      "className": "StationServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "returnType": "Response",
      "methodName": "query",
      "className": "StationServiceImpl",
      "packageName": "fdse.microservice.service",
      "methodId": "fdse.microservice.service.StationServiceImpl.query",
      "classId": "fdse.microservice.service.StationServiceImpl",
      "line": 73,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "parentPackageName": "fdse.microservice.service",
      "parentClassName": "StationServiceImpl",
      "parentMethodName": "query",
      "parentClassId": "fdse.microservice.service.StationServiceImpl",
      "lineNumber": 75,
      "calledMethodName": "findAll",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findAll()"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "fieldClass": "StationRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "StationServiceImpl",
        "parentPackageName": "fdse.microservice.service"
      },
      "line": 19
    },
    "msRepository": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/repository/StationRepository.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "classId": "fdse.microservice.repository.StationRepository",
      "packageName": "fdse.microservice.repository",
      "className": "StationRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/repository/StationRepository.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "returnType": "List\u003cStation\u003e",
      "methodName": "findAll",
      "className": "StationRepository",
      "packageName": "fdse.microservice.repository",
      "methodId": "fdse.microservice.repository.StationRepository.findAll",
      "classId": "fdse.microservice.repository.StationRepository",
      "line": 15,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "classId": "fdse.microservice.controller.StationController",
      "packageName": "fdse.microservice.controller",
      "className": "StationController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "returnType": "ResponseEntity\u003cResponse\u003e",
      "methodName": "create",
      "className": "StationController",
      "packageName": "fdse.microservice.controller",
      "methodId": "fdse.microservice.controller.StationController.create",
      "classId": "fdse.microservice.controller.StationController",
      "line": 38,
      "msArgumentList": [
        {
          "returnType": "Station"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/stations\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "parentPackageName": "fdse.microservice.controller",
      "parentClassName": "StationController",
      "parentMethodName": "create",
      "parentClassId": "fdse.microservice.controller.StationController",
      "lineNumber": 41,
      "calledMethodName": "create",
      "calledServiceId": "stationService",
      "statementDeclaration": "stationService.create(station, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "fieldClass": "StationService",
      "fieldVariable": "stationService",
      "parentMethod": {
        "parentClassName": "StationController",
        "parentPackageName": "fdse.microservice.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "classId": "fdse.microservice.service.StationServiceImpl",
      "packageName": "fdse.microservice.service",
      "className": "StationServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "returnType": "Response",
      "methodName": "create",
      "className": "StationServiceImpl",
      "packageName": "fdse.microservice.service",
      "methodId": "fdse.microservice.service.StationServiceImpl.create",
      "classId": "fdse.microservice.service.StationServiceImpl",
      "line": 26,
      "msArgumentList": [
        {
          "returnType": "Station"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "parentPackageName": "fdse.microservice.service",
      "parentClassName": "StationServiceImpl",
      "parentMethodName": "create",
      "parentClassId": "fdse.microservice.service.StationServiceImpl",
      "lineNumber": 28,
      "calledMethodName": "findById",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findById(station.getId())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "fieldClass": "StationRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "StationServiceImpl",
        "parentPackageName": "fdse.microservice.service"
      },
      "line": 19
    },
    "msRepository": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/repository/StationRepository.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "classId": "fdse.microservice.repository.StationRepository",
      "packageName": "fdse.microservice.repository",
      "className": "StationRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/repository/StationRepository.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "returnType": "Station",
      "methodName": "findById",
      "className": "StationRepository",
      "packageName": "fdse.microservice.repository",
      "methodId": "fdse.microservice.repository.StationRepository.findById",
      "classId": "fdse.microservice.repository.StationRepository",
      "line": 13,
      "msArgumentList": [
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "classId": "fdse.microservice.controller.StationController",
      "packageName": "fdse.microservice.controller",
      "className": "StationController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "returnType": "HttpEntity",
      "methodName": "update",
      "className": "StationController",
      "packageName": "fdse.microservice.controller",
      "methodId": "fdse.microservice.controller.StationController.update",
      "classId": "fdse.microservice.controller.StationController",
      "line": 44,
      "msArgumentList": [
        {
          "returnType": "Station"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PutMapping",
          "key": "value",
          "value": "\"/stations\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "parentPackageName": "fdse.microservice.controller",
      "parentClassName": "StationController",
      "parentMethodName": "update",
      "parentClassId": "fdse.microservice.controller.StationController",
      "lineNumber": 47,
      "calledMethodName": "update",
      "calledServiceId": "stationService",
      "statementDeclaration": "stationService.update(station, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "fieldClass": "StationService",
      "fieldVariable": "stationService",
      "parentMethod": {
        "parentClassName": "StationController",
        "parentPackageName": "fdse.microservice.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "classId": "fdse.microservice.service.StationServiceImpl",
      "packageName": "fdse.microservice.service",
      "className": "StationServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "returnType": "Response",
      "methodName": "update",
      "className": "StationServiceImpl",
      "packageName": "fdse.microservice.service",
      "methodId": "fdse.microservice.service.StationServiceImpl.update",
      "classId": "fdse.microservice.service.StationServiceImpl",
      "line": 47,
      "msArgumentList": [
        {
          "returnType": "Station"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "parentPackageName": "fdse.microservice.service",
      "parentClassName": "StationServiceImpl",
      "parentMethodName": "update",
      "parentClassId": "fdse.microservice.service.StationServiceImpl",
      "lineNumber": 50,
      "calledMethodName": "findById",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findById(info.getId())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "fieldClass": "StationRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "StationServiceImpl",
        "parentPackageName": "fdse.microservice.service"
      },
      "line": 19
    },
    "msRepository": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/repository/StationRepository.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "classId": "fdse.microservice.repository.StationRepository",
      "packageName": "fdse.microservice.repository",
      "className": "StationRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/repository/StationRepository.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "returnType": "Station",
      "methodName": "findById",
      "className": "StationRepository",
      "packageName": "fdse.microservice.repository",
      "methodId": "fdse.microservice.repository.StationRepository.findById",
      "classId": "fdse.microservice.repository.StationRepository",
      "line": 13,
      "msArgumentList": [
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "classId": "fdse.microservice.controller.StationController",
      "packageName": "fdse.microservice.controller",
      "className": "StationController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "returnType": "ResponseEntity\u003cResponse\u003e",
      "methodName": "delete",
      "className": "StationController",
      "packageName": "fdse.microservice.controller",
      "methodId": "fdse.microservice.controller.StationController.delete",
      "classId": "fdse.microservice.controller.StationController",
      "line": 50,
      "msArgumentList": [
        {
          "returnType": "Station"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "DeleteMapping",
          "key": "value",
          "value": "\"/stations\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "parentPackageName": "fdse.microservice.controller",
      "parentClassName": "StationController",
      "parentMethodName": "delete",
      "parentClassId": "fdse.microservice.controller.StationController",
      "lineNumber": 53,
      "calledMethodName": "delete",
      "calledServiceId": "stationService",
      "statementDeclaration": "stationService.delete(station, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "fieldClass": "StationService",
      "fieldVariable": "stationService",
      "parentMethod": {
        "parentClassName": "StationController",
        "parentPackageName": "fdse.microservice.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "classId": "fdse.microservice.service.StationServiceImpl",
      "packageName": "fdse.microservice.service",
      "className": "StationServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "returnType": "Response",
      "methodName": "delete",
      "className": "StationServiceImpl",
      "packageName": "fdse.microservice.service",
      "methodId": "fdse.microservice.service.StationServiceImpl.delete",
      "classId": "fdse.microservice.service.StationServiceImpl",
      "line": 61,
      "msArgumentList": [
        {
          "returnType": "Station"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "parentPackageName": "fdse.microservice.service",
      "parentClassName": "StationServiceImpl",
      "parentMethodName": "delete",
      "parentClassId": "fdse.microservice.service.StationServiceImpl",
      "lineNumber": 64,
      "calledMethodName": "findById",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findById(info.getId())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "fieldClass": "StationRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "StationServiceImpl",
        "parentPackageName": "fdse.microservice.service"
      },
      "line": 19
    },
    "msRepository": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/repository/StationRepository.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "classId": "fdse.microservice.repository.StationRepository",
      "packageName": "fdse.microservice.repository",
      "className": "StationRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/repository/StationRepository.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "returnType": "Station",
      "methodName": "findById",
      "className": "StationRepository",
      "packageName": "fdse.microservice.repository",
      "methodId": "fdse.microservice.repository.StationRepository.findById",
      "classId": "fdse.microservice.repository.StationRepository",
      "line": 13,
      "msArgumentList": [
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "classId": "fdse.microservice.controller.StationController",
      "packageName": "fdse.microservice.controller",
      "className": "StationController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "returnType": "HttpEntity",
      "methodName": "queryForStationId",
      "className": "StationController",
      "packageName": "fdse.microservice.controller",
      "methodId": "fdse.microservice.controller.StationController.queryForStationId",
      "classId": "fdse.microservice.controller.StationController",
      "line": 59,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/stations/id/{stationNameForId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "parentPackageName": "fdse.microservice.controller",
      "parentClassName": "StationController",
      "parentMethodName": "queryForStationId",
      "parentClassId": "fdse.microservice.controller.StationController",
      "lineNumber": 64,
      "calledMethodName": "queryForId",
      "calledServiceId": "stationService",
      "statementDeclaration": "stationService.queryForId(stationName, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "fieldClass": "StationService",
      "fieldVariable": "stationService",
      "parentMethod": {
        "parentClassName": "StationController",
        "parentPackageName": "fdse.microservice.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "classId": "fdse.microservice.service.StationServiceImpl",
      "packageName": "fdse.microservice.service",
      "className": "StationServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "returnType": "Response",
      "methodName": "queryForId",
      "className": "StationServiceImpl",
      "packageName": "fdse.microservice.service",
      "methodId": "fdse.microservice.service.StationServiceImpl.queryForId",
      "classId": "fdse.microservice.service.StationServiceImpl",
      "line": 84,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "parentPackageName": "fdse.microservice.service",
      "parentClassName": "StationServiceImpl",
      "parentMethodName": "queryForId",
      "parentClassId": "fdse.microservice.service.StationServiceImpl",
      "lineNumber": 86,
      "calledMethodName": "findByName",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findByName(stationName)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "fieldClass": "StationRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "StationServiceImpl",
        "parentPackageName": "fdse.microservice.service"
      },
      "line": 19
    },
    "msRepository": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/repository/StationRepository.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "classId": "fdse.microservice.repository.StationRepository",
      "packageName": "fdse.microservice.repository",
      "className": "StationRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/repository/StationRepository.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "returnType": "Station",
      "methodName": "findByName",
      "className": "StationRepository",
      "packageName": "fdse.microservice.repository",
      "methodId": "fdse.microservice.repository.StationRepository.findByName",
      "classId": "fdse.microservice.repository.StationRepository",
      "line": 11,
      "msArgumentList": [
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "classId": "fdse.microservice.controller.StationController",
      "packageName": "fdse.microservice.controller",
      "className": "StationController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "returnType": "HttpEntity",
      "methodName": "queryForIdBatch",
      "className": "StationController",
      "packageName": "fdse.microservice.controller",
      "methodId": "fdse.microservice.controller.StationController.queryForIdBatch",
      "classId": "fdse.microservice.controller.StationController",
      "line": 68,
      "msArgumentList": [
        {
          "returnType": "List\u003cString\u003e"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/stations/idlist\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "parentPackageName": "fdse.microservice.controller",
      "parentClassName": "StationController",
      "parentMethodName": "queryForIdBatch",
      "parentClassId": "fdse.microservice.controller.StationController",
      "lineNumber": 72,
      "calledMethodName": "queryForIdBatch",
      "calledServiceId": "stationService",
      "statementDeclaration": "stationService.queryForIdBatch(stationNameList, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "fieldClass": "StationService",
      "fieldVariable": "stationService",
      "parentMethod": {
        "parentClassName": "StationController",
        "parentPackageName": "fdse.microservice.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "classId": "fdse.microservice.service.StationServiceImpl",
      "packageName": "fdse.microservice.service",
      "className": "StationServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "returnType": "Response",
      "methodName": "queryForIdBatch",
      "className": "StationServiceImpl",
      "packageName": "fdse.microservice.service",
      "methodId": "fdse.microservice.service.StationServiceImpl.queryForIdBatch",
      "classId": "fdse.microservice.service.StationServiceImpl",
      "line": 97,
      "msArgumentList": [
        {
          "returnType": "List\u003cString\u003e"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "parentPackageName": "fdse.microservice.service",
      "parentClassName": "StationServiceImpl",
      "parentMethodName": "queryForIdBatch",
      "parentClassId": "fdse.microservice.service.StationServiceImpl",
      "lineNumber": 101,
      "calledMethodName": "findByName",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findByName(nameList.get(i))"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "fieldClass": "StationRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "StationServiceImpl",
        "parentPackageName": "fdse.microservice.service"
      },
      "line": 19
    },
    "msRepository": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/repository/StationRepository.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "classId": "fdse.microservice.repository.StationRepository",
      "packageName": "fdse.microservice.repository",
      "className": "StationRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/repository/StationRepository.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "returnType": "Station",
      "methodName": "findByName",
      "className": "StationRepository",
      "packageName": "fdse.microservice.repository",
      "methodId": "fdse.microservice.repository.StationRepository.findByName",
      "classId": "fdse.microservice.repository.StationRepository",
      "line": 11,
      "msArgumentList": [
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "classId": "fdse.microservice.controller.StationController",
      "packageName": "fdse.microservice.controller",
      "className": "StationController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "returnType": "HttpEntity",
      "methodName": "queryById",
      "className": "StationController",
      "packageName": "fdse.microservice.controller",
      "methodId": "fdse.microservice.controller.StationController.queryById",
      "classId": "fdse.microservice.controller.StationController",
      "line": 76,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/stations/name/{stationIdForName}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "parentPackageName": "fdse.microservice.controller",
      "parentClassName": "StationController",
      "parentMethodName": "queryById",
      "parentClassId": "fdse.microservice.controller.StationController",
      "lineNumber": 82,
      "calledMethodName": "queryById",
      "calledServiceId": "stationService",
      "statementDeclaration": "stationService.queryById(stationId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "fieldClass": "StationService",
      "fieldVariable": "stationService",
      "parentMethod": {
        "parentClassName": "StationController",
        "parentPackageName": "fdse.microservice.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "classId": "fdse.microservice.service.StationServiceImpl",
      "packageName": "fdse.microservice.service",
      "className": "StationServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "returnType": "Response",
      "methodName": "queryById",
      "className": "StationServiceImpl",
      "packageName": "fdse.microservice.service",
      "methodId": "fdse.microservice.service.StationServiceImpl.queryById",
      "classId": "fdse.microservice.service.StationServiceImpl",
      "line": 118,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "parentPackageName": "fdse.microservice.service",
      "parentClassName": "StationServiceImpl",
      "parentMethodName": "queryById",
      "parentClassId": "fdse.microservice.service.StationServiceImpl",
      "lineNumber": 120,
      "calledMethodName": "findById",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findById(stationId)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "fieldClass": "StationRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "StationServiceImpl",
        "parentPackageName": "fdse.microservice.service"
      },
      "line": 19
    },
    "msRepository": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/repository/StationRepository.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "classId": "fdse.microservice.repository.StationRepository",
      "packageName": "fdse.microservice.repository",
      "className": "StationRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/repository/StationRepository.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "returnType": "Station",
      "methodName": "findById",
      "className": "StationRepository",
      "packageName": "fdse.microservice.repository",
      "methodId": "fdse.microservice.repository.StationRepository.findById",
      "classId": "fdse.microservice.repository.StationRepository",
      "line": 13,
      "msArgumentList": [
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "classId": "fdse.microservice.controller.StationController",
      "packageName": "fdse.microservice.controller",
      "className": "StationController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "returnType": "HttpEntity",
      "methodName": "queryForNameBatch",
      "className": "StationController",
      "packageName": "fdse.microservice.controller",
      "methodId": "fdse.microservice.controller.StationController.queryForNameBatch",
      "classId": "fdse.microservice.controller.StationController",
      "line": 86,
      "msArgumentList": [
        {
          "returnType": "List\u003cString\u003e"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/stations/namelist\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "parentPackageName": "fdse.microservice.controller",
      "parentClassName": "StationController",
      "parentMethodName": "queryForNameBatch",
      "parentClassId": "fdse.microservice.controller.StationController",
      "lineNumber": 90,
      "calledMethodName": "queryByIdBatch",
      "calledServiceId": "stationService",
      "statementDeclaration": "stationService.queryByIdBatch(stationIdList, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/controller/StationController.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "fieldClass": "StationService",
      "fieldVariable": "stationService",
      "parentMethod": {
        "parentClassName": "StationController",
        "parentPackageName": "fdse.microservice.controller"
      },
      "line": 23
    },
    "msService": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "classId": "fdse.microservice.service.StationServiceImpl",
      "packageName": "fdse.microservice.service",
      "className": "StationServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "returnType": "Response",
      "methodName": "queryByIdBatch",
      "className": "StationServiceImpl",
      "packageName": "fdse.microservice.service",
      "methodId": "fdse.microservice.service.StationServiceImpl.queryByIdBatch",
      "classId": "fdse.microservice.service.StationServiceImpl",
      "line": 129,
      "msArgumentList": [
        {
          "returnType": "List\u003cString\u003e"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "parentPackageName": "fdse.microservice.service",
      "parentClassName": "StationServiceImpl",
      "parentMethodName": "queryByIdBatch",
      "parentClassId": "fdse.microservice.service.StationServiceImpl",
      "lineNumber": 133,
      "calledMethodName": "findById",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findById(idList.get(i))"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/service/StationServiceImpl.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "fieldClass": "StationRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "StationServiceImpl",
        "parentPackageName": "fdse.microservice.service"
      },
      "line": 19
    },
    "msRepository": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/repository/StationRepository.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "classId": "fdse.microservice.repository.StationRepository",
      "packageName": "fdse.microservice.repository",
      "className": "StationRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-station-service/src/main/java/fdse/microservice/repository/StationRepository.java",
        "directoryName": "/ts-station-service/src/main/java/fdse"
      },
      "returnType": "Station",
      "methodName": "findById",
      "className": "StationRepository",
      "packageName": "fdse.microservice.repository",
      "methodId": "fdse.microservice.repository.StationRepository.findById",
      "classId": "fdse.microservice.repository.StationRepository",
      "line": 13,
      "msArgumentList": [
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/controller/AuthController.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "classId": "auth.controller.AuthController",
      "packageName": "auth.controller",
      "className": "AuthController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/controller/AuthController.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "returnType": "String",
      "methodName": "getHello",
      "className": "AuthController",
      "packageName": "auth.controller",
      "methodId": "auth.controller.AuthController.getHello",
      "classId": "auth.controller.AuthController",
      "line": 31,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "GetMapping"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/controller/AuthController.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "classId": "auth.controller.AuthController",
      "packageName": "auth.controller",
      "className": "AuthController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/controller/AuthController.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "returnType": "HttpEntity\u003cResponse\u003e",
      "methodName": "createDefaultUser",
      "className": "AuthController",
      "packageName": "auth.controller",
      "methodId": "auth.controller.AuthController.createDefaultUser",
      "classId": "auth.controller.AuthController",
      "line": 36,
      "msArgumentList": [
        {
          "returnType": "AuthDto"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "PostMapping"
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/controller/AuthController.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "parentPackageName": "auth.controller",
      "parentClassName": "AuthController",
      "parentMethodName": "createDefaultUser",
      "parentClassId": "auth.controller.AuthController",
      "lineNumber": 39,
      "calledMethodName": "createDefaultAuthUser",
      "calledServiceId": "userService",
      "statementDeclaration": "userService.createDefaultAuthUser(authDto)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/controller/AuthController.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "fieldClass": "UserService",
      "fieldVariable": "userService",
      "parentMethod": {
        "parentClassName": "AuthController",
        "parentPackageName": "auth.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/service/impl/UserServiceImpl.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "classId": "auth.service.impl.UserServiceImpl",
      "packageName": "auth.service.impl",
      "className": "UserServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/service/impl/UserServiceImpl.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "returnType": "User",
      "methodName": "createDefaultAuthUser",
      "className": "UserServiceImpl",
      "packageName": "auth.service.impl",
      "methodId": "auth.service.impl.UserServiceImpl.createDefaultAuthUser",
      "classId": "auth.service.impl.UserServiceImpl",
      "line": 50,
      "msArgumentList": [
        {
          "returnType": "AuthDto"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/service/impl/UserServiceImpl.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "parentPackageName": "auth.service.impl",
      "parentClassName": "UserServiceImpl",
      "parentMethodName": "createDefaultAuthUser",
      "parentClassId": "auth.service.impl.UserServiceImpl",
      "lineNumber": 64,
      "calledMethodName": "save",
      "calledServiceId": "userRepository",
      "statementDeclaration": "userRepository.save(user)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/service/impl/UserServiceImpl.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "fieldClass": "UserRepository",
      "fieldVariable": "userRepository",
      "parentMethod": {
        "parentClassName": "UserServiceImpl",
        "parentPackageName": "auth.service.impl"
      },
      "line": 28
    },
    "msRepository": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/repository/UserRepository.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "classId": "auth.repository.UserRepository",
      "packageName": "auth.repository",
      "className": "UserRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [
      {
        "api": "\"http://ts-auth-service:12340/api/v1/auth\"",
        "httpMethod": "POST",
        "returnType": "AuthDto",
        "msId": {
          "path": "/ts-user-service/src/main/java/user/service/impl/UserServiceImpl.java",
          "directoryName": "/ts-user-service/src/main/java/user"
        },
        "parentPackageName": "user.service.impl",
        "parentClassName": "UserServiceImpl",
        "parentMethodName": "createDefaultAuthUser",
        "parentClassId": "user.service.impl.UserServiceImpl",
        "lineNumber": 74,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-auth-service:12340/api/v1/auth\", HttpMethod.POST, entity, new ParameterizedTypeReference\u003cResponse\u003cAuthDto\u003e\u003e() {\n})"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/controller/UserController.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "classId": "auth.controller.UserController",
      "packageName": "auth.controller",
      "className": "UserController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/controller/UserController.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "returnType": "Object",
      "methodName": "getHello",
      "className": "UserController",
      "packageName": "auth.controller",
      "methodId": "auth.controller.UserController.getHello",
      "classId": "auth.controller.UserController",
      "line": 36,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "GetMapping"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/controller/UserController.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "classId": "auth.controller.UserController",
      "packageName": "auth.controller",
      "className": "UserController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/controller/UserController.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "returnType": "ResponseEntity\u003cResponse\u003e",
      "methodName": "getToken",
      "className": "UserController",
      "packageName": "auth.controller",
      "methodId": "auth.controller.UserController.getToken",
      "classId": "auth.controller.UserController",
      "line": 41,
      "msArgumentList": [
        {
          "returnType": "BasicAuthDto"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "PostMapping"
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/controller/UserController.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "parentPackageName": "auth.controller",
      "parentClassName": "UserController",
      "parentMethodName": "getToken",
      "parentClassId": "auth.controller.UserController",
      "lineNumber": 45,
      "calledMethodName": "getToken",
      "calledServiceId": "tokenService",
      "statementDeclaration": "tokenService.getToken(dao, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/controller/UserController.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "fieldClass": "TokenService",
      "fieldVariable": "tokenService",
      "parentMethod": {
        "parentClassName": "UserController",
        "parentPackageName": "auth.controller"
      },
      "line": 31
    },
    "msService": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/service/impl/TokenServiceImpl.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "classId": "auth.service.impl.TokenServiceImpl",
      "packageName": "auth.service.impl",
      "className": "TokenServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/service/impl/TokenServiceImpl.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "returnType": "Response",
      "methodName": "getToken",
      "className": "TokenServiceImpl",
      "packageName": "auth.service.impl",
      "methodId": "auth.service.impl.TokenServiceImpl.getToken",
      "classId": "auth.service.impl.TokenServiceImpl",
      "line": 47,
      "msArgumentList": [
        {
          "returnType": "BasicAuthDto"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/service/impl/TokenServiceImpl.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "parentPackageName": "auth.service.impl",
      "parentClassName": "TokenServiceImpl",
      "parentMethodName": "getToken",
      "parentClassId": "auth.service.impl.TokenServiceImpl",
      "lineNumber": 79,
      "calledMethodName": "findByUsername",
      "calledServiceId": "userRepository",
      "statementDeclaration": "userRepository.findByUsername(username)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/service/impl/TokenServiceImpl.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "fieldClass": "UserRepository",
      "fieldVariable": "userRepository",
      "parentMethod": {
        "parentClassName": "TokenServiceImpl",
        "parentPackageName": "auth.service.impl"
      },
      "line": 38
    },
    "msRepository": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/repository/UserRepository.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "classId": "auth.repository.UserRepository",
      "packageName": "auth.repository",
      "className": "UserRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [
      {
        "api": "\"http://ts-verification-code-service:15678/api/v1/verifycode/verify/\" + verifyCode",
        "httpMethod": "GET",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-auth-service/src/main/java/auth/service/impl/TokenServiceImpl.java",
          "directoryName": "/ts-auth-service/src/main/java/auth"
        },
        "parentPackageName": "auth.service.impl",
        "parentClassName": "TokenServiceImpl",
        "parentMethodName": "getToken",
        "parentClassId": "auth.service.impl.TokenServiceImpl",
        "lineNumber": 56,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-verification-code-service:15678/api/v1/verifycode/verify/\" + verifyCode, HttpMethod.GET, requestEntity, Boolean.class)"
      }
    ],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/repository/UserRepository.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "returnType": "Optional\u003cUser\u003e",
      "methodName": "findByUsername",
      "className": "UserRepository",
      "packageName": "auth.repository",
      "methodId": "auth.repository.UserRepository.findByUsername",
      "classId": "auth.repository.UserRepository",
      "line": 20,
      "msArgumentList": [
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/controller/UserController.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "classId": "auth.controller.UserController",
      "packageName": "auth.controller",
      "className": "UserController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/controller/UserController.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "returnType": "ResponseEntity\u003cList\u003cUser\u003e\u003e",
      "methodName": "getAllUser",
      "className": "UserController",
      "packageName": "auth.controller",
      "methodId": "auth.controller.UserController.getAllUser",
      "classId": "auth.controller.UserController",
      "line": 53,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "GetMapping"
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/controller/UserController.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "parentPackageName": "auth.controller",
      "parentClassName": "UserController",
      "parentMethodName": "getAllUser",
      "parentClassId": "auth.controller.UserController",
      "lineNumber": 56,
      "calledMethodName": "getAllUser",
      "calledServiceId": "userService",
      "statementDeclaration": "userService.getAllUser(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/controller/UserController.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "fieldClass": "UserService",
      "fieldVariable": "userService",
      "parentMethod": {
        "parentClassName": "UserController",
        "parentPackageName": "auth.controller"
      },
      "line": 28
    },
    "msService": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/service/impl/UserServiceImpl.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "classId": "auth.service.impl.UserServiceImpl",
      "packageName": "auth.service.impl",
      "className": "UserServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/service/impl/UserServiceImpl.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "returnType": "List\u003cUser\u003e",
      "methodName": "getAllUser",
      "className": "UserServiceImpl",
      "packageName": "auth.service.impl",
      "methodId": "auth.service.impl.UserServiceImpl.getAllUser",
      "classId": "auth.service.impl.UserServiceImpl",
      "line": 39,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/service/impl/UserServiceImpl.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "parentPackageName": "auth.service.impl",
      "parentClassName": "UserServiceImpl",
      "parentMethodName": "getAllUser",
      "parentClassId": "auth.service.impl.UserServiceImpl",
      "lineNumber": 41,
      "calledMethodName": "findAll",
      "calledServiceId": "userRepository",
      "statementDeclaration": "userRepository.findAll()"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/service/impl/UserServiceImpl.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "fieldClass": "UserRepository",
      "fieldVariable": "userRepository",
      "parentMethod": {
        "parentClassName": "UserServiceImpl",
        "parentPackageName": "auth.service.impl"
      },
      "line": 28
    },
    "msRepository": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/repository/UserRepository.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "classId": "auth.repository.UserRepository",
      "packageName": "auth.repository",
      "className": "UserRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": []
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/controller/UserController.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "classId": "auth.controller.UserController",
      "packageName": "auth.controller",
      "className": "UserController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/controller/UserController.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "returnType": "ResponseEntity\u003cResponse\u003e",
      "methodName": "deleteUserById",
      "className": "UserController",
      "packageName": "auth.controller",
      "methodId": "auth.controller.UserController.deleteUserById",
      "classId": "auth.controller.UserController",
      "line": 59,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "DeleteMapping"
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/controller/UserController.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "parentPackageName": "auth.controller",
      "parentClassName": "UserController",
      "parentMethodName": "deleteUserById",
      "parentClassId": "auth.controller.UserController",
      "lineNumber": 62,
      "calledMethodName": "deleteByUserId",
      "calledServiceId": "userService",
      "statementDeclaration": "userService.deleteByUserId(UUID.fromString(userId), headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/controller/UserController.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "fieldClass": "UserService",
      "fieldVariable": "userService",
      "parentMethod": {
        "parentClassName": "UserController",
        "parentPackageName": "auth.controller"
      },
      "line": 28
    },
    "msService": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/service/impl/UserServiceImpl.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "classId": "auth.service.impl.UserServiceImpl",
      "packageName": "auth.service.impl",
      "className": "UserServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/service/impl/UserServiceImpl.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "returnType": "Response",
      "methodName": "deleteByUserId",
      "className": "UserServiceImpl",
      "packageName": "auth.service.impl",
      "methodId": "auth.service.impl.UserServiceImpl.deleteByUserId",
      "classId": "auth.service.impl.UserServiceImpl",
      "line": 67,
      "msArgumentList": [
        {
          "returnType": "UUID"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/service/impl/UserServiceImpl.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "parentPackageName": "auth.service.impl",
      "parentClassName": "UserServiceImpl",
      "parentMethodName": "deleteByUserId",
      "parentClassId": "auth.service.impl.UserServiceImpl",
      "lineNumber": 70,
      "calledMethodName": "deleteByUserId",
      "calledServiceId": "userRepository",
      "statementDeclaration": "userRepository.deleteByUserId(userId)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/service/impl/UserServiceImpl.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "fieldClass": "UserRepository",
      "fieldVariable": "userRepository",
      "parentMethod": {
        "parentClassName": "UserServiceImpl",
        "parentPackageName": "auth.service.impl"
      },
      "line": 28
    },
    "msRepository": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/repository/UserRepository.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "classId": "auth.repository.UserRepository",
      "packageName": "auth.repository",
      "className": "UserRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/repository/UserRepository.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "returnType": "void",
      "methodName": "deleteByUserId",
      "className": "UserRepository",
      "packageName": "auth.repository",
      "methodId": "auth.repository.UserRepository.deleteByUserId",
      "classId": "auth.repository.UserRepository",
      "line": 28,
      "msArgumentList": [
        {
          "returnType": "UUID"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-user-service/src/main/java/user/controller/UserController.java",
        "directoryName": "/ts-user-service/src/main/java/user"
      },
      "classId": "user.controller.UserController",
      "packageName": "user.controller",
      "className": "UserController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-user-service/src/main/java/user/controller/UserController.java",
        "directoryName": "/ts-user-service/src/main/java/user"
      },
      "returnType": "String",
      "methodName": "testHello",
      "className": "UserController",
      "packageName": "user.controller",
      "methodId": "user.controller.UserController.testHello",
      "classId": "user.controller.UserController",
      "line": 30,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "GetMapping"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-user-service/src/main/java/user/controller/UserController.java",
        "directoryName": "/ts-user-service/src/main/java/user"
      },
      "classId": "user.controller.UserController",
      "packageName": "user.controller",
      "className": "UserController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-user-service/src/main/java/user/controller/UserController.java",
        "directoryName": "/ts-user-service/src/main/java/user"
      },
      "returnType": "ResponseEntity\u003cResponse\u003e",
      "methodName": "getAllUser",
      "className": "UserController",
      "packageName": "user.controller",
      "methodId": "user.controller.UserController.getAllUser",
      "classId": "user.controller.UserController",
      "line": 35,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "GetMapping"
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-user-service/src/main/java/user/controller/UserController.java",
        "directoryName": "/ts-user-service/src/main/java/user"
      },
      "parentPackageName": "user.controller",
      "parentClassName": "UserController",
      "parentMethodName": "getAllUser",
      "parentClassId": "user.controller.UserController",
      "lineNumber": 38,
      "calledMethodName": "getAllUsers",
      "calledServiceId": "userService",
      "statementDeclaration": "userService.getAllUsers(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-user-service/src/main/java/user/controller/UserController.java",
        "directoryName": "/ts-user-service/src/main/java/user"
      },
      "fieldClass": "UserService",
      "fieldVariable": "userService",
      "parentMethod": {
        "parentClassName": "UserController",
        "parentPackageName": "user.controller"
      },
      "line": 25
    },
    "msService": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/service/impl/UserServiceImpl.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "classId": "auth.service.impl.UserServiceImpl",
      "packageName": "auth.service.impl",
      "className": "UserServiceImpl",
      "role": "SERVICE"
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-user-service/src/main/java/user/controller/UserController.java",
        "directoryName": "/ts-user-service/src/main/java/user"
      },
      "classId": "user.controller.UserController",
      "packageName": "user.controller",
      "className": "UserController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-user-service/src/main/java/user/controller/UserController.java",
        "directoryName": "/ts-user-service/src/main/java/user"
      },
      "returnType": "ResponseEntity\u003cResponse\u003e",
      "methodName": "getUserByUserName",
      "className": "UserController",
      "packageName": "user.controller",
      "methodId": "user.controller.UserController.getUserByUserName",
      "classId": "user.controller.UserController",
      "line": 41,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "GetMapping"
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-user-service/src/main/java/user/controller/UserController.java",
        "directoryName": "/ts-user-service/src/main/java/user"
      },
      "parentPackageName": "user.controller",
      "parentClassName": "UserController",
      "parentMethodName": "getUserByUserName",
      "parentClassId": "user.controller.UserController",
      "lineNumber": 44,
      "calledMethodName": "findByUserName",
      "calledServiceId": "userService",
      "statementDeclaration": "userService.findByUserName(userName, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-user-service/src/main/java/user/controller/UserController.java",
        "directoryName": "/ts-user-service/src/main/java/user"
      },
      "fieldClass": "UserService",
      "fieldVariable": "userService",
      "parentMethod": {
        "parentClassName": "UserController",
        "parentPackageName": "user.controller"
      },
      "line": 25
    },
    "msService": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/service/impl/UserServiceImpl.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "classId": "auth.service.impl.UserServiceImpl",
      "packageName": "auth.service.impl",
      "className": "UserServiceImpl",
      "role": "SERVICE"
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-user-service/src/main/java/user/controller/UserController.java",
        "directoryName": "/ts-user-service/src/main/java/user"
      },
      "classId": "user.controller.UserController",
      "packageName": "user.controller",
      "className": "UserController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-user-service/src/main/java/user/controller/UserController.java",
        "directoryName": "/ts-user-service/src/main/java/user"
      },
      "returnType": "ResponseEntity\u003cResponse\u003e",
      "methodName": "getUserByUserId",
      "className": "UserController",
      "packageName": "user.controller",
      "methodId": "user.controller.UserController.getUserByUserId",
      "classId": "user.controller.UserController",
      "line": 46,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "GetMapping"
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-user-service/src/main/java/user/controller/UserController.java",
        "directoryName": "/ts-user-service/src/main/java/user"
      },
      "parentPackageName": "user.controller",
      "parentClassName": "UserController",
      "parentMethodName": "getUserByUserId",
      "parentClassId": "user.controller.UserController",
      "lineNumber": 49,
      "calledMethodName": "findByUserId",
      "calledServiceId": "userService",
      "statementDeclaration": "userService.findByUserId(userId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-user-service/src/main/java/user/controller/UserController.java",
        "directoryName": "/ts-user-service/src/main/java/user"
      },
      "fieldClass": "UserService",
      "fieldVariable": "userService",
      "parentMethod": {
        "parentClassName": "UserController",
        "parentPackageName": "user.controller"
      },
      "line": 25
    },
    "msService": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/service/impl/UserServiceImpl.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "classId": "auth.service.impl.UserServiceImpl",
      "packageName": "auth.service.impl",
      "className": "UserServiceImpl",
      "role": "SERVICE"
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-user-service/src/main/java/user/controller/UserController.java",
        "directoryName": "/ts-user-service/src/main/java/user"
      },
      "classId": "user.controller.UserController",
      "packageName": "user.controller",
      "className": "UserController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-user-service/src/main/java/user/controller/UserController.java",
        "directoryName": "/ts-user-service/src/main/java/user"
      },
      "returnType": "ResponseEntity\u003cResponse\u003e",
      "methodName": "registerUser",
      "className": "UserController",
      "packageName": "user.controller",
      "methodId": "user.controller.UserController.registerUser",
      "classId": "user.controller.UserController",
      "line": 52,
      "msArgumentList": [
        {
          "returnType": "UserDto"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "PostMapping"
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-user-service/src/main/java/user/controller/UserController.java",
        "directoryName": "/ts-user-service/src/main/java/user"
      },
      "parentPackageName": "user.controller",
      "parentClassName": "UserController",
      "parentMethodName": "registerUser",
      "parentClassId": "user.controller.UserController",
      "lineNumber": 55,
      "calledMethodName": "saveUser",
      "calledServiceId": "userService",
      "statementDeclaration": "userService.saveUser(userDto, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-user-service/src/main/java/user/controller/UserController.java",
        "directoryName": "/ts-user-service/src/main/java/user"
      },
      "fieldClass": "UserService",
      "fieldVariable": "userService",
      "parentMethod": {
        "parentClassName": "UserController",
        "parentPackageName": "user.controller"
      },
      "line": 25
    },
    "msService": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/service/impl/UserServiceImpl.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "classId": "auth.service.impl.UserServiceImpl",
      "packageName": "auth.service.impl",
      "className": "UserServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/service/impl/UserServiceImpl.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "returnType": "User",
      "methodName": "saveUser",
      "className": "UserServiceImpl",
      "packageName": "auth.service.impl",
      "methodId": "auth.service.impl.UserServiceImpl.saveUser",
      "classId": "auth.service.impl.UserServiceImpl",
      "line": 34,
      "msArgumentList": [
        {
          "returnType": "User"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": []
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-user-service/src/main/java/user/controller/UserController.java",
        "directoryName": "/ts-user-service/src/main/java/user"
      },
      "classId": "user.controller.UserController",
      "packageName": "user.controller",
      "className": "UserController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-user-service/src/main/java/user/controller/UserController.java",
        "directoryName": "/ts-user-service/src/main/java/user"
      },
      "returnType": "ResponseEntity\u003cResponse\u003e",
      "methodName": "deleteUserById",
      "className": "UserController",
      "packageName": "user.controller",
      "methodId": "user.controller.UserController.deleteUserById",
      "classId": "user.controller.UserController",
      "line": 59,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "DeleteMapping"
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-user-service/src/main/java/user/controller/UserController.java",
        "directoryName": "/ts-user-service/src/main/java/user"
      },
      "parentPackageName": "user.controller",
      "parentClassName": "UserController",
      "parentMethodName": "deleteUserById",
      "parentClassId": "user.controller.UserController",
      "lineNumber": 64,
      "calledMethodName": "deleteUser",
      "calledServiceId": "userService",
      "statementDeclaration": "userService.deleteUser(UUID.fromString(userId), headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-user-service/src/main/java/user/controller/UserController.java",
        "directoryName": "/ts-user-service/src/main/java/user"
      },
      "fieldClass": "UserService",
      "fieldVariable": "userService",
      "parentMethod": {
        "parentClassName": "UserController",
        "parentPackageName": "user.controller"
      },
      "line": 25
    },
    "msService": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/service/impl/UserServiceImpl.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "classId": "auth.service.impl.UserServiceImpl",
      "packageName": "auth.service.impl",
      "className": "UserServiceImpl",
      "role": "SERVICE"
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-user-service/src/main/java/user/controller/UserController.java",
        "directoryName": "/ts-user-service/src/main/java/user"
      },
      "classId": "user.controller.UserController",
      "packageName": "user.controller",
      "className": "UserController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-user-service/src/main/java/user/controller/UserController.java",
        "directoryName": "/ts-user-service/src/main/java/user"
      },
      "returnType": "ResponseEntity\u003cResponse\u003e",
      "methodName": "updateUser",
      "className": "UserController",
      "packageName": "user.controller",
      "methodId": "user.controller.UserController.updateUser",
      "classId": "user.controller.UserController",
      "line": 67,
      "msArgumentList": [
        {
          "returnType": "UserDto"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "PutMapping"
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-user-service/src/main/java/user/controller/UserController.java",
        "directoryName": "/ts-user-service/src/main/java/user"
      },
      "parentPackageName": "user.controller",
      "parentClassName": "UserController",
      "parentMethodName": "updateUser",
      "parentClassId": "user.controller.UserController",
      "lineNumber": 71,
      "calledMethodName": "updateUser",
      "calledServiceId": "userService",
      "statementDeclaration": "userService.updateUser(user, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-user-service/src/main/java/user/controller/UserController.java",
        "directoryName": "/ts-user-service/src/main/java/user"
      },
      "fieldClass": "UserService",
      "fieldVariable": "userService",
      "parentMethod": {
        "parentClassName": "UserController",
        "parentPackageName": "user.controller"
      },
      "line": 25
    },
    "msService": {
      "msId": {
        "path": "/ts-auth-service/src/main/java/auth/service/impl/UserServiceImpl.java",
        "directoryName": "/ts-auth-service/src/main/java/auth"
      },
      "classId": "auth.service.impl.UserServiceImpl",
      "packageName": "auth.service.impl",
      "className": "UserServiceImpl",
      "role": "SERVICE"
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-route-plan-service/src/main/java/plan/controller/RoutePlanController.java",
        "directoryName": "/ts-route-plan-service/src/main/java/plan"
      },
      "classId": "plan.controller.RoutePlanController",
      "packageName": "plan.controller",
      "className": "RoutePlanController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-route-plan-service/src/main/java/plan/controller/RoutePlanController.java",
        "directoryName": "/ts-route-plan-service/src/main/java/plan"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "RoutePlanController",
      "packageName": "plan.controller",
      "methodId": "plan.controller.RoutePlanController.home",
      "classId": "plan.controller.RoutePlanController",
      "line": 25,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-route-plan-service/src/main/java/plan/controller/RoutePlanController.java",
        "directoryName": "/ts-route-plan-service/src/main/java/plan"
      },
      "classId": "plan.controller.RoutePlanController",
      "packageName": "plan.controller",
      "className": "RoutePlanController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-route-plan-service/src/main/java/plan/controller/RoutePlanController.java",
        "directoryName": "/ts-route-plan-service/src/main/java/plan"
      },
      "returnType": "HttpEntity",
      "methodName": "getCheapestRoutes",
      "className": "RoutePlanController",
      "packageName": "plan.controller",
      "methodId": "plan.controller.RoutePlanController.getCheapestRoutes",
      "classId": "plan.controller.RoutePlanController",
      "line": 30,
      "msArgumentList": [
        {
          "returnType": "RoutePlanInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/routePlan/cheapestRoute\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-route-plan-service/src/main/java/plan/controller/RoutePlanController.java",
        "directoryName": "/ts-route-plan-service/src/main/java/plan"
      },
      "parentPackageName": "plan.controller",
      "parentClassName": "RoutePlanController",
      "parentMethodName": "getCheapestRoutes",
      "parentClassId": "plan.controller.RoutePlanController",
      "lineNumber": 33,
      "calledMethodName": "searchCheapestResult",
      "calledServiceId": "routePlanService",
      "statementDeclaration": "routePlanService.searchCheapestResult(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-route-plan-service/src/main/java/plan/controller/RoutePlanController.java",
        "directoryName": "/ts-route-plan-service/src/main/java/plan"
      },
      "fieldClass": "RoutePlanService",
      "fieldVariable": "routePlanService",
      "parentMethod": {
        "parentClassName": "RoutePlanController",
        "parentPackageName": "plan.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-route-plan-service/src/main/java/plan/service/RoutePlanServiceImpl.java",
        "directoryName": "/ts-route-plan-service/src/main/java/plan"
      },
      "classId": "plan.service.RoutePlanServiceImpl",
      "packageName": "plan.service",
      "className": "RoutePlanServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-route-plan-service/src/main/java/plan/service/RoutePlanServiceImpl.java",
        "directoryName": "/ts-route-plan-service/src/main/java/plan"
      },
      "returnType": "Response",
      "methodName": "searchCheapestResult",
      "className": "RoutePlanServiceImpl",
      "packageName": "plan.service",
      "methodId": "plan.service.RoutePlanServiceImpl.searchCheapestResult",
      "classId": "plan.service.RoutePlanServiceImpl",
      "line": 29,
      "msArgumentList": [
        {
          "returnType": "RoutePlanInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": []
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-route-plan-service/src/main/java/plan/controller/RoutePlanController.java",
        "directoryName": "/ts-route-plan-service/src/main/java/plan"
      },
      "classId": "plan.controller.RoutePlanController",
      "packageName": "plan.controller",
      "className": "RoutePlanController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-route-plan-service/src/main/java/plan/controller/RoutePlanController.java",
        "directoryName": "/ts-route-plan-service/src/main/java/plan"
      },
      "returnType": "HttpEntity",
      "methodName": "getQuickestRoutes",
      "className": "RoutePlanController",
      "packageName": "plan.controller",
      "methodId": "plan.controller.RoutePlanController.getQuickestRoutes",
      "classId": "plan.controller.RoutePlanController",
      "line": 36,
      "msArgumentList": [
        {
          "returnType": "RoutePlanInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/routePlan/quickestRoute\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-route-plan-service/src/main/java/plan/controller/RoutePlanController.java",
        "directoryName": "/ts-route-plan-service/src/main/java/plan"
      },
      "parentPackageName": "plan.controller",
      "parentClassName": "RoutePlanController",
      "parentMethodName": "getQuickestRoutes",
      "parentClassId": "plan.controller.RoutePlanController",
      "lineNumber": 39,
      "calledMethodName": "searchQuickestResult",
      "calledServiceId": "routePlanService",
      "statementDeclaration": "routePlanService.searchQuickestResult(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-route-plan-service/src/main/java/plan/controller/RoutePlanController.java",
        "directoryName": "/ts-route-plan-service/src/main/java/plan"
      },
      "fieldClass": "RoutePlanService",
      "fieldVariable": "routePlanService",
      "parentMethod": {
        "parentClassName": "RoutePlanController",
        "parentPackageName": "plan.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-route-plan-service/src/main/java/plan/service/RoutePlanServiceImpl.java",
        "directoryName": "/ts-route-plan-service/src/main/java/plan"
      },
      "classId": "plan.service.RoutePlanServiceImpl",
      "packageName": "plan.service",
      "className": "RoutePlanServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-route-plan-service/src/main/java/plan/service/RoutePlanServiceImpl.java",
        "directoryName": "/ts-route-plan-service/src/main/java/plan"
      },
      "returnType": "Response",
      "methodName": "searchQuickestResult",
      "className": "RoutePlanServiceImpl",
      "packageName": "plan.service",
      "methodId": "plan.service.RoutePlanServiceImpl.searchQuickestResult",
      "classId": "plan.service.RoutePlanServiceImpl",
      "line": 86,
      "msArgumentList": [
        {
          "returnType": "RoutePlanInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": []
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-route-plan-service/src/main/java/plan/controller/RoutePlanController.java",
        "directoryName": "/ts-route-plan-service/src/main/java/plan"
      },
      "classId": "plan.controller.RoutePlanController",
      "packageName": "plan.controller",
      "className": "RoutePlanController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-route-plan-service/src/main/java/plan/controller/RoutePlanController.java",
        "directoryName": "/ts-route-plan-service/src/main/java/plan"
      },
      "returnType": "HttpEntity",
      "methodName": "getMinStopStations",
      "className": "RoutePlanController",
      "packageName": "plan.controller",
      "methodId": "plan.controller.RoutePlanController.getMinStopStations",
      "classId": "plan.controller.RoutePlanController",
      "line": 42,
      "msArgumentList": [
        {
          "returnType": "RoutePlanInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/routePlan/minStopStations\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-route-plan-service/src/main/java/plan/controller/RoutePlanController.java",
        "directoryName": "/ts-route-plan-service/src/main/java/plan"
      },
      "parentPackageName": "plan.controller",
      "parentClassName": "RoutePlanController",
      "parentMethodName": "getMinStopStations",
      "parentClassId": "plan.controller.RoutePlanController",
      "lineNumber": 45,
      "calledMethodName": "searchMinStopStations",
      "calledServiceId": "routePlanService",
      "statementDeclaration": "routePlanService.searchMinStopStations(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-route-plan-service/src/main/java/plan/controller/RoutePlanController.java",
        "directoryName": "/ts-route-plan-service/src/main/java/plan"
      },
      "fieldClass": "RoutePlanService",
      "fieldVariable": "routePlanService",
      "parentMethod": {
        "parentClassName": "RoutePlanController",
        "parentPackageName": "plan.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-route-plan-service/src/main/java/plan/service/RoutePlanServiceImpl.java",
        "directoryName": "/ts-route-plan-service/src/main/java/plan"
      },
      "classId": "plan.service.RoutePlanServiceImpl",
      "packageName": "plan.service",
      "className": "RoutePlanServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-route-plan-service/src/main/java/plan/service/RoutePlanServiceImpl.java",
        "directoryName": "/ts-route-plan-service/src/main/java/plan"
      },
      "returnType": "Response",
      "methodName": "searchMinStopStations",
      "className": "RoutePlanServiceImpl",
      "packageName": "plan.service",
      "methodId": "plan.service.RoutePlanServiceImpl.searchMinStopStations",
      "classId": "plan.service.RoutePlanServiceImpl",
      "line": 149,
      "msArgumentList": [
        {
          "returnType": "RoutePlanInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "api": "\"http://ts-route-service:11178/api/v1/routeservice/routes/\" + fromStationId + \"/\" + toStationId",
        "httpMethod": "GET",
        "returnType": "ArrayList\u003cRoute\u003e",
        "msId": {
          "path": "/ts-route-plan-service/src/main/java/plan/service/RoutePlanServiceImpl.java",
          "directoryName": "/ts-route-plan-service/src/main/java/plan"
        },
        "parentPackageName": "plan.service",
        "parentClassName": "RoutePlanServiceImpl",
        "parentMethodName": "searchMinStopStations",
        "parentClassId": "plan.service.RoutePlanServiceImpl",
        "lineNumber": 157,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-route-service:11178/api/v1/routeservice/routes/\" + fromStationId + \"/\" + toStationId, HttpMethod.GET, requestEntity, new ParameterizedTypeReference\u003cResponse\u003cArrayList\u003cRoute\u003e\u003e\u003e() {\n})"
      },
      {
        "api": "\"http://ts-travel-service:12346/api/v1/travelservice/trips/routes\"",
        "httpMethod": "POST",
        "returnType": "ArrayList\u003cArrayList\u003cTrip\u003e\u003e",
        "msId": {
          "path": "/ts-route-plan-service/src/main/java/plan/service/RoutePlanServiceImpl.java",
          "directoryName": "/ts-route-plan-service/src/main/java/plan"
        },
        "parentPackageName": "plan.service",
        "parentClassName": "RoutePlanServiceImpl",
        "parentMethodName": "searchMinStopStations",
        "parentClassId": "plan.service.RoutePlanServiceImpl",
        "lineNumber": 192,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-travel-service:12346/api/v1/travelservice/trips/routes\", HttpMethod.POST, requestEntity, new ParameterizedTypeReference\u003cResponse\u003cArrayList\u003cArrayList\u003cTrip\u003e\u003e\u003e\u003e() {\n})"
      },
      {
        "api": "\"http://ts-travel2-service:16346/api/v1/travel2service/trips/routes\"",
        "httpMethod": "POST",
        "returnType": "ArrayList\u003cArrayList\u003cTrip\u003e\u003e",
        "msId": {
          "path": "/ts-route-plan-service/src/main/java/plan/service/RoutePlanServiceImpl.java",
          "directoryName": "/ts-route-plan-service/src/main/java/plan"
        },
        "parentPackageName": "plan.service",
        "parentClassName": "RoutePlanServiceImpl",
        "parentMethodName": "searchMinStopStations",
        "parentClassId": "plan.service.RoutePlanServiceImpl",
        "lineNumber": 202,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-travel2-service:16346/api/v1/travel2service/trips/routes\", HttpMethod.POST, requestEntity, new ParameterizedTypeReference\u003cResponse\u003cArrayList\u003cArrayList\u003cTrip\u003e\u003e\u003e\u003e() {\n})"
      },
      {
        "httpMethod": "POST",
        "returnType": "TripAllDetail",
        "msId": {
          "path": "/ts-route-plan-service/src/main/java/plan/service/RoutePlanServiceImpl.java",
          "directoryName": "/ts-route-plan-service/src/main/java/plan"
        },
        "parentPackageName": "plan.service",
        "parentClassName": "RoutePlanServiceImpl",
        "parentMethodName": "searchMinStopStations",
        "parentClassId": "plan.service.RoutePlanServiceImpl",
        "lineNumber": 240,
        "statementDeclaration": "restTemplate.exchange(requestUrl, HttpMethod.POST, requestEntity, new ParameterizedTypeReference\u003cResponse\u003cTripAllDetail\u003e\u003e() {\n})"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-ticketinfo-service/src/main/java/ticketinfo/controller/TicketInfoController.java",
        "directoryName": "/ts-ticketinfo-service/src/main/java/ticketinfo"
      },
      "classId": "ticketinfo.controller.TicketInfoController",
      "packageName": "ticketinfo.controller",
      "className": "TicketInfoController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-ticketinfo-service/src/main/java/ticketinfo/controller/TicketInfoController.java",
        "directoryName": "/ts-ticketinfo-service/src/main/java/ticketinfo"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "TicketInfoController",
      "packageName": "ticketinfo.controller",
      "methodId": "ticketinfo.controller.TicketInfoController.home",
      "classId": "ticketinfo.controller.TicketInfoController",
      "line": 27,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-ticketinfo-service/src/main/java/ticketinfo/controller/TicketInfoController.java",
        "directoryName": "/ts-ticketinfo-service/src/main/java/ticketinfo"
      },
      "classId": "ticketinfo.controller.TicketInfoController",
      "packageName": "ticketinfo.controller",
      "className": "TicketInfoController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-ticketinfo-service/src/main/java/ticketinfo/controller/TicketInfoController.java",
        "directoryName": "/ts-ticketinfo-service/src/main/java/ticketinfo"
      },
      "returnType": "HttpEntity",
      "methodName": "queryForTravel",
      "className": "TicketInfoController",
      "packageName": "ticketinfo.controller",
      "methodId": "ticketinfo.controller.TicketInfoController.queryForTravel",
      "classId": "ticketinfo.controller.TicketInfoController",
      "line": 32,
      "msArgumentList": [
        {
          "returnType": "Travel"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/ticketinfo\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-ticketinfo-service/src/main/java/ticketinfo/controller/TicketInfoController.java",
        "directoryName": "/ts-ticketinfo-service/src/main/java/ticketinfo"
      },
      "parentPackageName": "ticketinfo.controller",
      "parentClassName": "TicketInfoController",
      "parentMethodName": "queryForTravel",
      "parentClassId": "ticketinfo.controller.TicketInfoController",
      "lineNumber": 36,
      "calledMethodName": "queryForTravel",
      "calledServiceId": "service",
      "statementDeclaration": "service.queryForTravel(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-ticketinfo-service/src/main/java/ticketinfo/controller/TicketInfoController.java",
        "directoryName": "/ts-ticketinfo-service/src/main/java/ticketinfo"
      },
      "fieldClass": "TicketInfoService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "TicketInfoController",
        "parentPackageName": "ticketinfo.controller"
      },
      "line": 22
    },
    "msService": {
      "msId": {
        "path": "/ts-ticketinfo-service/src/main/java/ticketinfo/service/TicketInfoServiceImpl.java",
        "directoryName": "/ts-ticketinfo-service/src/main/java/ticketinfo"
      },
      "classId": "ticketinfo.service.TicketInfoServiceImpl",
      "packageName": "ticketinfo.service",
      "className": "TicketInfoServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-ticketinfo-service/src/main/java/ticketinfo/service/TicketInfoServiceImpl.java",
        "directoryName": "/ts-ticketinfo-service/src/main/java/ticketinfo"
      },
      "returnType": "Response",
      "methodName": "queryForTravel",
      "className": "TicketInfoServiceImpl",
      "packageName": "ticketinfo.service",
      "methodId": "ticketinfo.service.TicketInfoServiceImpl.queryForTravel",
      "classId": "ticketinfo.service.TicketInfoServiceImpl",
      "line": 22,
      "msArgumentList": [
        {
          "returnType": "Travel"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "api": "\"http://ts-basic-service:15680/api/v1/basicservice/basic/travel\"",
        "httpMethod": "POST",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-ticketinfo-service/src/main/java/ticketinfo/service/TicketInfoServiceImpl.java",
          "directoryName": "/ts-ticketinfo-service/src/main/java/ticketinfo"
        },
        "parentPackageName": "ticketinfo.service",
        "parentClassName": "TicketInfoServiceImpl",
        "parentMethodName": "queryForTravel",
        "parentClassId": "ticketinfo.service.TicketInfoServiceImpl",
        "lineNumber": 25,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-basic-service:15680/api/v1/basicservice/basic/travel\", HttpMethod.POST, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-ticketinfo-service/src/main/java/ticketinfo/controller/TicketInfoController.java",
        "directoryName": "/ts-ticketinfo-service/src/main/java/ticketinfo"
      },
      "classId": "ticketinfo.controller.TicketInfoController",
      "packageName": "ticketinfo.controller",
      "className": "TicketInfoController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-ticketinfo-service/src/main/java/ticketinfo/controller/TicketInfoController.java",
        "directoryName": "/ts-ticketinfo-service/src/main/java/ticketinfo"
      },
      "returnType": "HttpEntity",
      "methodName": "queryForStationId",
      "className": "TicketInfoController",
      "packageName": "ticketinfo.controller",
      "methodId": "ticketinfo.controller.TicketInfoController.queryForStationId",
      "classId": "ticketinfo.controller.TicketInfoController",
      "line": 39,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/ticketinfo/{name}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-ticketinfo-service/src/main/java/ticketinfo/controller/TicketInfoController.java",
        "directoryName": "/ts-ticketinfo-service/src/main/java/ticketinfo"
      },
      "parentPackageName": "ticketinfo.controller",
      "parentClassName": "TicketInfoController",
      "parentMethodName": "queryForStationId",
      "parentClassId": "ticketinfo.controller.TicketInfoController",
      "lineNumber": 43,
      "calledMethodName": "queryForStationId",
      "calledServiceId": "service",
      "statementDeclaration": "service.queryForStationId(name, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-ticketinfo-service/src/main/java/ticketinfo/controller/TicketInfoController.java",
        "directoryName": "/ts-ticketinfo-service/src/main/java/ticketinfo"
      },
      "fieldClass": "TicketInfoService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "TicketInfoController",
        "parentPackageName": "ticketinfo.controller"
      },
      "line": 22
    },
    "msService": {
      "msId": {
        "path": "/ts-ticketinfo-service/src/main/java/ticketinfo/service/TicketInfoServiceImpl.java",
        "directoryName": "/ts-ticketinfo-service/src/main/java/ticketinfo"
      },
      "classId": "ticketinfo.service.TicketInfoServiceImpl",
      "packageName": "ticketinfo.service",
      "className": "TicketInfoServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-ticketinfo-service/src/main/java/ticketinfo/service/TicketInfoServiceImpl.java",
        "directoryName": "/ts-ticketinfo-service/src/main/java/ticketinfo"
      },
      "returnType": "Response",
      "methodName": "queryForStationId",
      "className": "TicketInfoServiceImpl",
      "packageName": "ticketinfo.service",
      "methodId": "ticketinfo.service.TicketInfoServiceImpl.queryForStationId",
      "classId": "ticketinfo.service.TicketInfoServiceImpl",
      "line": 33,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "api": "\"http://ts-basic-service:15680/api/v1/basicservice/basic/\" + name",
        "httpMethod": "GET",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-ticketinfo-service/src/main/java/ticketinfo/service/TicketInfoServiceImpl.java",
          "directoryName": "/ts-ticketinfo-service/src/main/java/ticketinfo"
        },
        "parentPackageName": "ticketinfo.service",
        "parentClassName": "TicketInfoServiceImpl",
        "parentMethodName": "queryForStationId",
        "parentClassId": "ticketinfo.service.TicketInfoServiceImpl",
        "lineNumber": 36,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-basic-service:15680/api/v1/basicservice/basic/\" + name, HttpMethod.GET, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/controller/PaymentController.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "classId": "com.trainticket.controller.PaymentController",
      "packageName": "com.trainticket.controller",
      "className": "PaymentController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/controller/PaymentController.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "PaymentController",
      "packageName": "com.trainticket.controller",
      "methodId": "com.trainticket.controller.PaymentController.home",
      "classId": "com.trainticket.controller.PaymentController",
      "line": 27,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/controller/PaymentController.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "classId": "com.trainticket.controller.PaymentController",
      "packageName": "com.trainticket.controller",
      "className": "PaymentController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/controller/PaymentController.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "returnType": "HttpEntity",
      "methodName": "pay",
      "className": "PaymentController",
      "packageName": "com.trainticket.controller",
      "methodId": "com.trainticket.controller.PaymentController.pay",
      "classId": "com.trainticket.controller.PaymentController",
      "line": 32,
      "msArgumentList": [
        {
          "returnType": "Payment"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "path",
          "value": "\"/payment\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/controller/PaymentController.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "parentPackageName": "com.trainticket.controller",
      "parentClassName": "PaymentController",
      "parentMethodName": "pay",
      "parentClassId": "com.trainticket.controller.PaymentController",
      "lineNumber": 35,
      "calledMethodName": "pay",
      "calledServiceId": "service",
      "statementDeclaration": "service.pay(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/controller/PaymentController.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "fieldClass": "PaymentService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "PaymentController",
        "parentPackageName": "com.trainticket.controller"
      },
      "line": 22
    },
    "msService": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/service/PaymentServiceImpl.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "classId": "com.trainticket.service.PaymentServiceImpl",
      "packageName": "com.trainticket.service",
      "className": "PaymentServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/service/PaymentServiceImpl.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "returnType": "Response",
      "methodName": "pay",
      "className": "PaymentServiceImpl",
      "packageName": "com.trainticket.service",
      "methodId": "com.trainticket.service.PaymentServiceImpl.pay",
      "classId": "com.trainticket.service.PaymentServiceImpl",
      "line": 31,
      "msArgumentList": [
        {
          "returnType": "Payment"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/service/PaymentServiceImpl.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "parentPackageName": "com.trainticket.service",
      "parentClassName": "PaymentServiceImpl",
      "parentMethodName": "pay",
      "parentClassId": "com.trainticket.service.PaymentServiceImpl",
      "lineNumber": 34,
      "calledMethodName": "findByOrderId",
      "calledServiceId": "paymentRepository",
      "statementDeclaration": "paymentRepository.findByOrderId(info.getOrderId())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/service/PaymentServiceImpl.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "fieldClass": "PaymentRepository",
      "fieldVariable": "paymentRepository",
      "parentMethod": {
        "parentClassName": "PaymentServiceImpl",
        "parentPackageName": "com.trainticket.service"
      },
      "line": 23
    },
    "msRepository": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/repository/PaymentRepository.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "classId": "com.trainticket.repository.PaymentRepository",
      "packageName": "com.trainticket.repository",
      "className": "PaymentRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/repository/PaymentRepository.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "returnType": "Payment",
      "methodName": "findByOrderId",
      "className": "PaymentRepository",
      "packageName": "com.trainticket.repository",
      "methodId": "com.trainticket.repository.PaymentRepository.findByOrderId",
      "classId": "com.trainticket.repository.PaymentRepository",
      "line": 15,
      "msArgumentList": [
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/controller/PaymentController.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "classId": "com.trainticket.controller.PaymentController",
      "packageName": "com.trainticket.controller",
      "className": "PaymentController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/controller/PaymentController.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "returnType": "HttpEntity",
      "methodName": "addMoney",
      "className": "PaymentController",
      "packageName": "com.trainticket.controller",
      "methodId": "com.trainticket.controller.PaymentController.addMoney",
      "classId": "com.trainticket.controller.PaymentController",
      "line": 38,
      "msArgumentList": [
        {
          "returnType": "Payment"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "path",
          "value": "\"/payment/money\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/controller/PaymentController.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "parentPackageName": "com.trainticket.controller",
      "parentClassName": "PaymentController",
      "parentMethodName": "addMoney",
      "parentClassId": "com.trainticket.controller.PaymentController",
      "lineNumber": 41,
      "calledMethodName": "addMoney",
      "calledServiceId": "service",
      "statementDeclaration": "service.addMoney(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/controller/PaymentController.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "fieldClass": "PaymentService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "PaymentController",
        "parentPackageName": "com.trainticket.controller"
      },
      "line": 22
    },
    "msService": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/service/PaymentServiceImpl.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "classId": "com.trainticket.service.PaymentServiceImpl",
      "packageName": "com.trainticket.service",
      "className": "PaymentServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/service/PaymentServiceImpl.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "returnType": "Response",
      "methodName": "addMoney",
      "className": "PaymentServiceImpl",
      "packageName": "com.trainticket.service",
      "methodId": "com.trainticket.service.PaymentServiceImpl.addMoney",
      "classId": "com.trainticket.service.PaymentServiceImpl",
      "line": 47,
      "msArgumentList": [
        {
          "returnType": "Payment"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/service/PaymentServiceImpl.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "parentPackageName": "com.trainticket.service",
      "parentClassName": "PaymentServiceImpl",
      "parentMethodName": "addMoney",
      "parentClassId": "com.trainticket.service.PaymentServiceImpl",
      "lineNumber": 52,
      "calledMethodName": "save",
      "calledServiceId": "addMoneyRepository",
      "statementDeclaration": "addMoneyRepository.save(addMoney)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/service/PaymentServiceImpl.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "fieldClass": "AddMoneyRepository",
      "fieldVariable": "addMoneyRepository",
      "parentMethod": {
        "parentClassName": "PaymentServiceImpl",
        "parentPackageName": "com.trainticket.service"
      },
      "line": 26
    },
    "msRepository": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/repository/AddMoneyRepository.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "classId": "com.trainticket.repository.AddMoneyRepository",
      "packageName": "com.trainticket.repository",
      "className": "AddMoneyRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": []
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/controller/PaymentController.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "classId": "com.trainticket.controller.PaymentController",
      "packageName": "com.trainticket.controller",
      "className": "PaymentController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/controller/PaymentController.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "returnType": "HttpEntity",
      "methodName": "query",
      "className": "PaymentController",
      "packageName": "com.trainticket.controller",
      "methodId": "com.trainticket.controller.PaymentController.query",
      "classId": "com.trainticket.controller.PaymentController",
      "line": 44,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/payment\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/controller/PaymentController.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "parentPackageName": "com.trainticket.controller",
      "parentClassName": "PaymentController",
      "parentMethodName": "query",
      "parentClassId": "com.trainticket.controller.PaymentController",
      "lineNumber": 47,
      "calledMethodName": "query",
      "calledServiceId": "service",
      "statementDeclaration": "service.query(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/controller/PaymentController.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "fieldClass": "PaymentService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "PaymentController",
        "parentPackageName": "com.trainticket.controller"
      },
      "line": 22
    },
    "msService": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/service/PaymentServiceImpl.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "classId": "com.trainticket.service.PaymentServiceImpl",
      "packageName": "com.trainticket.service",
      "className": "PaymentServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/service/PaymentServiceImpl.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "returnType": "Response",
      "methodName": "query",
      "className": "PaymentServiceImpl",
      "packageName": "com.trainticket.service",
      "methodId": "com.trainticket.service.PaymentServiceImpl.query",
      "classId": "com.trainticket.service.PaymentServiceImpl",
      "line": 56,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/service/PaymentServiceImpl.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "parentPackageName": "com.trainticket.service",
      "parentClassName": "PaymentServiceImpl",
      "parentMethodName": "query",
      "parentClassId": "com.trainticket.service.PaymentServiceImpl",
      "lineNumber": 58,
      "calledMethodName": "findAll",
      "calledServiceId": "paymentRepository",
      "statementDeclaration": "paymentRepository.findAll()"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/service/PaymentServiceImpl.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "fieldClass": "PaymentRepository",
      "fieldVariable": "paymentRepository",
      "parentMethod": {
        "parentClassName": "PaymentServiceImpl",
        "parentPackageName": "com.trainticket.service"
      },
      "line": 23
    },
    "msRepository": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/repository/PaymentRepository.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "classId": "com.trainticket.repository.PaymentRepository",
      "packageName": "com.trainticket.repository",
      "className": "PaymentRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/repository/PaymentRepository.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "returnType": "List\u003cPayment\u003e",
      "methodName": "findAll",
      "className": "PaymentRepository",
      "packageName": "com.trainticket.repository",
      "methodId": "com.trainticket.repository.PaymentRepository.findAll",
      "classId": "com.trainticket.repository.PaymentRepository",
      "line": 17,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "classId": "inside_payment.controller.InsidePaymentController",
      "packageName": "inside_payment.controller",
      "className": "InsidePaymentController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "InsidePaymentController",
      "packageName": "inside_payment.controller",
      "methodId": "inside_payment.controller.InsidePaymentController.home",
      "classId": "inside_payment.controller.InsidePaymentController",
      "line": 26,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "classId": "inside_payment.controller.InsidePaymentController",
      "packageName": "inside_payment.controller",
      "className": "InsidePaymentController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "returnType": "HttpEntity",
      "methodName": "pay",
      "className": "InsidePaymentController",
      "packageName": "inside_payment.controller",
      "methodId": "inside_payment.controller.InsidePaymentController.pay",
      "classId": "inside_payment.controller.InsidePaymentController",
      "line": 31,
      "msArgumentList": [
        {
          "returnType": "PaymentInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/inside_payment\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "parentPackageName": "inside_payment.controller",
      "parentClassName": "InsidePaymentController",
      "parentMethodName": "pay",
      "parentClassId": "inside_payment.controller.InsidePaymentController",
      "lineNumber": 34,
      "calledMethodName": "pay",
      "calledServiceId": "service",
      "statementDeclaration": "service.pay(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "fieldClass": "InsidePaymentService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "InsidePaymentController",
        "parentPackageName": "inside_payment.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "classId": "inside_payment.service.InsidePaymentServiceImpl",
      "packageName": "inside_payment.service",
      "className": "InsidePaymentServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "returnType": "Response",
      "methodName": "pay",
      "className": "InsidePaymentServiceImpl",
      "packageName": "inside_payment.service",
      "methodId": "inside_payment.service.InsidePaymentServiceImpl.pay",
      "classId": "inside_payment.service.InsidePaymentServiceImpl",
      "line": 38,
      "msArgumentList": [
        {
          "returnType": "PaymentInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "parentPackageName": "inside_payment.service",
      "parentClassName": "InsidePaymentServiceImpl",
      "parentMethodName": "pay",
      "parentClassId": "inside_payment.service.InsidePaymentServiceImpl",
      "lineNumber": 72,
      "calledMethodName": "findByUserId",
      "calledServiceId": "paymentRepository",
      "statementDeclaration": "paymentRepository.findByUserId(userId)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "fieldClass": "PaymentRepository",
      "fieldVariable": "paymentRepository",
      "parentMethod": {
        "parentClassName": "InsidePaymentServiceImpl",
        "parentPackageName": "inside_payment.service"
      },
      "line": 30
    },
    "msRepository": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/repository/PaymentRepository.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "classId": "com.trainticket.repository.PaymentRepository",
      "packageName": "com.trainticket.repository",
      "className": "PaymentRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [
      {
        "httpMethod": "GET",
        "returnType": "Order",
        "msId": {
          "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
          "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
        },
        "parentPackageName": "inside_payment.service",
        "parentClassName": "InsidePaymentServiceImpl",
        "parentMethodName": "pay",
        "parentClassId": "inside_payment.service.InsidePaymentServiceImpl",
        "lineNumber": 50,
        "statementDeclaration": "restTemplate.exchange(requestOrderURL, HttpMethod.GET, requestGetOrderResults, new ParameterizedTypeReference\u003cResponse\u003cOrder\u003e\u003e() {\n})"
      },
      {
        "api": "\"http://ts-payment-service:19001/api/v1/paymentservice/payment\"",
        "httpMethod": "POST",
        "returnType": "requestEntityOutsidePaySuccess",
        "msId": {
          "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
          "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
        },
        "parentPackageName": "inside_payment.service",
        "parentClassName": "InsidePaymentServiceImpl",
        "parentMethodName": "pay",
        "parentClassId": "inside_payment.service.InsidePaymentServiceImpl",
        "lineNumber": 100,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-payment-service:19001/api/v1/paymentservice/payment\", HttpMethod.POST, requestEntityOutsidePaySuccess, Response.class)"
      }
    ],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/repository/PaymentRepository.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "returnType": "List\u003cPayment\u003e",
      "methodName": "findByUserId",
      "className": "PaymentRepository",
      "packageName": "com.trainticket.repository",
      "methodId": "com.trainticket.repository.PaymentRepository.findByUserId",
      "classId": "com.trainticket.repository.PaymentRepository",
      "line": 20,
      "msArgumentList": [
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "classId": "inside_payment.controller.InsidePaymentController",
      "packageName": "inside_payment.controller",
      "className": "InsidePaymentController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "returnType": "HttpEntity",
      "methodName": "createAccount",
      "className": "InsidePaymentController",
      "packageName": "inside_payment.controller",
      "methodId": "inside_payment.controller.InsidePaymentController.createAccount",
      "classId": "inside_payment.controller.InsidePaymentController",
      "line": 37,
      "msArgumentList": [
        {
          "returnType": "AccountInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/inside_payment/account\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "parentPackageName": "inside_payment.controller",
      "parentClassName": "InsidePaymentController",
      "parentMethodName": "createAccount",
      "parentClassId": "inside_payment.controller.InsidePaymentController",
      "lineNumber": 40,
      "calledMethodName": "createAccount",
      "calledServiceId": "service",
      "statementDeclaration": "service.createAccount(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "fieldClass": "InsidePaymentService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "InsidePaymentController",
        "parentPackageName": "inside_payment.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "classId": "inside_payment.service.InsidePaymentServiceImpl",
      "packageName": "inside_payment.service",
      "className": "InsidePaymentServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "returnType": "Response",
      "methodName": "createAccount",
      "className": "InsidePaymentServiceImpl",
      "packageName": "inside_payment.service",
      "methodId": "inside_payment.service.InsidePaymentServiceImpl.createAccount",
      "classId": "inside_payment.service.InsidePaymentServiceImpl",
      "line": 131,
      "msArgumentList": [
        {
          "returnType": "AccountInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "parentPackageName": "inside_payment.service",
      "parentClassName": "InsidePaymentServiceImpl",
      "parentMethodName": "createAccount",
      "parentClassId": "inside_payment.service.InsidePaymentServiceImpl",
      "lineNumber": 133,
      "calledMethodName": "findByUserId",
      "calledServiceId": "addMoneyRepository",
      "statementDeclaration": "addMoneyRepository.findByUserId(info.getUserId())"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "fieldClass": "AddMoneyRepository",
      "fieldVariable": "addMoneyRepository",
      "parentMethod": {
        "parentClassName": "InsidePaymentServiceImpl",
        "parentPackageName": "inside_payment.service"
      },
      "line": 27
    },
    "msRepository": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/repository/AddMoneyRepository.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "classId": "com.trainticket.repository.AddMoneyRepository",
      "packageName": "com.trainticket.repository",
      "className": "AddMoneyRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": []
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "classId": "inside_payment.controller.InsidePaymentController",
      "packageName": "inside_payment.controller",
      "className": "InsidePaymentController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "returnType": "HttpEntity",
      "methodName": "addMoney",
      "className": "InsidePaymentController",
      "packageName": "inside_payment.controller",
      "methodId": "inside_payment.controller.InsidePaymentController.addMoney",
      "classId": "inside_payment.controller.InsidePaymentController",
      "line": 43,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/inside_payment/{userId}/{money}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "parentPackageName": "inside_payment.controller",
      "parentClassName": "InsidePaymentController",
      "parentMethodName": "addMoney",
      "parentClassId": "inside_payment.controller.InsidePaymentController",
      "lineNumber": 47,
      "calledMethodName": "addMoney",
      "calledServiceId": "service",
      "statementDeclaration": "service.addMoney(userId, money, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "fieldClass": "InsidePaymentService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "InsidePaymentController",
        "parentPackageName": "inside_payment.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "classId": "inside_payment.service.InsidePaymentServiceImpl",
      "packageName": "inside_payment.service",
      "className": "InsidePaymentServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "returnType": "Response",
      "methodName": "addMoney",
      "className": "InsidePaymentServiceImpl",
      "packageName": "inside_payment.service",
      "methodId": "inside_payment.service.InsidePaymentServiceImpl.addMoney",
      "classId": "inside_payment.service.InsidePaymentServiceImpl",
      "line": 147,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "parentPackageName": "inside_payment.service",
      "parentClassName": "InsidePaymentServiceImpl",
      "parentMethodName": "addMoney",
      "parentClassId": "inside_payment.service.InsidePaymentServiceImpl",
      "lineNumber": 149,
      "calledMethodName": "findByUserId",
      "calledServiceId": "addMoneyRepository",
      "statementDeclaration": "addMoneyRepository.findByUserId(userId)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "fieldClass": "AddMoneyRepository",
      "fieldVariable": "addMoneyRepository",
      "parentMethod": {
        "parentClassName": "InsidePaymentServiceImpl",
        "parentPackageName": "inside_payment.service"
      },
      "line": 27
    },
    "msRepository": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/repository/AddMoneyRepository.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "classId": "com.trainticket.repository.AddMoneyRepository",
      "packageName": "com.trainticket.repository",
      "className": "AddMoneyRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": []
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "classId": "inside_payment.controller.InsidePaymentController",
      "packageName": "inside_payment.controller",
      "className": "InsidePaymentController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "returnType": "HttpEntity",
      "methodName": "queryPayment",
      "className": "InsidePaymentController",
      "packageName": "inside_payment.controller",
      "methodId": "inside_payment.controller.InsidePaymentController.queryPayment",
      "classId": "inside_payment.controller.InsidePaymentController",
      "line": 50,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/inside_payment/payment\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "parentPackageName": "inside_payment.controller",
      "parentClassName": "InsidePaymentController",
      "parentMethodName": "queryPayment",
      "parentClassId": "inside_payment.controller.InsidePaymentController",
      "lineNumber": 53,
      "calledMethodName": "queryPayment",
      "calledServiceId": "service",
      "statementDeclaration": "service.queryPayment(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "fieldClass": "InsidePaymentService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "InsidePaymentController",
        "parentPackageName": "inside_payment.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "classId": "inside_payment.service.InsidePaymentServiceImpl",
      "packageName": "inside_payment.service",
      "className": "InsidePaymentServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "returnType": "Response",
      "methodName": "queryPayment",
      "className": "InsidePaymentServiceImpl",
      "packageName": "inside_payment.service",
      "methodId": "inside_payment.service.InsidePaymentServiceImpl.queryPayment",
      "classId": "inside_payment.service.InsidePaymentServiceImpl",
      "line": 223,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "parentPackageName": "inside_payment.service",
      "parentClassName": "InsidePaymentServiceImpl",
      "parentMethodName": "queryPayment",
      "parentClassId": "inside_payment.service.InsidePaymentServiceImpl",
      "lineNumber": 225,
      "calledMethodName": "findAll",
      "calledServiceId": "paymentRepository",
      "statementDeclaration": "paymentRepository.findAll()"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "fieldClass": "PaymentRepository",
      "fieldVariable": "paymentRepository",
      "parentMethod": {
        "parentClassName": "InsidePaymentServiceImpl",
        "parentPackageName": "inside_payment.service"
      },
      "line": 30
    },
    "msRepository": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/repository/PaymentRepository.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "classId": "com.trainticket.repository.PaymentRepository",
      "packageName": "com.trainticket.repository",
      "className": "PaymentRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/repository/PaymentRepository.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "returnType": "List\u003cPayment\u003e",
      "methodName": "findAll",
      "className": "PaymentRepository",
      "packageName": "com.trainticket.repository",
      "methodId": "com.trainticket.repository.PaymentRepository.findAll",
      "classId": "com.trainticket.repository.PaymentRepository",
      "line": 17,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "classId": "inside_payment.controller.InsidePaymentController",
      "packageName": "inside_payment.controller",
      "className": "InsidePaymentController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "returnType": "HttpEntity",
      "methodName": "queryAccount",
      "className": "InsidePaymentController",
      "packageName": "inside_payment.controller",
      "methodId": "inside_payment.controller.InsidePaymentController.queryAccount",
      "classId": "inside_payment.controller.InsidePaymentController",
      "line": 56,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/inside_payment/account\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "parentPackageName": "inside_payment.controller",
      "parentClassName": "InsidePaymentController",
      "parentMethodName": "queryAccount",
      "parentClassId": "inside_payment.controller.InsidePaymentController",
      "lineNumber": 59,
      "calledMethodName": "queryAccount",
      "calledServiceId": "service",
      "statementDeclaration": "service.queryAccount(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "fieldClass": "InsidePaymentService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "InsidePaymentController",
        "parentPackageName": "inside_payment.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "classId": "inside_payment.service.InsidePaymentServiceImpl",
      "packageName": "inside_payment.service",
      "className": "InsidePaymentServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "returnType": "Response",
      "methodName": "queryAccount",
      "className": "InsidePaymentServiceImpl",
      "packageName": "inside_payment.service",
      "methodId": "inside_payment.service.InsidePaymentServiceImpl.queryAccount",
      "classId": "inside_payment.service.InsidePaymentServiceImpl",
      "line": 162,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "parentPackageName": "inside_payment.service",
      "parentClassName": "InsidePaymentServiceImpl",
      "parentMethodName": "queryAccount",
      "parentClassId": "inside_payment.service.InsidePaymentServiceImpl",
      "lineNumber": 165,
      "calledMethodName": "findAll",
      "calledServiceId": "addMoneyRepository",
      "statementDeclaration": "addMoneyRepository.findAll()"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "fieldClass": "AddMoneyRepository",
      "fieldVariable": "addMoneyRepository",
      "parentMethod": {
        "parentClassName": "InsidePaymentServiceImpl",
        "parentPackageName": "inside_payment.service"
      },
      "line": 27
    },
    "msRepository": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/repository/AddMoneyRepository.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "classId": "com.trainticket.repository.AddMoneyRepository",
      "packageName": "com.trainticket.repository",
      "className": "AddMoneyRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": []
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "classId": "inside_payment.controller.InsidePaymentController",
      "packageName": "inside_payment.controller",
      "className": "InsidePaymentController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "returnType": "HttpEntity",
      "methodName": "drawBack",
      "className": "InsidePaymentController",
      "packageName": "inside_payment.controller",
      "methodId": "inside_payment.controller.InsidePaymentController.drawBack",
      "classId": "inside_payment.controller.InsidePaymentController",
      "line": 62,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/inside_payment/drawback/{userId}/{money}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "parentPackageName": "inside_payment.controller",
      "parentClassName": "InsidePaymentController",
      "parentMethodName": "drawBack",
      "parentClassId": "inside_payment.controller.InsidePaymentController",
      "lineNumber": 65,
      "calledMethodName": "drawBack",
      "calledServiceId": "service",
      "statementDeclaration": "service.drawBack(userId, money, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "fieldClass": "InsidePaymentService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "InsidePaymentController",
        "parentPackageName": "inside_payment.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "classId": "inside_payment.service.InsidePaymentServiceImpl",
      "packageName": "inside_payment.service",
      "className": "InsidePaymentServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "returnType": "Response",
      "methodName": "drawBack",
      "className": "InsidePaymentServiceImpl",
      "packageName": "inside_payment.service",
      "methodId": "inside_payment.service.InsidePaymentServiceImpl.drawBack",
      "classId": "inside_payment.service.InsidePaymentServiceImpl",
      "line": 234,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "parentPackageName": "inside_payment.service",
      "parentClassName": "InsidePaymentServiceImpl",
      "parentMethodName": "drawBack",
      "parentClassId": "inside_payment.service.InsidePaymentServiceImpl",
      "lineNumber": 236,
      "calledMethodName": "findByUserId",
      "calledServiceId": "addMoneyRepository",
      "statementDeclaration": "addMoneyRepository.findByUserId(userId)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "fieldClass": "AddMoneyRepository",
      "fieldVariable": "addMoneyRepository",
      "parentMethod": {
        "parentClassName": "InsidePaymentServiceImpl",
        "parentPackageName": "inside_payment.service"
      },
      "line": 27
    },
    "msRepository": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/repository/AddMoneyRepository.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "classId": "com.trainticket.repository.AddMoneyRepository",
      "packageName": "com.trainticket.repository",
      "className": "AddMoneyRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": []
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "classId": "inside_payment.controller.InsidePaymentController",
      "packageName": "inside_payment.controller",
      "className": "InsidePaymentController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "returnType": "HttpEntity",
      "methodName": "payDifference",
      "className": "InsidePaymentController",
      "packageName": "inside_payment.controller",
      "methodId": "inside_payment.controller.InsidePaymentController.payDifference",
      "classId": "inside_payment.controller.InsidePaymentController",
      "line": 68,
      "msArgumentList": [
        {
          "returnType": "PaymentInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/inside_payment/difference\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "parentPackageName": "inside_payment.controller",
      "parentClassName": "InsidePaymentController",
      "parentMethodName": "payDifference",
      "parentClassId": "inside_payment.controller.InsidePaymentController",
      "lineNumber": 71,
      "calledMethodName": "payDifference",
      "calledServiceId": "service",
      "statementDeclaration": "service.payDifference(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "fieldClass": "InsidePaymentService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "InsidePaymentController",
        "parentPackageName": "inside_payment.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "classId": "inside_payment.service.InsidePaymentServiceImpl",
      "packageName": "inside_payment.service",
      "className": "InsidePaymentServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "returnType": "Response",
      "methodName": "payDifference",
      "className": "InsidePaymentServiceImpl",
      "packageName": "inside_payment.service",
      "methodId": "inside_payment.service.InsidePaymentServiceImpl.payDifference",
      "classId": "inside_payment.service.InsidePaymentServiceImpl",
      "line": 249,
      "msArgumentList": [
        {
          "returnType": "PaymentInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "parentPackageName": "inside_payment.service",
      "parentClassName": "InsidePaymentServiceImpl",
      "parentMethodName": "payDifference",
      "parentClassId": "inside_payment.service.InsidePaymentServiceImpl",
      "lineNumber": 260,
      "calledMethodName": "findByUserId",
      "calledServiceId": "paymentRepository",
      "statementDeclaration": "paymentRepository.findByUserId(userId)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "fieldClass": "PaymentRepository",
      "fieldVariable": "paymentRepository",
      "parentMethod": {
        "parentClassName": "InsidePaymentServiceImpl",
        "parentPackageName": "inside_payment.service"
      },
      "line": 30
    },
    "msRepository": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/repository/PaymentRepository.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "classId": "com.trainticket.repository.PaymentRepository",
      "packageName": "com.trainticket.repository",
      "className": "PaymentRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [
      {
        "api": "\"http://ts-payment-service:19001/api/v1/paymentservice/payment\"",
        "httpMethod": "POST",
        "returnType": "requestEntityOutsidePaySuccess",
        "msId": {
          "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
          "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
        },
        "parentPackageName": "inside_payment.service",
        "parentClassName": "InsidePaymentServiceImpl",
        "parentMethodName": "payDifference",
        "parentClassId": "inside_payment.service.InsidePaymentServiceImpl",
        "lineNumber": 286,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-payment-service:19001/api/v1/paymentservice/payment\", HttpMethod.POST, requestEntityOutsidePaySuccess, Response.class)"
      }
    ],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/repository/PaymentRepository.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "returnType": "List\u003cPayment\u003e",
      "methodName": "findByUserId",
      "className": "PaymentRepository",
      "packageName": "com.trainticket.repository",
      "methodId": "com.trainticket.repository.PaymentRepository.findByUserId",
      "classId": "com.trainticket.repository.PaymentRepository",
      "line": 20,
      "msArgumentList": [
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "classId": "inside_payment.controller.InsidePaymentController",
      "packageName": "inside_payment.controller",
      "className": "InsidePaymentController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "returnType": "HttpEntity",
      "methodName": "queryAddMoney",
      "className": "InsidePaymentController",
      "packageName": "inside_payment.controller",
      "methodId": "inside_payment.controller.InsidePaymentController.queryAddMoney",
      "classId": "inside_payment.controller.InsidePaymentController",
      "line": 74,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/inside_payment/money\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "parentPackageName": "inside_payment.controller",
      "parentClassName": "InsidePaymentController",
      "parentMethodName": "queryAddMoney",
      "parentClassId": "inside_payment.controller.InsidePaymentController",
      "lineNumber": 77,
      "calledMethodName": "queryAddMoney",
      "calledServiceId": "service",
      "statementDeclaration": "service.queryAddMoney(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/controller/InsidePaymentController.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "fieldClass": "InsidePaymentService",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "InsidePaymentController",
        "parentPackageName": "inside_payment.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "classId": "inside_payment.service.InsidePaymentServiceImpl",
      "packageName": "inside_payment.service",
      "className": "InsidePaymentServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "returnType": "Response",
      "methodName": "queryAddMoney",
      "className": "InsidePaymentServiceImpl",
      "packageName": "inside_payment.service",
      "methodId": "inside_payment.service.InsidePaymentServiceImpl.queryAddMoney",
      "classId": "inside_payment.service.InsidePaymentServiceImpl",
      "line": 308,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "parentPackageName": "inside_payment.service",
      "parentClassName": "InsidePaymentServiceImpl",
      "parentMethodName": "queryAddMoney",
      "parentClassId": "inside_payment.service.InsidePaymentServiceImpl",
      "lineNumber": 310,
      "calledMethodName": "findAll",
      "calledServiceId": "addMoneyRepository",
      "statementDeclaration": "addMoneyRepository.findAll()"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-inside-payment-service/src/main/java/inside_payment/service/InsidePaymentServiceImpl.java",
        "directoryName": "/ts-inside-payment-service/src/main/java/inside_payment"
      },
      "fieldClass": "AddMoneyRepository",
      "fieldVariable": "addMoneyRepository",
      "parentMethod": {
        "parentClassName": "InsidePaymentServiceImpl",
        "parentPackageName": "inside_payment.service"
      },
      "line": 27
    },
    "msRepository": {
      "msId": {
        "path": "/ts-payment-service/src/main/java/com/trainticket/repository/AddMoneyRepository.java",
        "directoryName": "/ts-payment-service/src/main/java/com"
      },
      "classId": "com.trainticket.repository.AddMoneyRepository",
      "packageName": "com.trainticket.repository",
      "className": "AddMoneyRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": []
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-seat-service/src/main/java/seat/controller/SeatController.java",
        "directoryName": "/ts-seat-service/src/main/java/seat"
      },
      "classId": "seat.controller.SeatController",
      "packageName": "seat.controller",
      "className": "SeatController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-seat-service/src/main/java/seat/controller/SeatController.java",
        "directoryName": "/ts-seat-service/src/main/java/seat"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "SeatController",
      "packageName": "seat.controller",
      "methodId": "seat.controller.SeatController.home",
      "classId": "seat.controller.SeatController",
      "line": 26,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-seat-service/src/main/java/seat/controller/SeatController.java",
        "directoryName": "/ts-seat-service/src/main/java/seat"
      },
      "classId": "seat.controller.SeatController",
      "packageName": "seat.controller",
      "className": "SeatController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-seat-service/src/main/java/seat/controller/SeatController.java",
        "directoryName": "/ts-seat-service/src/main/java/seat"
      },
      "returnType": "HttpEntity",
      "methodName": "create",
      "className": "SeatController",
      "packageName": "seat.controller",
      "methodId": "seat.controller.SeatController.create",
      "classId": "seat.controller.SeatController",
      "line": 38,
      "msArgumentList": [
        {
          "returnType": "Seat"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/seats\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-seat-service/src/main/java/seat/controller/SeatController.java",
        "directoryName": "/ts-seat-service/src/main/java/seat"
      },
      "parentPackageName": "seat.controller",
      "parentClassName": "SeatController",
      "parentMethodName": "create",
      "parentClassId": "seat.controller.SeatController",
      "lineNumber": 42,
      "calledMethodName": "distributeSeat",
      "calledServiceId": "seatService",
      "statementDeclaration": "seatService.distributeSeat(seatRequest, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-seat-service/src/main/java/seat/controller/SeatController.java",
        "directoryName": "/ts-seat-service/src/main/java/seat"
      },
      "fieldClass": "SeatService",
      "fieldVariable": "seatService",
      "parentMethod": {
        "parentClassName": "SeatController",
        "parentPackageName": "seat.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-seat-service/src/main/java/seat/service/SeatServiceImpl.java",
        "directoryName": "/ts-seat-service/src/main/java/seat"
      },
      "classId": "seat.service.SeatServiceImpl",
      "packageName": "seat.service",
      "className": "SeatServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-seat-service/src/main/java/seat/service/SeatServiceImpl.java",
        "directoryName": "/ts-seat-service/src/main/java/seat"
      },
      "returnType": "Response",
      "methodName": "distributeSeat",
      "className": "SeatServiceImpl",
      "packageName": "seat.service",
      "methodId": "seat.service.SeatServiceImpl.distributeSeat",
      "classId": "seat.service.SeatServiceImpl",
      "line": 30,
      "msArgumentList": [
        {
          "returnType": "Seat"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "api": "\"http://ts-travel2-service:16346/api/v1/travel2service/routes/\" + seatRequest.getTrainNumber()",
        "httpMethod": "GET",
        "returnType": "Route",
        "msId": {
          "path": "/ts-seat-service/src/main/java/seat/service/SeatServiceImpl.java",
          "directoryName": "/ts-seat-service/src/main/java/seat"
        },
        "parentPackageName": "seat.service",
        "parentClassName": "SeatServiceImpl",
        "parentMethodName": "distributeSeat",
        "parentClassId": "seat.service.SeatServiceImpl",
        "lineNumber": 84,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-travel2-service:16346/api/v1/travel2service/routes/\" + seatRequest.getTrainNumber(), HttpMethod.GET, requestEntity, new ParameterizedTypeReference\u003cResponse\u003cRoute\u003e\u003e() {\n})"
      },
      {
        "api": "\"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther/tickets\"",
        "httpMethod": "POST",
        "returnType": "LeftTicketInfo",
        "msId": {
          "path": "/ts-seat-service/src/main/java/seat/service/SeatServiceImpl.java",
          "directoryName": "/ts-seat-service/src/main/java/seat"
        },
        "parentPackageName": "seat.service",
        "parentClassName": "SeatServiceImpl",
        "parentMethodName": "distributeSeat",
        "parentClassId": "seat.service.SeatServiceImpl",
        "lineNumber": 95,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther/tickets\", HttpMethod.POST, requestEntity, new ParameterizedTypeReference\u003cResponse\u003cLeftTicketInfo\u003e\u003e() {\n})"
      },
      {
        "api": "\"http://ts-travel2-service:16346/api/v1/travel2service/train_types/\" + seatRequest.getTrainNumber()",
        "httpMethod": "GET",
        "returnType": "TrainType",
        "msId": {
          "path": "/ts-seat-service/src/main/java/seat/service/SeatServiceImpl.java",
          "directoryName": "/ts-seat-service/src/main/java/seat"
        },
        "parentPackageName": "seat.service",
        "parentClassName": "SeatServiceImpl",
        "parentMethodName": "distributeSeat",
        "parentClassId": "seat.service.SeatServiceImpl",
        "lineNumber": 106,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-travel2-service:16346/api/v1/travel2service/train_types/\" + seatRequest.getTrainNumber(), HttpMethod.GET, requestEntity, new ParameterizedTypeReference\u003cResponse\u003cTrainType\u003e\u003e() {\n})"
      },
      {
        "api": "\"http://ts-travel-service:12346/api/v1/travelservice/routes/\" + trainNumber",
        "httpMethod": "GET",
        "returnType": "Route",
        "msId": {
          "path": "/ts-seat-service/src/main/java/seat/service/SeatServiceImpl.java",
          "directoryName": "/ts-seat-service/src/main/java/seat"
        },
        "parentPackageName": "seat.service",
        "parentClassName": "SeatServiceImpl",
        "parentMethodName": "distributeSeat",
        "parentClassId": "seat.service.SeatServiceImpl",
        "lineNumber": 48,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-travel-service:12346/api/v1/travelservice/routes/\" + trainNumber, HttpMethod.GET, requestEntity, new ParameterizedTypeReference\u003cResponse\u003cRoute\u003e\u003e() {\n})"
      },
      {
        "api": "\"http://ts-order-service:12031/api/v1/orderservice/order/tickets\"",
        "httpMethod": "POST",
        "returnType": "LeftTicketInfo",
        "msId": {
          "path": "/ts-seat-service/src/main/java/seat/service/SeatServiceImpl.java",
          "directoryName": "/ts-seat-service/src/main/java/seat"
        },
        "parentPackageName": "seat.service",
        "parentClassName": "SeatServiceImpl",
        "parentMethodName": "distributeSeat",
        "parentClassId": "seat.service.SeatServiceImpl",
        "lineNumber": 59,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-order-service:12031/api/v1/orderservice/order/tickets\", HttpMethod.POST, requestEntity, new ParameterizedTypeReference\u003cResponse\u003cLeftTicketInfo\u003e\u003e() {\n})"
      },
      {
        "api": "\"http://ts-travel-service:12346/api/v1/travelservice/train_types/\" + seatRequest.getTrainNumber()",
        "httpMethod": "GET",
        "returnType": "TrainType",
        "msId": {
          "path": "/ts-seat-service/src/main/java/seat/service/SeatServiceImpl.java",
          "directoryName": "/ts-seat-service/src/main/java/seat"
        },
        "parentPackageName": "seat.service",
        "parentClassName": "SeatServiceImpl",
        "parentMethodName": "distributeSeat",
        "parentClassId": "seat.service.SeatServiceImpl",
        "lineNumber": 70,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-travel-service:12346/api/v1/travelservice/train_types/\" + seatRequest.getTrainNumber(), HttpMethod.GET, requestEntity, new ParameterizedTypeReference\u003cResponse\u003cTrainType\u003e\u003e() {\n})"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-seat-service/src/main/java/seat/controller/SeatController.java",
        "directoryName": "/ts-seat-service/src/main/java/seat"
      },
      "classId": "seat.controller.SeatController",
      "packageName": "seat.controller",
      "className": "SeatController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-seat-service/src/main/java/seat/controller/SeatController.java",
        "directoryName": "/ts-seat-service/src/main/java/seat"
      },
      "returnType": "HttpEntity",
      "methodName": "getLeftTicketOfInterval",
      "className": "SeatController",
      "packageName": "seat.controller",
      "methodId": "seat.controller.SeatController.getLeftTicketOfInterval",
      "classId": "seat.controller.SeatController",
      "line": 53,
      "msArgumentList": [
        {
          "returnType": "Seat"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/seats/left_tickets\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-seat-service/src/main/java/seat/controller/SeatController.java",
        "directoryName": "/ts-seat-service/src/main/java/seat"
      },
      "parentPackageName": "seat.controller",
      "parentClassName": "SeatController",
      "parentMethodName": "getLeftTicketOfInterval",
      "parentClassId": "seat.controller.SeatController",
      "lineNumber": 58,
      "calledMethodName": "getLeftTicketOfInterval",
      "calledServiceId": "seatService",
      "statementDeclaration": "seatService.getLeftTicketOfInterval(seatRequest, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-seat-service/src/main/java/seat/controller/SeatController.java",
        "directoryName": "/ts-seat-service/src/main/java/seat"
      },
      "fieldClass": "SeatService",
      "fieldVariable": "seatService",
      "parentMethod": {
        "parentClassName": "SeatController",
        "parentPackageName": "seat.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-seat-service/src/main/java/seat/service/SeatServiceImpl.java",
        "directoryName": "/ts-seat-service/src/main/java/seat"
      },
      "classId": "seat.service.SeatServiceImpl",
      "packageName": "seat.service",
      "className": "SeatServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-seat-service/src/main/java/seat/service/SeatServiceImpl.java",
        "directoryName": "/ts-seat-service/src/main/java/seat"
      },
      "returnType": "Response",
      "methodName": "getLeftTicketOfInterval",
      "className": "SeatServiceImpl",
      "packageName": "seat.service",
      "methodId": "seat.service.SeatServiceImpl.getLeftTicketOfInterval",
      "classId": "seat.service.SeatServiceImpl",
      "line": 170,
      "msArgumentList": [
        {
          "returnType": "Seat"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "api": "\"http://ts-travel2-service:16346/api/v1/travel2service/routes/\" + seatRequest.getTrainNumber()",
        "httpMethod": "GET",
        "returnType": "Route",
        "msId": {
          "path": "/ts-seat-service/src/main/java/seat/service/SeatServiceImpl.java",
          "directoryName": "/ts-seat-service/src/main/java/seat"
        },
        "parentPackageName": "seat.service",
        "parentClassName": "SeatServiceImpl",
        "parentMethodName": "getLeftTicketOfInterval",
        "parentClassId": "seat.service.SeatServiceImpl",
        "lineNumber": 227,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-travel2-service:16346/api/v1/travel2service/routes/\" + seatRequest.getTrainNumber(), HttpMethod.GET, requestEntity, new ParameterizedTypeReference\u003cResponse\u003cRoute\u003e\u003e() {\n})"
      },
      {
        "api": "\"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther/tickets\"",
        "httpMethod": "POST",
        "returnType": "LeftTicketInfo",
        "msId": {
          "path": "/ts-seat-service/src/main/java/seat/service/SeatServiceImpl.java",
          "directoryName": "/ts-seat-service/src/main/java/seat"
        },
        "parentPackageName": "seat.service",
        "parentClassName": "SeatServiceImpl",
        "parentMethodName": "getLeftTicketOfInterval",
        "parentClassId": "seat.service.SeatServiceImpl",
        "lineNumber": 238,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther/tickets\", HttpMethod.POST, requestEntity, new ParameterizedTypeReference\u003cResponse\u003cLeftTicketInfo\u003e\u003e() {\n})"
      },
      {
        "api": "\"http://ts-travel2-service:16346/api/v1/travel2service/train_types/\" + seatRequest.getTrainNumber()",
        "httpMethod": "GET",
        "returnType": "TrainType",
        "msId": {
          "path": "/ts-seat-service/src/main/java/seat/service/SeatServiceImpl.java",
          "directoryName": "/ts-seat-service/src/main/java/seat"
        },
        "parentPackageName": "seat.service",
        "parentClassName": "SeatServiceImpl",
        "parentMethodName": "getLeftTicketOfInterval",
        "parentClassId": "seat.service.SeatServiceImpl",
        "lineNumber": 250,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-travel2-service:16346/api/v1/travel2service/train_types/\" + seatRequest.getTrainNumber(), HttpMethod.GET, requestEntity, new ParameterizedTypeReference\u003cResponse\u003cTrainType\u003e\u003e() {\n})"
      },
      {
        "api": "\"http://ts-travel-service:12346/api/v1/travelservice/routes/\" + trainNumber",
        "httpMethod": "GET",
        "returnType": "Route",
        "msId": {
          "path": "/ts-seat-service/src/main/java/seat/service/SeatServiceImpl.java",
          "directoryName": "/ts-seat-service/src/main/java/seat"
        },
        "parentPackageName": "seat.service",
        "parentClassName": "SeatServiceImpl",
        "parentMethodName": "getLeftTicketOfInterval",
        "parentClassId": "seat.service.SeatServiceImpl",
        "lineNumber": 189,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-travel-service:12346/api/v1/travelservice/routes/\" + trainNumber, HttpMethod.GET, requestEntity, new ParameterizedTypeReference\u003cResponse\u003cRoute\u003e\u003e() {\n})"
      },
      {
        "api": "\"http://ts-order-service:12031/api/v1/orderservice/order/tickets\"",
        "httpMethod": "POST",
        "returnType": "LeftTicketInfo",
        "msId": {
          "path": "/ts-seat-service/src/main/java/seat/service/SeatServiceImpl.java",
          "directoryName": "/ts-seat-service/src/main/java/seat"
        },
        "parentPackageName": "seat.service",
        "parentClassName": "SeatServiceImpl",
        "parentMethodName": "getLeftTicketOfInterval",
        "parentClassId": "seat.service.SeatServiceImpl",
        "lineNumber": 200,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-order-service:12031/api/v1/orderservice/order/tickets\", HttpMethod.POST, requestEntity, new ParameterizedTypeReference\u003cResponse\u003cLeftTicketInfo\u003e\u003e() {\n})"
      },
      {
        "api": "\"http://ts-travel-service:12346/api/v1/travelservice/train_types/\" + seatRequest.getTrainNumber()",
        "httpMethod": "GET",
        "returnType": "TrainType",
        "msId": {
          "path": "/ts-seat-service/src/main/java/seat/service/SeatServiceImpl.java",
          "directoryName": "/ts-seat-service/src/main/java/seat"
        },
        "parentPackageName": "seat.service",
        "parentClassName": "SeatServiceImpl",
        "parentMethodName": "getLeftTicketOfInterval",
        "parentClassId": "seat.service.SeatServiceImpl",
        "lineNumber": 212,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-travel-service:12346/api/v1/travelservice/train_types/\" + seatRequest.getTrainNumber(), HttpMethod.GET, requestEntity, new ParameterizedTypeReference\u003cResponse\u003cTrainType\u003e\u003e() {\n})"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel-plan-service/src/main/java/travelplan/controller/TravelPlanController.java",
        "directoryName": "/ts-travel-plan-service/src/main/java/travelplan"
      },
      "classId": "travelplan.controller.TravelPlanController",
      "packageName": "travelplan.controller",
      "className": "TravelPlanController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel-plan-service/src/main/java/travelplan/controller/TravelPlanController.java",
        "directoryName": "/ts-travel-plan-service/src/main/java/travelplan"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "TravelPlanController",
      "packageName": "travelplan.controller",
      "methodId": "travelplan.controller.TravelPlanController.home",
      "classId": "travelplan.controller.TravelPlanController",
      "line": 27,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel-plan-service/src/main/java/travelplan/controller/TravelPlanController.java",
        "directoryName": "/ts-travel-plan-service/src/main/java/travelplan"
      },
      "classId": "travelplan.controller.TravelPlanController",
      "packageName": "travelplan.controller",
      "className": "TravelPlanController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel-plan-service/src/main/java/travelplan/controller/TravelPlanController.java",
        "directoryName": "/ts-travel-plan-service/src/main/java/travelplan"
      },
      "returnType": "HttpEntity",
      "methodName": "getTransferResult",
      "className": "TravelPlanController",
      "packageName": "travelplan.controller",
      "methodId": "travelplan.controller.TravelPlanController.getTransferResult",
      "classId": "travelplan.controller.TravelPlanController",
      "line": 32,
      "msArgumentList": [
        {
          "returnType": "TransferTravelInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/travelPlan/transferResult\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-travel-plan-service/src/main/java/travelplan/controller/TravelPlanController.java",
        "directoryName": "/ts-travel-plan-service/src/main/java/travelplan"
      },
      "parentPackageName": "travelplan.controller",
      "parentClassName": "TravelPlanController",
      "parentMethodName": "getTransferResult",
      "parentClassId": "travelplan.controller.TravelPlanController",
      "lineNumber": 35,
      "calledMethodName": "getTransferSearch",
      "calledServiceId": "travelPlanService",
      "statementDeclaration": "travelPlanService.getTransferSearch(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-travel-plan-service/src/main/java/travelplan/controller/TravelPlanController.java",
        "directoryName": "/ts-travel-plan-service/src/main/java/travelplan"
      },
      "fieldClass": "TravelPlanService",
      "fieldVariable": "travelPlanService",
      "parentMethod": {
        "parentClassName": "TravelPlanController",
        "parentPackageName": "travelplan.controller"
      },
      "line": 22
    },
    "msService": {
      "msId": {
        "path": "/ts-travel-plan-service/src/main/java/travelplan/service/TravelPlanServiceImpl.java",
        "directoryName": "/ts-travel-plan-service/src/main/java/travelplan"
      },
      "classId": "travelplan.service.TravelPlanServiceImpl",
      "packageName": "travelplan.service",
      "className": "TravelPlanServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-travel-plan-service/src/main/java/travelplan/service/TravelPlanServiceImpl.java",
        "directoryName": "/ts-travel-plan-service/src/main/java/travelplan"
      },
      "returnType": "Response",
      "methodName": "getTransferSearch",
      "className": "TravelPlanServiceImpl",
      "packageName": "travelplan.service",
      "methodId": "travelplan.service.TravelPlanServiceImpl.getTransferSearch",
      "classId": "travelplan.service.TravelPlanServiceImpl",
      "line": 34,
      "msArgumentList": [
        {
          "returnType": "TransferTravelInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": []
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel-plan-service/src/main/java/travelplan/controller/TravelPlanController.java",
        "directoryName": "/ts-travel-plan-service/src/main/java/travelplan"
      },
      "classId": "travelplan.controller.TravelPlanController",
      "packageName": "travelplan.controller",
      "className": "TravelPlanController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel-plan-service/src/main/java/travelplan/controller/TravelPlanController.java",
        "directoryName": "/ts-travel-plan-service/src/main/java/travelplan"
      },
      "returnType": "HttpEntity",
      "methodName": "getByCheapest",
      "className": "TravelPlanController",
      "packageName": "travelplan.controller",
      "methodId": "travelplan.controller.TravelPlanController.getByCheapest",
      "classId": "travelplan.controller.TravelPlanController",
      "line": 38,
      "msArgumentList": [
        {
          "returnType": "TripInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/travelPlan/cheapest\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-travel-plan-service/src/main/java/travelplan/controller/TravelPlanController.java",
        "directoryName": "/ts-travel-plan-service/src/main/java/travelplan"
      },
      "parentPackageName": "travelplan.controller",
      "parentClassName": "TravelPlanController",
      "parentMethodName": "getByCheapest",
      "parentClassId": "travelplan.controller.TravelPlanController",
      "lineNumber": 41,
      "calledMethodName": "getCheapest",
      "calledServiceId": "travelPlanService",
      "statementDeclaration": "travelPlanService.getCheapest(queryInfo, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-travel-plan-service/src/main/java/travelplan/controller/TravelPlanController.java",
        "directoryName": "/ts-travel-plan-service/src/main/java/travelplan"
      },
      "fieldClass": "TravelPlanService",
      "fieldVariable": "travelPlanService",
      "parentMethod": {
        "parentClassName": "TravelPlanController",
        "parentPackageName": "travelplan.controller"
      },
      "line": 22
    },
    "msService": {
      "msId": {
        "path": "/ts-travel-plan-service/src/main/java/travelplan/service/TravelPlanServiceImpl.java",
        "directoryName": "/ts-travel-plan-service/src/main/java/travelplan"
      },
      "classId": "travelplan.service.TravelPlanServiceImpl",
      "packageName": "travelplan.service",
      "className": "TravelPlanServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-travel-plan-service/src/main/java/travelplan/service/TravelPlanServiceImpl.java",
        "directoryName": "/ts-travel-plan-service/src/main/java/travelplan"
      },
      "returnType": "Response",
      "methodName": "getCheapest",
      "className": "TravelPlanServiceImpl",
      "packageName": "travelplan.service",
      "methodId": "travelplan.service.TravelPlanServiceImpl.getCheapest",
      "classId": "travelplan.service.TravelPlanServiceImpl",
      "line": 72,
      "msArgumentList": [
        {
          "returnType": "TripInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": []
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel-plan-service/src/main/java/travelplan/controller/TravelPlanController.java",
        "directoryName": "/ts-travel-plan-service/src/main/java/travelplan"
      },
      "classId": "travelplan.controller.TravelPlanController",
      "packageName": "travelplan.controller",
      "className": "TravelPlanController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel-plan-service/src/main/java/travelplan/controller/TravelPlanController.java",
        "directoryName": "/ts-travel-plan-service/src/main/java/travelplan"
      },
      "returnType": "HttpEntity",
      "methodName": "getByQuickest",
      "className": "TravelPlanController",
      "packageName": "travelplan.controller",
      "methodId": "travelplan.controller.TravelPlanController.getByQuickest",
      "classId": "travelplan.controller.TravelPlanController",
      "line": 44,
      "msArgumentList": [
        {
          "returnType": "TripInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/travelPlan/quickest\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-travel-plan-service/src/main/java/travelplan/controller/TravelPlanController.java",
        "directoryName": "/ts-travel-plan-service/src/main/java/travelplan"
      },
      "parentPackageName": "travelplan.controller",
      "parentClassName": "TravelPlanController",
      "parentMethodName": "getByQuickest",
      "parentClassId": "travelplan.controller.TravelPlanController",
      "lineNumber": 47,
      "calledMethodName": "getQuickest",
      "calledServiceId": "travelPlanService",
      "statementDeclaration": "travelPlanService.getQuickest(queryInfo, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-travel-plan-service/src/main/java/travelplan/controller/TravelPlanController.java",
        "directoryName": "/ts-travel-plan-service/src/main/java/travelplan"
      },
      "fieldClass": "TravelPlanService",
      "fieldVariable": "travelPlanService",
      "parentMethod": {
        "parentClassName": "TravelPlanController",
        "parentPackageName": "travelplan.controller"
      },
      "line": 22
    },
    "msService": {
      "msId": {
        "path": "/ts-travel-plan-service/src/main/java/travelplan/service/TravelPlanServiceImpl.java",
        "directoryName": "/ts-travel-plan-service/src/main/java/travelplan"
      },
      "classId": "travelplan.service.TravelPlanServiceImpl",
      "packageName": "travelplan.service",
      "className": "TravelPlanServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-travel-plan-service/src/main/java/travelplan/service/TravelPlanServiceImpl.java",
        "directoryName": "/ts-travel-plan-service/src/main/java/travelplan"
      },
      "returnType": "Response",
      "methodName": "getQuickest",
      "className": "TravelPlanServiceImpl",
      "packageName": "travelplan.service",
      "methodId": "travelplan.service.TravelPlanServiceImpl.getQuickest",
      "classId": "travelplan.service.TravelPlanServiceImpl",
      "line": 114,
      "msArgumentList": [
        {
          "returnType": "TripInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": []
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel-plan-service/src/main/java/travelplan/controller/TravelPlanController.java",
        "directoryName": "/ts-travel-plan-service/src/main/java/travelplan"
      },
      "classId": "travelplan.controller.TravelPlanController",
      "packageName": "travelplan.controller",
      "className": "TravelPlanController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel-plan-service/src/main/java/travelplan/controller/TravelPlanController.java",
        "directoryName": "/ts-travel-plan-service/src/main/java/travelplan"
      },
      "returnType": "HttpEntity",
      "methodName": "getByMinStation",
      "className": "TravelPlanController",
      "packageName": "travelplan.controller",
      "methodId": "travelplan.controller.TravelPlanController.getByMinStation",
      "classId": "travelplan.controller.TravelPlanController",
      "line": 50,
      "msArgumentList": [
        {
          "returnType": "TripInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/travelPlan/minStation\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-travel-plan-service/src/main/java/travelplan/controller/TravelPlanController.java",
        "directoryName": "/ts-travel-plan-service/src/main/java/travelplan"
      },
      "parentPackageName": "travelplan.controller",
      "parentClassName": "TravelPlanController",
      "parentMethodName": "getByMinStation",
      "parentClassId": "travelplan.controller.TravelPlanController",
      "lineNumber": 53,
      "calledMethodName": "getMinStation",
      "calledServiceId": "travelPlanService",
      "statementDeclaration": "travelPlanService.getMinStation(queryInfo, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-travel-plan-service/src/main/java/travelplan/controller/TravelPlanController.java",
        "directoryName": "/ts-travel-plan-service/src/main/java/travelplan"
      },
      "fieldClass": "TravelPlanService",
      "fieldVariable": "travelPlanService",
      "parentMethod": {
        "parentClassName": "TravelPlanController",
        "parentPackageName": "travelplan.controller"
      },
      "line": 22
    },
    "msService": {
      "msId": {
        "path": "/ts-travel-plan-service/src/main/java/travelplan/service/TravelPlanServiceImpl.java",
        "directoryName": "/ts-travel-plan-service/src/main/java/travelplan"
      },
      "classId": "travelplan.service.TravelPlanServiceImpl",
      "packageName": "travelplan.service",
      "className": "TravelPlanServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-travel-plan-service/src/main/java/travelplan/service/TravelPlanServiceImpl.java",
        "directoryName": "/ts-travel-plan-service/src/main/java/travelplan"
      },
      "returnType": "Response",
      "methodName": "getMinStation",
      "className": "TravelPlanServiceImpl",
      "packageName": "travelplan.service",
      "methodId": "travelplan.service.TravelPlanServiceImpl.getMinStation",
      "classId": "travelplan.service.TravelPlanServiceImpl",
      "line": 158,
      "msArgumentList": [
        {
          "returnType": "TripInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": []
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.controller.Travel2Controller",
      "packageName": "travel2.controller",
      "className": "Travel2Controller",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "Travel2Controller",
      "packageName": "travel2.controller",
      "methodId": "travel2.controller.Travel2Controller.home",
      "classId": "travel2.controller.Travel2Controller",
      "line": 30,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.controller.Travel2Controller",
      "packageName": "travel2.controller",
      "className": "Travel2Controller",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "HttpEntity",
      "methodName": "getTrainTypeByTripId",
      "className": "Travel2Controller",
      "packageName": "travel2.controller",
      "methodId": "travel2.controller.Travel2Controller.getTrainTypeByTripId",
      "classId": "travel2.controller.Travel2Controller",
      "line": 35,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/train_types/{tripId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "parentPackageName": "travel2.controller",
      "parentClassName": "Travel2Controller",
      "parentMethodName": "getTrainTypeByTripId",
      "parentClassId": "travel2.controller.Travel2Controller",
      "lineNumber": 40,
      "calledMethodName": "getTrainTypeByTripId",
      "calledServiceId": "service",
      "statementDeclaration": "service.getTrainTypeByTripId(tripId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "fieldClass": "Travel2Service",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "Travel2Controller",
        "parentPackageName": "travel2.controller"
      },
      "line": 25
    },
    "msService": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.service.Travel2ServiceImpl",
      "packageName": "travel2.service",
      "className": "Travel2ServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "Response",
      "methodName": "getTrainTypeByTripId",
      "className": "Travel2ServiceImpl",
      "packageName": "travel2.service",
      "methodId": "travel2.service.Travel2ServiceImpl.getTrainTypeByTripId",
      "classId": "travel2.service.Travel2ServiceImpl",
      "line": 58,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "parentPackageName": "travel2.service",
      "parentClassName": "Travel2ServiceImpl",
      "parentMethodName": "getTrainTypeByTripId",
      "parentClassId": "travel2.service.Travel2ServiceImpl",
      "lineNumber": 62,
      "calledMethodName": "findByTripId",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findByTripId(tripId1)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "fieldClass": "TripRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "Travel2ServiceImpl",
        "parentPackageName": "travel2.service"
      },
      "line": 26
    },
    "msRepository": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.repository.TripRepository",
      "packageName": "travel2.repository",
      "className": "TripRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "Trip",
      "methodName": "findByTripId",
      "className": "TripRepository",
      "packageName": "travel2.repository",
      "methodId": "travel2.repository.TripRepository.findByTripId",
      "classId": "travel2.repository.TripRepository",
      "line": 13,
      "msArgumentList": [
        {
          "returnType": "TripId"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.controller.Travel2Controller",
      "packageName": "travel2.controller",
      "className": "Travel2Controller",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "HttpEntity",
      "methodName": "getRouteByTripId",
      "className": "Travel2Controller",
      "packageName": "travel2.controller",
      "methodId": "travel2.controller.Travel2Controller.getRouteByTripId",
      "classId": "travel2.controller.Travel2Controller",
      "line": 43,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/routes/{tripId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "parentPackageName": "travel2.controller",
      "parentClassName": "Travel2Controller",
      "parentMethodName": "getRouteByTripId",
      "parentClassId": "travel2.controller.Travel2Controller",
      "lineNumber": 48,
      "calledMethodName": "getRouteByTripId",
      "calledServiceId": "service",
      "statementDeclaration": "service.getRouteByTripId(tripId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "fieldClass": "Travel2Service",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "Travel2Controller",
        "parentPackageName": "travel2.controller"
      },
      "line": 25
    },
    "msService": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.service.Travel2ServiceImpl",
      "packageName": "travel2.service",
      "className": "Travel2ServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "Response",
      "methodName": "getRouteByTripId",
      "className": "Travel2ServiceImpl",
      "packageName": "travel2.service",
      "methodId": "travel2.service.Travel2ServiceImpl.getRouteByTripId",
      "classId": "travel2.service.Travel2ServiceImpl",
      "line": 37,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "parentPackageName": "travel2.service",
      "parentClassName": "Travel2ServiceImpl",
      "parentMethodName": "getRouteByTripId",
      "parentClassId": "travel2.service.Travel2ServiceImpl",
      "lineNumber": 41,
      "calledMethodName": "findByTripId",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findByTripId(tripId1)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "fieldClass": "TripRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "Travel2ServiceImpl",
        "parentPackageName": "travel2.service"
      },
      "line": 26
    },
    "msRepository": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.repository.TripRepository",
      "packageName": "travel2.repository",
      "className": "TripRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "Trip",
      "methodName": "findByTripId",
      "className": "TripRepository",
      "packageName": "travel2.repository",
      "methodId": "travel2.repository.TripRepository.findByTripId",
      "classId": "travel2.repository.TripRepository",
      "line": 13,
      "msArgumentList": [
        {
          "returnType": "TripId"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.controller.Travel2Controller",
      "packageName": "travel2.controller",
      "className": "Travel2Controller",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "HttpEntity",
      "methodName": "getTripsByRouteId",
      "className": "Travel2Controller",
      "packageName": "travel2.controller",
      "methodId": "travel2.controller.Travel2Controller.getTripsByRouteId",
      "classId": "travel2.controller.Travel2Controller",
      "line": 51,
      "msArgumentList": [
        {
          "returnType": "ArrayList\u003cString\u003e"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/trips/routes\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "parentPackageName": "travel2.controller",
      "parentClassName": "Travel2Controller",
      "parentMethodName": "getTripsByRouteId",
      "parentClassId": "travel2.controller.Travel2Controller",
      "lineNumber": 56,
      "calledMethodName": "getTripByRoute",
      "calledServiceId": "service",
      "statementDeclaration": "service.getTripByRoute(routeIds, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "fieldClass": "Travel2Service",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "Travel2Controller",
        "parentPackageName": "travel2.controller"
      },
      "line": 25
    },
    "msService": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.service.Travel2ServiceImpl",
      "packageName": "travel2.service",
      "className": "Travel2ServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "Response",
      "methodName": "getTripByRoute",
      "className": "Travel2ServiceImpl",
      "packageName": "travel2.service",
      "methodId": "travel2.service.Travel2ServiceImpl.getTripByRoute",
      "classId": "travel2.service.Travel2ServiceImpl",
      "line": 77,
      "msArgumentList": [
        {
          "returnType": "ArrayList\u003cString\u003e"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "parentPackageName": "travel2.service",
      "parentClassName": "Travel2ServiceImpl",
      "parentMethodName": "getTripByRoute",
      "parentClassId": "travel2.service.Travel2ServiceImpl",
      "lineNumber": 81,
      "calledMethodName": "findByRouteId",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findByRouteId(routeId)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "fieldClass": "TripRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "Travel2ServiceImpl",
        "parentPackageName": "travel2.service"
      },
      "line": 26
    },
    "msRepository": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.repository.TripRepository",
      "packageName": "travel2.repository",
      "className": "TripRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "ArrayList\u003cTrip\u003e",
      "methodName": "findByRouteId",
      "className": "TripRepository",
      "packageName": "travel2.repository",
      "methodId": "travel2.repository.TripRepository.findByRouteId",
      "classId": "travel2.repository.TripRepository",
      "line": 20,
      "msArgumentList": [
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.controller.Travel2Controller",
      "packageName": "travel2.controller",
      "className": "Travel2Controller",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "HttpEntity\u003c?\u003e",
      "methodName": "createTrip",
      "className": "Travel2Controller",
      "packageName": "travel2.controller",
      "methodId": "travel2.controller.Travel2Controller.createTrip",
      "classId": "travel2.controller.Travel2Controller",
      "line": 59,
      "msArgumentList": [
        {
          "returnType": "TravelInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/trips\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "parentPackageName": "travel2.controller",
      "parentClassName": "Travel2Controller",
      "parentMethodName": "createTrip",
      "parentClassId": "travel2.controller.Travel2Controller",
      "lineNumber": 64,
      "calledMethodName": "create",
      "calledServiceId": "service",
      "statementDeclaration": "service.create(routeIds, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "fieldClass": "Travel2Service",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "Travel2Controller",
        "parentPackageName": "travel2.controller"
      },
      "line": 25
    },
    "msService": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.service.Travel2ServiceImpl",
      "packageName": "travel2.service",
      "className": "Travel2ServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "Response",
      "methodName": "create",
      "className": "Travel2ServiceImpl",
      "packageName": "travel2.service",
      "methodId": "travel2.service.Travel2ServiceImpl.create",
      "classId": "travel2.service.Travel2ServiceImpl",
      "line": 95,
      "msArgumentList": [
        {
          "returnType": "TravelInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "parentPackageName": "travel2.service",
      "parentClassName": "Travel2ServiceImpl",
      "parentMethodName": "create",
      "parentClassId": "travel2.service.Travel2ServiceImpl",
      "lineNumber": 98,
      "calledMethodName": "findByTripId",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findByTripId(ti)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "fieldClass": "TripRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "Travel2ServiceImpl",
        "parentPackageName": "travel2.service"
      },
      "line": 26
    },
    "msRepository": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.repository.TripRepository",
      "packageName": "travel2.repository",
      "className": "TripRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "Trip",
      "methodName": "findByTripId",
      "className": "TripRepository",
      "packageName": "travel2.repository",
      "methodId": "travel2.repository.TripRepository.findByTripId",
      "classId": "travel2.repository.TripRepository",
      "line": 13,
      "msArgumentList": [
        {
          "returnType": "TripId"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.controller.Travel2Controller",
      "packageName": "travel2.controller",
      "className": "Travel2Controller",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "HttpEntity",
      "methodName": "retrieve",
      "className": "Travel2Controller",
      "packageName": "travel2.controller",
      "methodId": "travel2.controller.Travel2Controller.retrieve",
      "classId": "travel2.controller.Travel2Controller",
      "line": 74,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/trips/{tripId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "parentPackageName": "travel2.controller",
      "parentClassName": "Travel2Controller",
      "parentMethodName": "retrieve",
      "parentClassId": "travel2.controller.Travel2Controller",
      "lineNumber": 79,
      "calledMethodName": "retrieve",
      "calledServiceId": "service",
      "statementDeclaration": "service.retrieve(tripId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "fieldClass": "Travel2Service",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "Travel2Controller",
        "parentPackageName": "travel2.controller"
      },
      "line": 25
    },
    "msService": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.service.Travel2ServiceImpl",
      "packageName": "travel2.service",
      "className": "Travel2ServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "Response",
      "methodName": "retrieve",
      "className": "Travel2ServiceImpl",
      "packageName": "travel2.service",
      "methodId": "travel2.service.Travel2ServiceImpl.retrieve",
      "classId": "travel2.service.Travel2ServiceImpl",
      "line": 110,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "parentPackageName": "travel2.service",
      "parentClassName": "Travel2ServiceImpl",
      "parentMethodName": "retrieve",
      "parentClassId": "travel2.service.Travel2ServiceImpl",
      "lineNumber": 113,
      "calledMethodName": "findByTripId",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findByTripId(ti)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "fieldClass": "TripRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "Travel2ServiceImpl",
        "parentPackageName": "travel2.service"
      },
      "line": 26
    },
    "msRepository": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.repository.TripRepository",
      "packageName": "travel2.repository",
      "className": "TripRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "Trip",
      "methodName": "findByTripId",
      "className": "TripRepository",
      "packageName": "travel2.repository",
      "methodId": "travel2.repository.TripRepository.findByTripId",
      "classId": "travel2.repository.TripRepository",
      "line": 13,
      "msArgumentList": [
        {
          "returnType": "TripId"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.controller.Travel2Controller",
      "packageName": "travel2.controller",
      "className": "Travel2Controller",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "HttpEntity",
      "methodName": "updateTrip",
      "className": "Travel2Controller",
      "packageName": "travel2.controller",
      "methodId": "travel2.controller.Travel2Controller.updateTrip",
      "classId": "travel2.controller.Travel2Controller",
      "line": 82,
      "msArgumentList": [
        {
          "returnType": "TravelInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PutMapping",
          "key": "value",
          "value": "\"/trips\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "parentPackageName": "travel2.controller",
      "parentClassName": "Travel2Controller",
      "parentMethodName": "updateTrip",
      "parentClassId": "travel2.controller.Travel2Controller",
      "lineNumber": 87,
      "calledMethodName": "update",
      "calledServiceId": "service",
      "statementDeclaration": "service.update(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "fieldClass": "Travel2Service",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "Travel2Controller",
        "parentPackageName": "travel2.controller"
      },
      "line": 25
    },
    "msService": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.service.Travel2ServiceImpl",
      "packageName": "travel2.service",
      "className": "Travel2ServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "Response",
      "methodName": "update",
      "className": "Travel2ServiceImpl",
      "packageName": "travel2.service",
      "methodId": "travel2.service.Travel2ServiceImpl.update",
      "classId": "travel2.service.Travel2ServiceImpl",
      "line": 122,
      "msArgumentList": [
        {
          "returnType": "TravelInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "parentPackageName": "travel2.service",
      "parentClassName": "Travel2ServiceImpl",
      "parentMethodName": "update",
      "parentClassId": "travel2.service.Travel2ServiceImpl",
      "lineNumber": 125,
      "calledMethodName": "findByTripId",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findByTripId(ti)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "fieldClass": "TripRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "Travel2ServiceImpl",
        "parentPackageName": "travel2.service"
      },
      "line": 26
    },
    "msRepository": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.repository.TripRepository",
      "packageName": "travel2.repository",
      "className": "TripRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "Trip",
      "methodName": "findByTripId",
      "className": "TripRepository",
      "packageName": "travel2.repository",
      "methodId": "travel2.repository.TripRepository.findByTripId",
      "classId": "travel2.repository.TripRepository",
      "line": 13,
      "msArgumentList": [
        {
          "returnType": "TripId"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.controller.Travel2Controller",
      "packageName": "travel2.controller",
      "className": "Travel2Controller",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "HttpEntity",
      "methodName": "deleteTrip",
      "className": "Travel2Controller",
      "packageName": "travel2.controller",
      "methodId": "travel2.controller.Travel2Controller.deleteTrip",
      "classId": "travel2.controller.Travel2Controller",
      "line": 90,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "DeleteMapping",
          "key": "value",
          "value": "\"/trips/{tripId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "parentPackageName": "travel2.controller",
      "parentClassName": "Travel2Controller",
      "parentMethodName": "deleteTrip",
      "parentClassId": "travel2.controller.Travel2Controller",
      "lineNumber": 95,
      "calledMethodName": "delete",
      "calledServiceId": "service",
      "statementDeclaration": "service.delete(tripId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "fieldClass": "Travel2Service",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "Travel2Controller",
        "parentPackageName": "travel2.controller"
      },
      "line": 25
    },
    "msService": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.service.Travel2ServiceImpl",
      "packageName": "travel2.service",
      "className": "Travel2ServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "Response",
      "methodName": "delete",
      "className": "Travel2ServiceImpl",
      "packageName": "travel2.service",
      "methodId": "travel2.service.Travel2ServiceImpl.delete",
      "classId": "travel2.service.Travel2ServiceImpl",
      "line": 137,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "parentPackageName": "travel2.service",
      "parentClassName": "Travel2ServiceImpl",
      "parentMethodName": "delete",
      "parentClassId": "travel2.service.Travel2ServiceImpl",
      "lineNumber": 140,
      "calledMethodName": "findByTripId",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findByTripId(ti)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "fieldClass": "TripRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "Travel2ServiceImpl",
        "parentPackageName": "travel2.service"
      },
      "line": 26
    },
    "msRepository": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.repository.TripRepository",
      "packageName": "travel2.repository",
      "className": "TripRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "Trip",
      "methodName": "findByTripId",
      "className": "TripRepository",
      "packageName": "travel2.repository",
      "methodId": "travel2.repository.TripRepository.findByTripId",
      "classId": "travel2.repository.TripRepository",
      "line": 13,
      "msArgumentList": [
        {
          "returnType": "TripId"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.controller.Travel2Controller",
      "packageName": "travel2.controller",
      "className": "Travel2Controller",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "HttpEntity",
      "methodName": "queryInfo",
      "className": "Travel2Controller",
      "packageName": "travel2.controller",
      "methodId": "travel2.controller.Travel2Controller.queryInfo",
      "classId": "travel2.controller.Travel2Controller",
      "line": 105,
      "msArgumentList": [
        {
          "returnType": "TripInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/trips/left\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "parentPackageName": "travel2.controller",
      "parentClassName": "Travel2Controller",
      "parentMethodName": "queryInfo",
      "parentClassId": "travel2.controller.Travel2Controller",
      "lineNumber": 116,
      "calledMethodName": "query",
      "calledServiceId": "service",
      "statementDeclaration": "service.query(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "fieldClass": "Travel2Service",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "Travel2Controller",
        "parentPackageName": "travel2.controller"
      },
      "line": 25
    },
    "msService": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.service.Travel2ServiceImpl",
      "packageName": "travel2.service",
      "className": "Travel2ServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "Response",
      "methodName": "query",
      "className": "Travel2ServiceImpl",
      "packageName": "travel2.service",
      "methodId": "travel2.service.Travel2ServiceImpl.query",
      "classId": "travel2.service.Travel2ServiceImpl",
      "line": 149,
      "msArgumentList": [
        {
          "returnType": "TripInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "parentPackageName": "travel2.service",
      "parentClassName": "Travel2ServiceImpl",
      "parentMethodName": "query",
      "parentClassId": "travel2.service.Travel2ServiceImpl",
      "lineNumber": 162,
      "calledMethodName": "findAll",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findAll()"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "fieldClass": "TripRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "Travel2ServiceImpl",
        "parentPackageName": "travel2.service"
      },
      "line": 26
    },
    "msRepository": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.repository.TripRepository",
      "packageName": "travel2.repository",
      "className": "TripRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "ArrayList\u003cTrip\u003e",
      "methodName": "findAll",
      "className": "TripRepository",
      "packageName": "travel2.repository",
      "methodId": "travel2.repository.TripRepository.findAll",
      "classId": "travel2.repository.TripRepository",
      "line": 17,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.controller.Travel2Controller",
      "packageName": "travel2.controller",
      "className": "Travel2Controller",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "HttpEntity",
      "methodName": "getTripAllDetailInfo",
      "className": "Travel2Controller",
      "packageName": "travel2.controller",
      "methodId": "travel2.controller.Travel2Controller.getTripAllDetailInfo",
      "classId": "travel2.controller.Travel2Controller",
      "line": 126,
      "msArgumentList": [
        {
          "returnType": "TripAllDetailInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/trip_detail\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "parentPackageName": "travel2.controller",
      "parentClassName": "Travel2Controller",
      "parentMethodName": "getTripAllDetailInfo",
      "parentClassId": "travel2.controller.Travel2Controller",
      "lineNumber": 130,
      "calledMethodName": "getTripAllDetailInfo",
      "calledServiceId": "service",
      "statementDeclaration": "service.getTripAllDetailInfo(gtdi, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "fieldClass": "Travel2Service",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "Travel2Controller",
        "parentPackageName": "travel2.controller"
      },
      "line": 25
    },
    "msService": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.service.Travel2ServiceImpl",
      "packageName": "travel2.service",
      "className": "Travel2ServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "Response",
      "methodName": "getTripAllDetailInfo",
      "className": "Travel2ServiceImpl",
      "packageName": "travel2.service",
      "methodId": "travel2.service.Travel2ServiceImpl.getTripAllDetailInfo",
      "classId": "travel2.service.Travel2ServiceImpl",
      "line": 182,
      "msArgumentList": [
        {
          "returnType": "TripAllDetailInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "parentPackageName": "travel2.service",
      "parentClassName": "Travel2ServiceImpl",
      "parentMethodName": "getTripAllDetailInfo",
      "parentClassId": "travel2.service.Travel2ServiceImpl",
      "lineNumber": 186,
      "calledMethodName": "findByTripId",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findByTripId(new TripId(gtdi.getTripId()))"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "fieldClass": "TripRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "Travel2ServiceImpl",
        "parentPackageName": "travel2.service"
      },
      "line": 26
    },
    "msRepository": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.repository.TripRepository",
      "packageName": "travel2.repository",
      "className": "TripRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "Trip",
      "methodName": "findByTripId",
      "className": "TripRepository",
      "packageName": "travel2.repository",
      "methodId": "travel2.repository.TripRepository.findByTripId",
      "classId": "travel2.repository.TripRepository",
      "line": 13,
      "msArgumentList": [
        {
          "returnType": "TripId"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.controller.Travel2Controller",
      "packageName": "travel2.controller",
      "className": "Travel2Controller",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "HttpEntity",
      "methodName": "queryAll",
      "className": "Travel2Controller",
      "packageName": "travel2.controller",
      "methodId": "travel2.controller.Travel2Controller.queryAll",
      "classId": "travel2.controller.Travel2Controller",
      "line": 133,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/trips\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "parentPackageName": "travel2.controller",
      "parentClassName": "Travel2Controller",
      "parentMethodName": "queryAll",
      "parentClassId": "travel2.controller.Travel2Controller",
      "lineNumber": 138,
      "calledMethodName": "queryAll",
      "calledServiceId": "service",
      "statementDeclaration": "service.queryAll(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "fieldClass": "Travel2Service",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "Travel2Controller",
        "parentPackageName": "travel2.controller"
      },
      "line": 25
    },
    "msService": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.service.Travel2ServiceImpl",
      "packageName": "travel2.service",
      "className": "Travel2ServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "Response",
      "methodName": "queryAll",
      "className": "Travel2ServiceImpl",
      "packageName": "travel2.service",
      "methodId": "travel2.service.Travel2ServiceImpl.queryAll",
      "classId": "travel2.service.Travel2ServiceImpl",
      "line": 307,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "parentPackageName": "travel2.service",
      "parentClassName": "Travel2ServiceImpl",
      "parentMethodName": "queryAll",
      "parentClassId": "travel2.service.Travel2ServiceImpl",
      "lineNumber": 309,
      "calledMethodName": "findAll",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findAll()"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "fieldClass": "TripRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "Travel2ServiceImpl",
        "parentPackageName": "travel2.service"
      },
      "line": 26
    },
    "msRepository": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.repository.TripRepository",
      "packageName": "travel2.repository",
      "className": "TripRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "ArrayList\u003cTrip\u003e",
      "methodName": "findAll",
      "className": "TripRepository",
      "packageName": "travel2.repository",
      "methodId": "travel2.repository.TripRepository.findAll",
      "classId": "travel2.repository.TripRepository",
      "line": 17,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.controller.Travel2Controller",
      "packageName": "travel2.controller",
      "className": "Travel2Controller",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "HttpEntity",
      "methodName": "adminQueryAll",
      "className": "Travel2Controller",
      "packageName": "travel2.controller",
      "methodId": "travel2.controller.Travel2Controller.adminQueryAll",
      "classId": "travel2.controller.Travel2Controller",
      "line": 141,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/admin_trip\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "parentPackageName": "travel2.controller",
      "parentClassName": "Travel2Controller",
      "parentMethodName": "adminQueryAll",
      "parentClassId": "travel2.controller.Travel2Controller",
      "lineNumber": 146,
      "calledMethodName": "adminQueryAll",
      "calledServiceId": "service",
      "statementDeclaration": "service.adminQueryAll(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/controller/Travel2Controller.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "fieldClass": "Travel2Service",
      "fieldVariable": "service",
      "parentMethod": {
        "parentClassName": "Travel2Controller",
        "parentPackageName": "travel2.controller"
      },
      "line": 25
    },
    "msService": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.service.Travel2ServiceImpl",
      "packageName": "travel2.service",
      "className": "Travel2ServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "Response",
      "methodName": "adminQueryAll",
      "className": "Travel2ServiceImpl",
      "packageName": "travel2.service",
      "methodId": "travel2.service.Travel2ServiceImpl.adminQueryAll",
      "classId": "travel2.service.Travel2ServiceImpl",
      "line": 411,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "parentPackageName": "travel2.service",
      "parentClassName": "Travel2ServiceImpl",
      "parentMethodName": "adminQueryAll",
      "parentClassId": "travel2.service.Travel2ServiceImpl",
      "lineNumber": 413,
      "calledMethodName": "findAll",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findAll()"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/service/Travel2ServiceImpl.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "fieldClass": "TripRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "Travel2ServiceImpl",
        "parentPackageName": "travel2.service"
      },
      "line": 26
    },
    "msRepository": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.repository.TripRepository",
      "packageName": "travel2.repository",
      "className": "TripRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "ArrayList\u003cTrip\u003e",
      "methodName": "findAll",
      "className": "TripRepository",
      "packageName": "travel2.repository",
      "methodId": "travel2.repository.TripRepository.findAll",
      "classId": "travel2.repository.TripRepository",
      "line": 17,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "classId": "travel.controller.TravelController",
      "packageName": "travel.controller",
      "className": "TravelController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "TravelController",
      "packageName": "travel.controller",
      "methodId": "travel.controller.TravelController.home",
      "classId": "travel.controller.TravelController",
      "line": 31,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "classId": "travel.controller.TravelController",
      "packageName": "travel.controller",
      "className": "TravelController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "returnType": "HttpEntity",
      "methodName": "getTrainTypeByTripId",
      "className": "TravelController",
      "packageName": "travel.controller",
      "methodId": "travel.controller.TravelController.getTrainTypeByTripId",
      "classId": "travel.controller.TravelController",
      "line": 36,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/train_types/{tripId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "parentPackageName": "travel.controller",
      "parentClassName": "TravelController",
      "parentMethodName": "getTrainTypeByTripId",
      "parentClassId": "travel.controller.TravelController",
      "lineNumber": 41,
      "calledMethodName": "getTrainTypeByTripId",
      "calledServiceId": "travelService",
      "statementDeclaration": "travelService.getTrainTypeByTripId(tripId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "fieldClass": "TravelService",
      "fieldVariable": "travelService",
      "parentMethod": {
        "parentClassName": "TravelController",
        "parentPackageName": "travel.controller"
      },
      "line": 26
    },
    "msService": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "classId": "travel.service.TravelServiceImpl",
      "packageName": "travel.service",
      "className": "TravelServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "returnType": "Response",
      "methodName": "getTrainTypeByTripId",
      "className": "TravelServiceImpl",
      "packageName": "travel.service",
      "methodId": "travel.service.TravelServiceImpl.getTrainTypeByTripId",
      "classId": "travel.service.TravelServiceImpl",
      "line": 77,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "parentPackageName": "travel.service",
      "parentClassName": "TravelServiceImpl",
      "parentMethodName": "getTrainTypeByTripId",
      "parentClassId": "travel.service.TravelServiceImpl",
      "lineNumber": 81,
      "calledMethodName": "findByTripId",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findByTripId(tripId1)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "fieldClass": "TripRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "TravelServiceImpl",
        "parentPackageName": "travel.service"
      },
      "line": 29
    },
    "msRepository": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.repository.TripRepository",
      "packageName": "travel2.repository",
      "className": "TripRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "Trip",
      "methodName": "findByTripId",
      "className": "TripRepository",
      "packageName": "travel2.repository",
      "methodId": "travel2.repository.TripRepository.findByTripId",
      "classId": "travel2.repository.TripRepository",
      "line": 13,
      "msArgumentList": [
        {
          "returnType": "TripId"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "classId": "travel.controller.TravelController",
      "packageName": "travel.controller",
      "className": "TravelController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "returnType": "HttpEntity",
      "methodName": "getRouteByTripId",
      "className": "TravelController",
      "packageName": "travel.controller",
      "methodId": "travel.controller.TravelController.getRouteByTripId",
      "classId": "travel.controller.TravelController",
      "line": 44,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/routes/{tripId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "parentPackageName": "travel.controller",
      "parentClassName": "TravelController",
      "parentMethodName": "getRouteByTripId",
      "parentClassId": "travel.controller.TravelController",
      "lineNumber": 49,
      "calledMethodName": "getRouteByTripId",
      "calledServiceId": "travelService",
      "statementDeclaration": "travelService.getRouteByTripId(tripId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "fieldClass": "TravelService",
      "fieldVariable": "travelService",
      "parentMethod": {
        "parentClassName": "TravelController",
        "parentPackageName": "travel.controller"
      },
      "line": 26
    },
    "msService": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "classId": "travel.service.TravelServiceImpl",
      "packageName": "travel.service",
      "className": "TravelServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "returnType": "Response",
      "methodName": "getRouteByTripId",
      "className": "TravelServiceImpl",
      "packageName": "travel.service",
      "methodId": "travel.service.TravelServiceImpl.getRouteByTripId",
      "classId": "travel.service.TravelServiceImpl",
      "line": 57,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "parentPackageName": "travel.service",
      "parentClassName": "TravelServiceImpl",
      "parentMethodName": "getRouteByTripId",
      "parentClassId": "travel.service.TravelServiceImpl",
      "lineNumber": 62,
      "calledMethodName": "findByTripId",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findByTripId(tripId1)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "fieldClass": "TripRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "TravelServiceImpl",
        "parentPackageName": "travel.service"
      },
      "line": 29
    },
    "msRepository": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.repository.TripRepository",
      "packageName": "travel2.repository",
      "className": "TripRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "Trip",
      "methodName": "findByTripId",
      "className": "TripRepository",
      "packageName": "travel2.repository",
      "methodId": "travel2.repository.TripRepository.findByTripId",
      "classId": "travel2.repository.TripRepository",
      "line": 13,
      "msArgumentList": [
        {
          "returnType": "TripId"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "classId": "travel.controller.TravelController",
      "packageName": "travel.controller",
      "className": "TravelController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "returnType": "HttpEntity",
      "methodName": "getTripsByRouteId",
      "className": "TravelController",
      "packageName": "travel.controller",
      "methodId": "travel.controller.TravelController.getTripsByRouteId",
      "classId": "travel.controller.TravelController",
      "line": 52,
      "msArgumentList": [
        {
          "returnType": "ArrayList\u003cString\u003e"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/trips/routes\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "parentPackageName": "travel.controller",
      "parentClassName": "TravelController",
      "parentMethodName": "getTripsByRouteId",
      "parentClassId": "travel.controller.TravelController",
      "lineNumber": 57,
      "calledMethodName": "getTripByRoute",
      "calledServiceId": "travelService",
      "statementDeclaration": "travelService.getTripByRoute(routeIds, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "fieldClass": "TravelService",
      "fieldVariable": "travelService",
      "parentMethod": {
        "parentClassName": "TravelController",
        "parentPackageName": "travel.controller"
      },
      "line": 26
    },
    "msService": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "classId": "travel.service.TravelServiceImpl",
      "packageName": "travel.service",
      "className": "TravelServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "returnType": "Response",
      "methodName": "getTripByRoute",
      "className": "TravelServiceImpl",
      "packageName": "travel.service",
      "methodId": "travel.service.TravelServiceImpl.getTripByRoute",
      "classId": "travel.service.TravelServiceImpl",
      "line": 95,
      "msArgumentList": [
        {
          "returnType": "ArrayList\u003cString\u003e"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "parentPackageName": "travel.service",
      "parentClassName": "TravelServiceImpl",
      "parentMethodName": "getTripByRoute",
      "parentClassId": "travel.service.TravelServiceImpl",
      "lineNumber": 99,
      "calledMethodName": "findByRouteId",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findByRouteId(routeId)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "fieldClass": "TripRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "TravelServiceImpl",
        "parentPackageName": "travel.service"
      },
      "line": 29
    },
    "msRepository": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.repository.TripRepository",
      "packageName": "travel2.repository",
      "className": "TripRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "ArrayList\u003cTrip\u003e",
      "methodName": "findByRouteId",
      "className": "TripRepository",
      "packageName": "travel2.repository",
      "methodId": "travel2.repository.TripRepository.findByRouteId",
      "classId": "travel2.repository.TripRepository",
      "line": 20,
      "msArgumentList": [
        {
          "returnType": "String"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "classId": "travel.controller.TravelController",
      "packageName": "travel.controller",
      "className": "TravelController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "returnType": "HttpEntity\u003c?\u003e",
      "methodName": "createTrip",
      "className": "TravelController",
      "packageName": "travel.controller",
      "methodId": "travel.controller.TravelController.createTrip",
      "classId": "travel.controller.TravelController",
      "line": 60,
      "msArgumentList": [
        {
          "returnType": "TravelInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/trips\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "parentPackageName": "travel.controller",
      "parentClassName": "TravelController",
      "parentMethodName": "createTrip",
      "parentClassId": "travel.controller.TravelController",
      "lineNumber": 65,
      "calledMethodName": "create",
      "calledServiceId": "travelService",
      "statementDeclaration": "travelService.create(routeIds, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "fieldClass": "TravelService",
      "fieldVariable": "travelService",
      "parentMethod": {
        "parentClassName": "TravelController",
        "parentPackageName": "travel.controller"
      },
      "line": 26
    },
    "msService": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "classId": "travel.service.TravelServiceImpl",
      "packageName": "travel.service",
      "className": "TravelServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "returnType": "Response",
      "methodName": "create",
      "className": "TravelServiceImpl",
      "packageName": "travel.service",
      "methodId": "travel.service.TravelServiceImpl.create",
      "classId": "travel.service.TravelServiceImpl",
      "line": 42,
      "msArgumentList": [
        {
          "returnType": "TravelInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "parentPackageName": "travel.service",
      "parentClassName": "TravelServiceImpl",
      "parentMethodName": "create",
      "parentClassId": "travel.service.TravelServiceImpl",
      "lineNumber": 45,
      "calledMethodName": "findByTripId",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findByTripId(ti)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "fieldClass": "TripRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "TravelServiceImpl",
        "parentPackageName": "travel.service"
      },
      "line": 29
    },
    "msRepository": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.repository.TripRepository",
      "packageName": "travel2.repository",
      "className": "TripRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "Trip",
      "methodName": "findByTripId",
      "className": "TripRepository",
      "packageName": "travel2.repository",
      "methodId": "travel2.repository.TripRepository.findByTripId",
      "classId": "travel2.repository.TripRepository",
      "line": 13,
      "msArgumentList": [
        {
          "returnType": "TripId"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "classId": "travel.controller.TravelController",
      "packageName": "travel.controller",
      "className": "TravelController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "returnType": "HttpEntity",
      "methodName": "retrieve",
      "className": "TravelController",
      "packageName": "travel.controller",
      "methodId": "travel.controller.TravelController.retrieve",
      "classId": "travel.controller.TravelController",
      "line": 75,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/trips/{tripId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "parentPackageName": "travel.controller",
      "parentClassName": "TravelController",
      "parentMethodName": "retrieve",
      "parentClassId": "travel.controller.TravelController",
      "lineNumber": 80,
      "calledMethodName": "retrieve",
      "calledServiceId": "travelService",
      "statementDeclaration": "travelService.retrieve(tripId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "fieldClass": "TravelService",
      "fieldVariable": "travelService",
      "parentMethod": {
        "parentClassName": "TravelController",
        "parentPackageName": "travel.controller"
      },
      "line": 26
    },
    "msService": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "classId": "travel.service.TravelServiceImpl",
      "packageName": "travel.service",
      "className": "TravelServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "returnType": "Response",
      "methodName": "retrieve",
      "className": "TravelServiceImpl",
      "packageName": "travel.service",
      "methodId": "travel.service.TravelServiceImpl.retrieve",
      "classId": "travel.service.TravelServiceImpl",
      "line": 114,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "parentPackageName": "travel.service",
      "parentClassName": "TravelServiceImpl",
      "parentMethodName": "retrieve",
      "parentClassId": "travel.service.TravelServiceImpl",
      "lineNumber": 117,
      "calledMethodName": "findByTripId",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findByTripId(ti)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "fieldClass": "TripRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "TravelServiceImpl",
        "parentPackageName": "travel.service"
      },
      "line": 29
    },
    "msRepository": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.repository.TripRepository",
      "packageName": "travel2.repository",
      "className": "TripRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "Trip",
      "methodName": "findByTripId",
      "className": "TripRepository",
      "packageName": "travel2.repository",
      "methodId": "travel2.repository.TripRepository.findByTripId",
      "classId": "travel2.repository.TripRepository",
      "line": 13,
      "msArgumentList": [
        {
          "returnType": "TripId"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "classId": "travel.controller.TravelController",
      "packageName": "travel.controller",
      "className": "TravelController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "returnType": "HttpEntity",
      "methodName": "updateTrip",
      "className": "TravelController",
      "packageName": "travel.controller",
      "methodId": "travel.controller.TravelController.updateTrip",
      "classId": "travel.controller.TravelController",
      "line": 83,
      "msArgumentList": [
        {
          "returnType": "TravelInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PutMapping",
          "key": "value",
          "value": "\"/trips\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "parentPackageName": "travel.controller",
      "parentClassName": "TravelController",
      "parentMethodName": "updateTrip",
      "parentClassId": "travel.controller.TravelController",
      "lineNumber": 88,
      "calledMethodName": "update",
      "calledServiceId": "travelService",
      "statementDeclaration": "travelService.update(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "fieldClass": "TravelService",
      "fieldVariable": "travelService",
      "parentMethod": {
        "parentClassName": "TravelController",
        "parentPackageName": "travel.controller"
      },
      "line": 26
    },
    "msService": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "classId": "travel.service.TravelServiceImpl",
      "packageName": "travel.service",
      "className": "TravelServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "returnType": "Response",
      "methodName": "update",
      "className": "TravelServiceImpl",
      "packageName": "travel.service",
      "methodId": "travel.service.TravelServiceImpl.update",
      "classId": "travel.service.TravelServiceImpl",
      "line": 126,
      "msArgumentList": [
        {
          "returnType": "TravelInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "parentPackageName": "travel.service",
      "parentClassName": "TravelServiceImpl",
      "parentMethodName": "update",
      "parentClassId": "travel.service.TravelServiceImpl",
      "lineNumber": 129,
      "calledMethodName": "findByTripId",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findByTripId(ti)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "fieldClass": "TripRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "TravelServiceImpl",
        "parentPackageName": "travel.service"
      },
      "line": 29
    },
    "msRepository": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.repository.TripRepository",
      "packageName": "travel2.repository",
      "className": "TripRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "Trip",
      "methodName": "findByTripId",
      "className": "TripRepository",
      "packageName": "travel2.repository",
      "methodId": "travel2.repository.TripRepository.findByTripId",
      "classId": "travel2.repository.TripRepository",
      "line": 13,
      "msArgumentList": [
        {
          "returnType": "TripId"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "classId": "travel.controller.TravelController",
      "packageName": "travel.controller",
      "className": "TravelController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "returnType": "HttpEntity",
      "methodName": "deleteTrip",
      "className": "TravelController",
      "packageName": "travel.controller",
      "methodId": "travel.controller.TravelController.deleteTrip",
      "classId": "travel.controller.TravelController",
      "line": 91,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "DeleteMapping",
          "key": "value",
          "value": "\"/trips/{tripId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "parentPackageName": "travel.controller",
      "parentClassName": "TravelController",
      "parentMethodName": "deleteTrip",
      "parentClassId": "travel.controller.TravelController",
      "lineNumber": 96,
      "calledMethodName": "delete",
      "calledServiceId": "travelService",
      "statementDeclaration": "travelService.delete(tripId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "fieldClass": "TravelService",
      "fieldVariable": "travelService",
      "parentMethod": {
        "parentClassName": "TravelController",
        "parentPackageName": "travel.controller"
      },
      "line": 26
    },
    "msService": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "classId": "travel.service.TravelServiceImpl",
      "packageName": "travel.service",
      "className": "TravelServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "returnType": "Response",
      "methodName": "delete",
      "className": "TravelServiceImpl",
      "packageName": "travel.service",
      "methodId": "travel.service.TravelServiceImpl.delete",
      "classId": "travel.service.TravelServiceImpl",
      "line": 141,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "parentPackageName": "travel.service",
      "parentClassName": "TravelServiceImpl",
      "parentMethodName": "delete",
      "parentClassId": "travel.service.TravelServiceImpl",
      "lineNumber": 144,
      "calledMethodName": "findByTripId",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findByTripId(ti)"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "fieldClass": "TripRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "TravelServiceImpl",
        "parentPackageName": "travel.service"
      },
      "line": 29
    },
    "msRepository": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.repository.TripRepository",
      "packageName": "travel2.repository",
      "className": "TripRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "Trip",
      "methodName": "findByTripId",
      "className": "TripRepository",
      "packageName": "travel2.repository",
      "methodId": "travel2.repository.TripRepository.findByTripId",
      "classId": "travel2.repository.TripRepository",
      "line": 13,
      "msArgumentList": [
        {
          "returnType": "TripId"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "classId": "travel.controller.TravelController",
      "packageName": "travel.controller",
      "className": "TravelController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "returnType": "HttpEntity",
      "methodName": "queryInfo",
      "className": "TravelController",
      "packageName": "travel.controller",
      "methodId": "travel.controller.TravelController.queryInfo",
      "classId": "travel.controller.TravelController",
      "line": 106,
      "msArgumentList": [
        {
          "returnType": "TripInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/trips/left\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "parentPackageName": "travel.controller",
      "parentClassName": "TravelController",
      "parentMethodName": "queryInfo",
      "parentClassId": "travel.controller.TravelController",
      "lineNumber": 117,
      "calledMethodName": "query",
      "calledServiceId": "travelService",
      "statementDeclaration": "travelService.query(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "fieldClass": "TravelService",
      "fieldVariable": "travelService",
      "parentMethod": {
        "parentClassName": "TravelController",
        "parentPackageName": "travel.controller"
      },
      "line": 26
    },
    "msService": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "classId": "travel.service.TravelServiceImpl",
      "packageName": "travel.service",
      "className": "TravelServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "returnType": "Response",
      "methodName": "query",
      "className": "TravelServiceImpl",
      "packageName": "travel.service",
      "methodId": "travel.service.TravelServiceImpl.query",
      "classId": "travel.service.TravelServiceImpl",
      "line": 153,
      "msArgumentList": [
        {
          "returnType": "TripInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "parentPackageName": "travel.service",
      "parentClassName": "TravelServiceImpl",
      "parentMethodName": "query",
      "parentClassId": "travel.service.TravelServiceImpl",
      "lineNumber": 166,
      "calledMethodName": "findAll",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findAll()"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "fieldClass": "TripRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "TravelServiceImpl",
        "parentPackageName": "travel.service"
      },
      "line": 29
    },
    "msRepository": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.repository.TripRepository",
      "packageName": "travel2.repository",
      "className": "TripRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "ArrayList\u003cTrip\u003e",
      "methodName": "findAll",
      "className": "TripRepository",
      "packageName": "travel2.repository",
      "methodId": "travel2.repository.TripRepository.findAll",
      "classId": "travel2.repository.TripRepository",
      "line": 17,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "classId": "travel.controller.TravelController",
      "packageName": "travel.controller",
      "className": "TravelController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "returnType": "HttpEntity",
      "methodName": "queryInfoInparallel",
      "className": "TravelController",
      "packageName": "travel.controller",
      "methodId": "travel.controller.TravelController.queryInfoInparallel",
      "classId": "travel.controller.TravelController",
      "line": 127,
      "msArgumentList": [
        {
          "returnType": "TripInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/trips/left_parallel\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "parentPackageName": "travel.controller",
      "parentClassName": "TravelController",
      "parentMethodName": "queryInfoInparallel",
      "parentClassId": "travel.controller.TravelController",
      "lineNumber": 138,
      "calledMethodName": "queryInParallel",
      "calledServiceId": "travelService",
      "statementDeclaration": "travelService.queryInParallel(info, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "fieldClass": "TravelService",
      "fieldVariable": "travelService",
      "parentMethod": {
        "parentClassName": "TravelController",
        "parentPackageName": "travel.controller"
      },
      "line": 26
    },
    "msService": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "classId": "travel.service.TravelServiceImpl",
      "packageName": "travel.service",
      "className": "TravelServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "returnType": "Response",
      "methodName": "queryInParallel",
      "className": "TravelServiceImpl",
      "packageName": "travel.service",
      "methodId": "travel.service.TravelServiceImpl.queryInParallel",
      "classId": "travel.service.TravelServiceImpl",
      "line": 225,
      "msArgumentList": [
        {
          "returnType": "TripInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "parentPackageName": "travel.service",
      "parentClassName": "TravelServiceImpl",
      "parentMethodName": "queryInParallel",
      "parentClassId": "travel.service.TravelServiceImpl",
      "lineNumber": 237,
      "calledMethodName": "findAll",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findAll()"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "fieldClass": "TripRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "TravelServiceImpl",
        "parentPackageName": "travel.service"
      },
      "line": 29
    },
    "msRepository": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.repository.TripRepository",
      "packageName": "travel2.repository",
      "className": "TripRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "ArrayList\u003cTrip\u003e",
      "methodName": "findAll",
      "className": "TripRepository",
      "packageName": "travel2.repository",
      "methodId": "travel2.repository.TripRepository.findAll",
      "classId": "travel2.repository.TripRepository",
      "line": 17,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "classId": "travel.controller.TravelController",
      "packageName": "travel.controller",
      "className": "TravelController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "returnType": "HttpEntity",
      "methodName": "getTripAllDetailInfo",
      "className": "TravelController",
      "packageName": "travel.controller",
      "methodId": "travel.controller.TravelController.getTripAllDetailInfo",
      "classId": "travel.controller.TravelController",
      "line": 148,
      "msArgumentList": [
        {
          "returnType": "TripAllDetailInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/trip_detail\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "parentPackageName": "travel.controller",
      "parentClassName": "TravelController",
      "parentMethodName": "getTripAllDetailInfo",
      "parentClassId": "travel.controller.TravelController",
      "lineNumber": 154,
      "calledMethodName": "getTripAllDetailInfo",
      "calledServiceId": "travelService",
      "statementDeclaration": "travelService.getTripAllDetailInfo(gtdi, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "fieldClass": "TravelService",
      "fieldVariable": "travelService",
      "parentMethod": {
        "parentClassName": "TravelController",
        "parentPackageName": "travel.controller"
      },
      "line": 26
    },
    "msService": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "classId": "travel.service.TravelServiceImpl",
      "packageName": "travel.service",
      "className": "TravelServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "returnType": "Response",
      "methodName": "getTripAllDetailInfo",
      "className": "TravelServiceImpl",
      "packageName": "travel.service",
      "methodId": "travel.service.TravelServiceImpl.getTripAllDetailInfo",
      "classId": "travel.service.TravelServiceImpl",
      "line": 264,
      "msArgumentList": [
        {
          "returnType": "TripAllDetailInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "parentPackageName": "travel.service",
      "parentClassName": "TravelServiceImpl",
      "parentMethodName": "getTripAllDetailInfo",
      "parentClassId": "travel.service.TravelServiceImpl",
      "lineNumber": 268,
      "calledMethodName": "findByTripId",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findByTripId(new TripId(gtdi.getTripId()))"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "fieldClass": "TripRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "TravelServiceImpl",
        "parentPackageName": "travel.service"
      },
      "line": 29
    },
    "msRepository": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.repository.TripRepository",
      "packageName": "travel2.repository",
      "className": "TripRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "Trip",
      "methodName": "findByTripId",
      "className": "TripRepository",
      "packageName": "travel2.repository",
      "methodId": "travel2.repository.TripRepository.findByTripId",
      "classId": "travel2.repository.TripRepository",
      "line": 13,
      "msArgumentList": [
        {
          "returnType": "TripId"
        }
      ],
      "msAnnotations": []
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "classId": "travel.controller.TravelController",
      "packageName": "travel.controller",
      "className": "TravelController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "returnType": "HttpEntity",
      "methodName": "queryAll",
      "className": "TravelController",
      "packageName": "travel.controller",
      "methodId": "travel.controller.TravelController.queryAll",
      "classId": "travel.controller.TravelController",
      "line": 157,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/trips\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "parentPackageName": "travel.controller",
      "parentClassName": "TravelController",
      "parentMethodName": "queryAll",
      "parentClassId": "travel.controller.TravelController",
      "lineNumber": 162,
      "calledMethodName": "queryAll",
      "calledServiceId": "travelService",
      "statementDeclaration": "travelService.queryAll(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "fieldClass": "TravelService",
      "fieldVariable": "travelService",
      "parentMethod": {
        "parentClassName": "TravelController",
        "parentPackageName": "travel.controller"
      },
      "line": 26
    },
    "msService": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "classId": "travel.service.TravelServiceImpl",
      "packageName": "travel.service",
      "className": "TravelServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "returnType": "Response",
      "methodName": "queryAll",
      "className": "TravelServiceImpl",
      "packageName": "travel.service",
      "methodId": "travel.service.TravelServiceImpl.queryAll",
      "classId": "travel.service.TravelServiceImpl",
      "line": 374,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "parentPackageName": "travel.service",
      "parentClassName": "TravelServiceImpl",
      "parentMethodName": "queryAll",
      "parentClassId": "travel.service.TravelServiceImpl",
      "lineNumber": 376,
      "calledMethodName": "findAll",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findAll()"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "fieldClass": "TripRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "TravelServiceImpl",
        "parentPackageName": "travel.service"
      },
      "line": 29
    },
    "msRepository": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.repository.TripRepository",
      "packageName": "travel2.repository",
      "className": "TripRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "ArrayList\u003cTrip\u003e",
      "methodName": "findAll",
      "className": "TripRepository",
      "packageName": "travel2.repository",
      "methodId": "travel2.repository.TripRepository.findAll",
      "classId": "travel2.repository.TripRepository",
      "line": 17,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "classId": "travel.controller.TravelController",
      "packageName": "travel.controller",
      "className": "TravelController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "returnType": "HttpEntity",
      "methodName": "adminQueryAll",
      "className": "TravelController",
      "packageName": "travel.controller",
      "methodId": "travel.controller.TravelController.adminQueryAll",
      "classId": "travel.controller.TravelController",
      "line": 165,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "value",
          "value": "\"/admin_trip\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "parentPackageName": "travel.controller",
      "parentClassName": "TravelController",
      "parentMethodName": "adminQueryAll",
      "parentClassId": "travel.controller.TravelController",
      "lineNumber": 170,
      "calledMethodName": "adminQueryAll",
      "calledServiceId": "travelService",
      "statementDeclaration": "travelService.adminQueryAll(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/controller/TravelController.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "fieldClass": "TravelService",
      "fieldVariable": "travelService",
      "parentMethod": {
        "parentClassName": "TravelController",
        "parentPackageName": "travel.controller"
      },
      "line": 26
    },
    "msService": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "classId": "travel.service.TravelServiceImpl",
      "packageName": "travel.service",
      "className": "TravelServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "returnType": "Response",
      "methodName": "adminQueryAll",
      "className": "TravelServiceImpl",
      "packageName": "travel.service",
      "methodId": "travel.service.TravelServiceImpl.adminQueryAll",
      "classId": "travel.service.TravelServiceImpl",
      "line": 477,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRepositoryMethodCall": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "parentPackageName": "travel.service",
      "parentClassName": "TravelServiceImpl",
      "parentMethodName": "adminQueryAll",
      "parentClassId": "travel.service.TravelServiceImpl",
      "lineNumber": 479,
      "calledMethodName": "findAll",
      "calledServiceId": "repository",
      "statementDeclaration": "repository.findAll()"
    },
    "msServiceRepositoryField": {
      "msId": {
        "path": "/ts-travel-service/src/main/java/travel/service/TravelServiceImpl.java",
        "directoryName": "/ts-travel-service/src/main/java/travel"
      },
      "fieldClass": "TripRepository",
      "fieldVariable": "repository",
      "parentMethod": {
        "parentClassName": "TravelServiceImpl",
        "parentPackageName": "travel.service"
      },
      "line": 29
    },
    "msRepository": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "classId": "travel2.repository.TripRepository",
      "packageName": "travel2.repository",
      "className": "TripRepository",
      "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
      "msId": {
        "path": "/ts-travel2-service/src/main/java/travel2/repository/TripRepository.java",
        "directoryName": "/ts-travel2-service/src/main/java/travel2"
      },
      "returnType": "ArrayList\u003cTrip\u003e",
      "methodName": "findAll",
      "className": "TripRepository",
      "packageName": "travel2.repository",
      "methodId": "travel2.repository.TripRepository.findAll",
      "classId": "travel2.repository.TripRepository",
      "line": 17,
      "msArgumentList": [],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-order-service/src/main/java/adminorder/controller/AdminOrderController.java",
        "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
      },
      "classId": "adminorder.controller.AdminOrderController",
      "packageName": "adminorder.controller",
      "className": "AdminOrderController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-order-service/src/main/java/adminorder/controller/AdminOrderController.java",
        "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "AdminOrderController",
      "packageName": "adminorder.controller",
      "methodId": "adminorder.controller.AdminOrderController.home",
      "classId": "adminorder.controller.AdminOrderController",
      "line": 26,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-order-service/src/main/java/adminorder/controller/AdminOrderController.java",
        "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
      },
      "classId": "adminorder.controller.AdminOrderController",
      "packageName": "adminorder.controller",
      "className": "AdminOrderController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-order-service/src/main/java/adminorder/controller/AdminOrderController.java",
        "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
      },
      "returnType": "HttpEntity",
      "methodName": "getAllOrders",
      "className": "AdminOrderController",
      "packageName": "adminorder.controller",
      "methodId": "adminorder.controller.AdminOrderController.getAllOrders",
      "classId": "adminorder.controller.AdminOrderController",
      "line": 31,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/adminorder\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-order-service/src/main/java/adminorder/controller/AdminOrderController.java",
        "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
      },
      "parentPackageName": "adminorder.controller",
      "parentClassName": "AdminOrderController",
      "parentMethodName": "getAllOrders",
      "parentClassId": "adminorder.controller.AdminOrderController",
      "lineNumber": 35,
      "calledMethodName": "getAllOrders",
      "calledServiceId": "adminOrderService",
      "statementDeclaration": "adminOrderService.getAllOrders(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-order-service/src/main/java/adminorder/controller/AdminOrderController.java",
        "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
      },
      "fieldClass": "AdminOrderService",
      "fieldVariable": "adminOrderService",
      "parentMethod": {
        "parentClassName": "AdminOrderController",
        "parentPackageName": "adminorder.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-order-service/src/main/java/adminorder/service/AdminOrderServiceImpl.java",
        "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
      },
      "classId": "adminorder.service.AdminOrderServiceImpl",
      "packageName": "adminorder.service",
      "className": "AdminOrderServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-order-service/src/main/java/adminorder/service/AdminOrderServiceImpl.java",
        "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
      },
      "returnType": "Response",
      "methodName": "getAllOrders",
      "className": "AdminOrderServiceImpl",
      "packageName": "adminorder.service",
      "methodId": "adminorder.service.AdminOrderServiceImpl.getAllOrders",
      "classId": "adminorder.service.AdminOrderServiceImpl",
      "line": 27,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "api": "\"http://ts-order-service:12031/api/v1/orderservice/order\"",
        "httpMethod": "GET",
        "returnType": "ArrayList\u003cOrder\u003e",
        "msId": {
          "path": "/ts-admin-order-service/src/main/java/adminorder/service/AdminOrderServiceImpl.java",
          "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
        },
        "parentPackageName": "adminorder.service",
        "parentClassName": "AdminOrderServiceImpl",
        "parentMethodName": "getAllOrders",
        "parentClassId": "adminorder.service.AdminOrderServiceImpl",
        "lineNumber": 35,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-order-service:12031/api/v1/orderservice/order\", HttpMethod.GET, requestEntity, new ParameterizedTypeReference\u003cResponse\u003cArrayList\u003cOrder\u003e\u003e\u003e() {\n})"
      },
      {
        "api": "\"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther\"",
        "httpMethod": "GET",
        "returnType": "ArrayList\u003cOrder\u003e",
        "msId": {
          "path": "/ts-admin-order-service/src/main/java/adminorder/service/AdminOrderServiceImpl.java",
          "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
        },
        "parentPackageName": "adminorder.service",
        "parentClassName": "AdminOrderServiceImpl",
        "parentMethodName": "getAllOrders",
        "parentClassId": "adminorder.service.AdminOrderServiceImpl",
        "lineNumber": 52,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther\", HttpMethod.GET, requestEntity2, new ParameterizedTypeReference\u003cResponse\u003cArrayList\u003cOrder\u003e\u003e\u003e() {\n})"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-order-service/src/main/java/adminorder/controller/AdminOrderController.java",
        "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
      },
      "classId": "adminorder.controller.AdminOrderController",
      "packageName": "adminorder.controller",
      "className": "AdminOrderController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-order-service/src/main/java/adminorder/controller/AdminOrderController.java",
        "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
      },
      "returnType": "HttpEntity",
      "methodName": "addOrder",
      "className": "AdminOrderController",
      "packageName": "adminorder.controller",
      "methodId": "adminorder.controller.AdminOrderController.addOrder",
      "classId": "adminorder.controller.AdminOrderController",
      "line": 38,
      "msArgumentList": [
        {
          "returnType": "Order"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/adminorder\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-order-service/src/main/java/adminorder/controller/AdminOrderController.java",
        "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
      },
      "parentPackageName": "adminorder.controller",
      "parentClassName": "AdminOrderController",
      "parentMethodName": "addOrder",
      "parentClassId": "adminorder.controller.AdminOrderController",
      "lineNumber": 41,
      "calledMethodName": "addOrder",
      "calledServiceId": "adminOrderService",
      "statementDeclaration": "adminOrderService.addOrder(request, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-order-service/src/main/java/adminorder/controller/AdminOrderController.java",
        "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
      },
      "fieldClass": "AdminOrderService",
      "fieldVariable": "adminOrderService",
      "parentMethod": {
        "parentClassName": "AdminOrderController",
        "parentPackageName": "adminorder.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-order-service/src/main/java/adminorder/service/AdminOrderServiceImpl.java",
        "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
      },
      "classId": "adminorder.service.AdminOrderServiceImpl",
      "packageName": "adminorder.service",
      "className": "AdminOrderServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-order-service/src/main/java/adminorder/service/AdminOrderServiceImpl.java",
        "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
      },
      "returnType": "Response",
      "methodName": "addOrder",
      "className": "AdminOrderServiceImpl",
      "packageName": "adminorder.service",
      "methodId": "adminorder.service.AdminOrderServiceImpl.addOrder",
      "classId": "adminorder.service.AdminOrderServiceImpl",
      "line": 130,
      "msArgumentList": [
        {
          "returnType": "Order"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "api": "\"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther/admin\"",
        "httpMethod": "POST",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-order-service/src/main/java/adminorder/service/AdminOrderServiceImpl.java",
          "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
        },
        "parentPackageName": "adminorder.service",
        "parentClassName": "AdminOrderServiceImpl",
        "parentMethodName": "addOrder",
        "parentClassId": "adminorder.service.AdminOrderServiceImpl",
        "lineNumber": 147,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther/admin\", HttpMethod.POST, requestEntity, Response.class)"
      },
      {
        "api": "\"http://ts-order-service:12031/api/v1/orderservice/order/admin\"",
        "httpMethod": "POST",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-order-service/src/main/java/adminorder/service/AdminOrderServiceImpl.java",
          "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
        },
        "parentPackageName": "adminorder.service",
        "parentClassName": "AdminOrderServiceImpl",
        "parentMethodName": "addOrder",
        "parentClassId": "adminorder.service.AdminOrderServiceImpl",
        "lineNumber": 137,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-order-service:12031/api/v1/orderservice/order/admin\", HttpMethod.POST, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-order-service/src/main/java/adminorder/controller/AdminOrderController.java",
        "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
      },
      "classId": "adminorder.controller.AdminOrderController",
      "packageName": "adminorder.controller",
      "className": "AdminOrderController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-order-service/src/main/java/adminorder/controller/AdminOrderController.java",
        "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
      },
      "returnType": "HttpEntity",
      "methodName": "updateOrder",
      "className": "AdminOrderController",
      "packageName": "adminorder.controller",
      "methodId": "adminorder.controller.AdminOrderController.updateOrder",
      "classId": "adminorder.controller.AdminOrderController",
      "line": 44,
      "msArgumentList": [
        {
          "returnType": "Order"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PutMapping",
          "key": "value",
          "value": "\"/adminorder\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-order-service/src/main/java/adminorder/controller/AdminOrderController.java",
        "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
      },
      "parentPackageName": "adminorder.controller",
      "parentClassName": "AdminOrderController",
      "parentMethodName": "updateOrder",
      "parentClassId": "adminorder.controller.AdminOrderController",
      "lineNumber": 47,
      "calledMethodName": "updateOrder",
      "calledServiceId": "adminOrderService",
      "statementDeclaration": "adminOrderService.updateOrder(request, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-order-service/src/main/java/adminorder/controller/AdminOrderController.java",
        "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
      },
      "fieldClass": "AdminOrderService",
      "fieldVariable": "adminOrderService",
      "parentMethod": {
        "parentClassName": "AdminOrderController",
        "parentPackageName": "adminorder.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-order-service/src/main/java/adminorder/service/AdminOrderServiceImpl.java",
        "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
      },
      "classId": "adminorder.service.AdminOrderServiceImpl",
      "packageName": "adminorder.service",
      "className": "AdminOrderServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-order-service/src/main/java/adminorder/service/AdminOrderServiceImpl.java",
        "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
      },
      "returnType": "Response",
      "methodName": "updateOrder",
      "className": "AdminOrderServiceImpl",
      "packageName": "adminorder.service",
      "methodId": "adminorder.service.AdminOrderServiceImpl.updateOrder",
      "classId": "adminorder.service.AdminOrderServiceImpl",
      "line": 100,
      "msArgumentList": [
        {
          "returnType": "Order"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "api": "\"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther/admin\"",
        "httpMethod": "PUT",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-order-service/src/main/java/adminorder/service/AdminOrderServiceImpl.java",
          "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
        },
        "parentPackageName": "adminorder.service",
        "parentClassName": "AdminOrderServiceImpl",
        "parentMethodName": "updateOrder",
        "parentClassId": "adminorder.service.AdminOrderServiceImpl",
        "lineNumber": 119,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther/admin\", HttpMethod.PUT, requestEntity, Response.class)"
      },
      {
        "api": "\"http://ts-order-service:12031/api/v1/orderservice/order/admin\"",
        "httpMethod": "PUT",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-order-service/src/main/java/adminorder/service/AdminOrderServiceImpl.java",
          "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
        },
        "parentPackageName": "adminorder.service",
        "parentClassName": "AdminOrderServiceImpl",
        "parentMethodName": "updateOrder",
        "parentClassId": "adminorder.service.AdminOrderServiceImpl",
        "lineNumber": 109,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-order-service:12031/api/v1/orderservice/order/admin\", HttpMethod.PUT, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-order-service/src/main/java/adminorder/controller/AdminOrderController.java",
        "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
      },
      "classId": "adminorder.controller.AdminOrderController",
      "packageName": "adminorder.controller",
      "className": "AdminOrderController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-order-service/src/main/java/adminorder/controller/AdminOrderController.java",
        "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
      },
      "returnType": "HttpEntity",
      "methodName": "deleteOrder",
      "className": "AdminOrderController",
      "packageName": "adminorder.controller",
      "methodId": "adminorder.controller.AdminOrderController.deleteOrder",
      "classId": "adminorder.controller.AdminOrderController",
      "line": 50,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "DeleteMapping",
          "key": "value",
          "value": "\"/adminorder/{orderId}/{trainNumber}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-order-service/src/main/java/adminorder/controller/AdminOrderController.java",
        "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
      },
      "parentPackageName": "adminorder.controller",
      "parentClassName": "AdminOrderController",
      "parentMethodName": "deleteOrder",
      "parentClassId": "adminorder.controller.AdminOrderController",
      "lineNumber": 53,
      "calledMethodName": "deleteOrder",
      "calledServiceId": "adminOrderService",
      "statementDeclaration": "adminOrderService.deleteOrder(orderId, trainNumber, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-order-service/src/main/java/adminorder/controller/AdminOrderController.java",
        "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
      },
      "fieldClass": "AdminOrderService",
      "fieldVariable": "adminOrderService",
      "parentMethod": {
        "parentClassName": "AdminOrderController",
        "parentPackageName": "adminorder.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-order-service/src/main/java/adminorder/service/AdminOrderServiceImpl.java",
        "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
      },
      "classId": "adminorder.service.AdminOrderServiceImpl",
      "packageName": "adminorder.service",
      "className": "AdminOrderServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-order-service/src/main/java/adminorder/service/AdminOrderServiceImpl.java",
        "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
      },
      "returnType": "Response",
      "methodName": "deleteOrder",
      "className": "AdminOrderServiceImpl",
      "packageName": "adminorder.service",
      "methodId": "adminorder.service.AdminOrderServiceImpl.deleteOrder",
      "classId": "adminorder.service.AdminOrderServiceImpl",
      "line": 72,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "api": "\"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther/\" + orderId",
        "httpMethod": "DELETE",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-order-service/src/main/java/adminorder/service/AdminOrderServiceImpl.java",
          "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
        },
        "parentPackageName": "adminorder.service",
        "parentClassName": "AdminOrderServiceImpl",
        "parentMethodName": "deleteOrder",
        "parentClassId": "adminorder.service.AdminOrderServiceImpl",
        "lineNumber": 88,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-order-other-service:12032/api/v1/orderOtherService/orderOther/\" + orderId, HttpMethod.DELETE, requestEntity, Response.class)"
      },
      {
        "api": "\"http://ts-order-service:12031/api/v1/orderservice/order/\" + orderId",
        "httpMethod": "DELETE",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-order-service/src/main/java/adminorder/service/AdminOrderServiceImpl.java",
          "directoryName": "/ts-admin-order-service/src/main/java/adminorder"
        },
        "parentPackageName": "adminorder.service",
        "parentClassName": "AdminOrderServiceImpl",
        "parentMethodName": "deleteOrder",
        "parentClassId": "adminorder.service.AdminOrderServiceImpl",
        "lineNumber": 78,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-order-service:12031/api/v1/orderservice/order/\" + orderId, HttpMethod.DELETE, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-travel-service/src/main/java/admintravel/controller/AdminTravelController.java",
        "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
      },
      "classId": "admintravel.controller.AdminTravelController",
      "packageName": "admintravel.controller",
      "className": "AdminTravelController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-travel-service/src/main/java/admintravel/controller/AdminTravelController.java",
        "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "AdminTravelController",
      "packageName": "admintravel.controller",
      "methodId": "admintravel.controller.AdminTravelController.home",
      "classId": "admintravel.controller.AdminTravelController",
      "line": 25,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-travel-service/src/main/java/admintravel/controller/AdminTravelController.java",
        "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
      },
      "classId": "admintravel.controller.AdminTravelController",
      "packageName": "admintravel.controller",
      "className": "AdminTravelController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-travel-service/src/main/java/admintravel/controller/AdminTravelController.java",
        "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
      },
      "returnType": "HttpEntity",
      "methodName": "getAllTravels",
      "className": "AdminTravelController",
      "packageName": "admintravel.controller",
      "methodId": "admintravel.controller.AdminTravelController.getAllTravels",
      "classId": "admintravel.controller.AdminTravelController",
      "line": 30,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/admintravel\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-travel-service/src/main/java/admintravel/controller/AdminTravelController.java",
        "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
      },
      "parentPackageName": "admintravel.controller",
      "parentClassName": "AdminTravelController",
      "parentMethodName": "getAllTravels",
      "parentClassId": "admintravel.controller.AdminTravelController",
      "lineNumber": 34,
      "calledMethodName": "getAllTravels",
      "calledServiceId": "adminTravelService",
      "statementDeclaration": "adminTravelService.getAllTravels(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-travel-service/src/main/java/admintravel/controller/AdminTravelController.java",
        "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
      },
      "fieldClass": "AdminTravelService",
      "fieldVariable": "adminTravelService",
      "parentMethod": {
        "parentClassName": "AdminTravelController",
        "parentPackageName": "admintravel.controller"
      },
      "line": 20
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-travel-service/src/main/java/admintravel/service/AdminTravelServiceImpl.java",
        "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
      },
      "classId": "admintravel.service.AdminTravelServiceImpl",
      "packageName": "admintravel.service",
      "className": "AdminTravelServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-travel-service/src/main/java/admintravel/service/AdminTravelServiceImpl.java",
        "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
      },
      "returnType": "Response",
      "methodName": "getAllTravels",
      "className": "AdminTravelServiceImpl",
      "packageName": "admintravel.service",
      "methodId": "admintravel.service.AdminTravelServiceImpl.getAllTravels",
      "classId": "admintravel.service.AdminTravelServiceImpl",
      "line": 29,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "api": "\"http://ts-travel-service:12346/api/v1/travelservice/admin_trip\"",
        "httpMethod": "GET",
        "returnType": "ArrayList\u003cAdminTrip\u003e",
        "msId": {
          "path": "/ts-admin-travel-service/src/main/java/admintravel/service/AdminTravelServiceImpl.java",
          "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
        },
        "parentPackageName": "admintravel.service",
        "parentClassName": "AdminTravelServiceImpl",
        "parentMethodName": "getAllTravels",
        "parentClassId": "admintravel.service.AdminTravelServiceImpl",
        "lineNumber": 36,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-travel-service:12346/api/v1/travelservice/admin_trip\", HttpMethod.GET, requestEntity, new ParameterizedTypeReference\u003cResponse\u003cArrayList\u003cAdminTrip\u003e\u003e\u003e() {\n})"
      },
      {
        "api": "\"http://ts-travel2-service:16346/api/v1/travel2service/admin_trip\"",
        "httpMethod": "GET",
        "returnType": "ArrayList\u003cAdminTrip\u003e",
        "msId": {
          "path": "/ts-admin-travel-service/src/main/java/admintravel/service/AdminTravelServiceImpl.java",
          "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
        },
        "parentPackageName": "admintravel.service",
        "parentClassName": "AdminTravelServiceImpl",
        "parentMethodName": "getAllTravels",
        "parentClassId": "admintravel.service.AdminTravelServiceImpl",
        "lineNumber": 53,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-travel2-service:16346/api/v1/travel2service/admin_trip\", HttpMethod.GET, requestEntity2, new ParameterizedTypeReference\u003cResponse\u003cArrayList\u003cAdminTrip\u003e\u003e\u003e() {\n})"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-travel-service/src/main/java/admintravel/controller/AdminTravelController.java",
        "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
      },
      "classId": "admintravel.controller.AdminTravelController",
      "packageName": "admintravel.controller",
      "className": "AdminTravelController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-travel-service/src/main/java/admintravel/controller/AdminTravelController.java",
        "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
      },
      "returnType": "HttpEntity",
      "methodName": "addTravel",
      "className": "AdminTravelController",
      "packageName": "admintravel.controller",
      "methodId": "admintravel.controller.AdminTravelController.addTravel",
      "classId": "admintravel.controller.AdminTravelController",
      "line": 37,
      "msArgumentList": [
        {
          "returnType": "TravelInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/admintravel\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-travel-service/src/main/java/admintravel/controller/AdminTravelController.java",
        "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
      },
      "parentPackageName": "admintravel.controller",
      "parentClassName": "AdminTravelController",
      "parentMethodName": "addTravel",
      "parentClassId": "admintravel.controller.AdminTravelController",
      "lineNumber": 41,
      "calledMethodName": "addTravel",
      "calledServiceId": "adminTravelService",
      "statementDeclaration": "adminTravelService.addTravel(request, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-travel-service/src/main/java/admintravel/controller/AdminTravelController.java",
        "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
      },
      "fieldClass": "AdminTravelService",
      "fieldVariable": "adminTravelService",
      "parentMethod": {
        "parentClassName": "AdminTravelController",
        "parentPackageName": "admintravel.controller"
      },
      "line": 20
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-travel-service/src/main/java/admintravel/service/AdminTravelServiceImpl.java",
        "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
      },
      "classId": "admintravel.service.AdminTravelServiceImpl",
      "packageName": "admintravel.service",
      "className": "AdminTravelServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-travel-service/src/main/java/admintravel/service/AdminTravelServiceImpl.java",
        "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
      },
      "returnType": "Response",
      "methodName": "addTravel",
      "className": "AdminTravelServiceImpl",
      "packageName": "admintravel.service",
      "methodId": "admintravel.service.AdminTravelServiceImpl.addTravel",
      "classId": "admintravel.service.AdminTravelServiceImpl",
      "line": 73,
      "msArgumentList": [
        {
          "returnType": "TravelInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "httpMethod": "POST",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-travel-service/src/main/java/admintravel/service/AdminTravelServiceImpl.java",
          "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
        },
        "parentPackageName": "admintravel.service",
        "parentClassName": "AdminTravelServiceImpl",
        "parentMethodName": "addTravel",
        "parentClassId": "admintravel.service.AdminTravelServiceImpl",
        "lineNumber": 83,
        "statementDeclaration": "restTemplate.exchange(requestUrl, HttpMethod.POST, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-travel-service/src/main/java/admintravel/controller/AdminTravelController.java",
        "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
      },
      "classId": "admintravel.controller.AdminTravelController",
      "packageName": "admintravel.controller",
      "className": "AdminTravelController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-travel-service/src/main/java/admintravel/controller/AdminTravelController.java",
        "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
      },
      "returnType": "HttpEntity",
      "methodName": "updateTravel",
      "className": "AdminTravelController",
      "packageName": "admintravel.controller",
      "methodId": "admintravel.controller.AdminTravelController.updateTravel",
      "classId": "admintravel.controller.AdminTravelController",
      "line": 44,
      "msArgumentList": [
        {
          "returnType": "TravelInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PutMapping",
          "key": "value",
          "value": "\"/admintravel\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-travel-service/src/main/java/admintravel/controller/AdminTravelController.java",
        "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
      },
      "parentPackageName": "admintravel.controller",
      "parentClassName": "AdminTravelController",
      "parentMethodName": "updateTravel",
      "parentClassId": "admintravel.controller.AdminTravelController",
      "lineNumber": 48,
      "calledMethodName": "updateTravel",
      "calledServiceId": "adminTravelService",
      "statementDeclaration": "adminTravelService.updateTravel(request, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-travel-service/src/main/java/admintravel/controller/AdminTravelController.java",
        "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
      },
      "fieldClass": "AdminTravelService",
      "fieldVariable": "adminTravelService",
      "parentMethod": {
        "parentClassName": "AdminTravelController",
        "parentPackageName": "admintravel.controller"
      },
      "line": 20
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-travel-service/src/main/java/admintravel/service/AdminTravelServiceImpl.java",
        "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
      },
      "classId": "admintravel.service.AdminTravelServiceImpl",
      "packageName": "admintravel.service",
      "className": "AdminTravelServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-travel-service/src/main/java/admintravel/service/AdminTravelServiceImpl.java",
        "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
      },
      "returnType": "Response",
      "methodName": "updateTravel",
      "className": "AdminTravelServiceImpl",
      "packageName": "admintravel.service",
      "methodId": "admintravel.service.AdminTravelServiceImpl.updateTravel",
      "classId": "admintravel.service.AdminTravelServiceImpl",
      "line": 99,
      "msArgumentList": [
        {
          "returnType": "TravelInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "httpMethod": "PUT",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-travel-service/src/main/java/admintravel/service/AdminTravelServiceImpl.java",
          "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
        },
        "parentPackageName": "admintravel.service",
        "parentClassName": "AdminTravelServiceImpl",
        "parentMethodName": "updateTravel",
        "parentClassId": "admintravel.service.AdminTravelServiceImpl",
        "lineNumber": 110,
        "statementDeclaration": "restTemplate.exchange(requestUrl, HttpMethod.PUT, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-travel-service/src/main/java/admintravel/controller/AdminTravelController.java",
        "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
      },
      "classId": "admintravel.controller.AdminTravelController",
      "packageName": "admintravel.controller",
      "className": "AdminTravelController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-travel-service/src/main/java/admintravel/controller/AdminTravelController.java",
        "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
      },
      "returnType": "HttpEntity",
      "methodName": "deleteTravel",
      "className": "AdminTravelController",
      "packageName": "admintravel.controller",
      "methodId": "admintravel.controller.AdminTravelController.deleteTravel",
      "classId": "admintravel.controller.AdminTravelController",
      "line": 51,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "DeleteMapping",
          "key": "value",
          "value": "\"/admintravel/{tripId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-travel-service/src/main/java/admintravel/controller/AdminTravelController.java",
        "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
      },
      "parentPackageName": "admintravel.controller",
      "parentClassName": "AdminTravelController",
      "parentMethodName": "deleteTravel",
      "parentClassId": "admintravel.controller.AdminTravelController",
      "lineNumber": 54,
      "calledMethodName": "deleteTravel",
      "calledServiceId": "adminTravelService",
      "statementDeclaration": "adminTravelService.deleteTravel(tripId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-travel-service/src/main/java/admintravel/controller/AdminTravelController.java",
        "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
      },
      "fieldClass": "AdminTravelService",
      "fieldVariable": "adminTravelService",
      "parentMethod": {
        "parentClassName": "AdminTravelController",
        "parentPackageName": "admintravel.controller"
      },
      "line": 20
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-travel-service/src/main/java/admintravel/service/AdminTravelServiceImpl.java",
        "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
      },
      "classId": "admintravel.service.AdminTravelServiceImpl",
      "packageName": "admintravel.service",
      "className": "AdminTravelServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-travel-service/src/main/java/admintravel/service/AdminTravelServiceImpl.java",
        "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
      },
      "returnType": "Response",
      "methodName": "deleteTravel",
      "className": "AdminTravelServiceImpl",
      "packageName": "admintravel.service",
      "methodId": "admintravel.service.AdminTravelServiceImpl.deleteTravel",
      "classId": "admintravel.service.AdminTravelServiceImpl",
      "line": 126,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "httpMethod": "DELETE",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-travel-service/src/main/java/admintravel/service/AdminTravelServiceImpl.java",
          "directoryName": "/ts-admin-travel-service/src/main/java/admintravel"
        },
        "parentPackageName": "admintravel.service",
        "parentClassName": "AdminTravelServiceImpl",
        "parentMethodName": "deleteTravel",
        "parentClassId": "admintravel.service.AdminTravelServiceImpl",
        "lineNumber": 137,
        "statementDeclaration": "restTemplate.exchange(requestUtl, HttpMethod.DELETE, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-route-service/src/main/java/adminroute/controller/AdminRouteController.java",
        "directoryName": "/ts-admin-route-service/src/main/java/adminroute"
      },
      "classId": "adminroute.controller.AdminRouteController",
      "packageName": "adminroute.controller",
      "className": "AdminRouteController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-route-service/src/main/java/adminroute/controller/AdminRouteController.java",
        "directoryName": "/ts-admin-route-service/src/main/java/adminroute"
      },
      "returnType": "String",
      "methodName": "home",
      "className": "AdminRouteController",
      "packageName": "adminroute.controller",
      "methodId": "adminroute.controller.AdminRouteController.home",
      "classId": "adminroute.controller.AdminRouteController",
      "line": 26,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/welcome\""
        }
      ]
    }
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-route-service/src/main/java/adminroute/controller/AdminRouteController.java",
        "directoryName": "/ts-admin-route-service/src/main/java/adminroute"
      },
      "classId": "adminroute.controller.AdminRouteController",
      "packageName": "adminroute.controller",
      "className": "AdminRouteController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-route-service/src/main/java/adminroute/controller/AdminRouteController.java",
        "directoryName": "/ts-admin-route-service/src/main/java/adminroute"
      },
      "returnType": "HttpEntity",
      "methodName": "getAllRoutes",
      "className": "AdminRouteController",
      "packageName": "adminroute.controller",
      "methodId": "adminroute.controller.AdminRouteController.getAllRoutes",
      "classId": "adminroute.controller.AdminRouteController",
      "line": 31,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "CrossOrigin",
          "key": "origins",
          "value": "\"*\""
        },
        {
          "isHttpAnnotation": true,
          "annotationName": "GetMapping",
          "key": "path",
          "value": "\"/adminroute\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-route-service/src/main/java/adminroute/controller/AdminRouteController.java",
        "directoryName": "/ts-admin-route-service/src/main/java/adminroute"
      },
      "parentPackageName": "adminroute.controller",
      "parentClassName": "AdminRouteController",
      "parentMethodName": "getAllRoutes",
      "parentClassId": "adminroute.controller.AdminRouteController",
      "lineNumber": 35,
      "calledMethodName": "getAllRoutes",
      "calledServiceId": "adminRouteService",
      "statementDeclaration": "adminRouteService.getAllRoutes(headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-route-service/src/main/java/adminroute/controller/AdminRouteController.java",
        "directoryName": "/ts-admin-route-service/src/main/java/adminroute"
      },
      "fieldClass": "AdminRouteService",
      "fieldVariable": "adminRouteService",
      "parentMethod": {
        "parentClassName": "AdminRouteController",
        "parentPackageName": "adminroute.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-route-service/src/main/java/adminroute/service/AdminRouteServiceImpl.java",
        "directoryName": "/ts-admin-route-service/src/main/java/adminroute"
      },
      "classId": "adminroute.service.AdminRouteServiceImpl",
      "packageName": "adminroute.service",
      "className": "AdminRouteServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-route-service/src/main/java/adminroute/service/AdminRouteServiceImpl.java",
        "directoryName": "/ts-admin-route-service/src/main/java/adminroute"
      },
      "returnType": "Response",
      "methodName": "getAllRoutes",
      "className": "AdminRouteServiceImpl",
      "packageName": "adminroute.service",
      "methodId": "adminroute.service.AdminRouteServiceImpl.getAllRoutes",
      "classId": "adminroute.service.AdminRouteServiceImpl",
      "line": 24,
      "msArgumentList": [
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "api": "\"http://ts-route-service:11178/api/v1/routeservice/routes\"",
        "httpMethod": "GET",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-route-service/src/main/java/adminroute/service/AdminRouteServiceImpl.java",
          "directoryName": "/ts-admin-route-service/src/main/java/adminroute"
        },
        "parentPackageName": "adminroute.service",
        "parentClassName": "AdminRouteServiceImpl",
        "parentMethodName": "getAllRoutes",
        "parentClassId": "adminroute.service.AdminRouteServiceImpl",
        "lineNumber": 28,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-route-service:11178/api/v1/routeservice/routes\", HttpMethod.GET, requestEntity, Response.class)"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-route-service/src/main/java/adminroute/controller/AdminRouteController.java",
        "directoryName": "/ts-admin-route-service/src/main/java/adminroute"
      },
      "classId": "adminroute.controller.AdminRouteController",
      "packageName": "adminroute.controller",
      "className": "AdminRouteController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-route-service/src/main/java/adminroute/controller/AdminRouteController.java",
        "directoryName": "/ts-admin-route-service/src/main/java/adminroute"
      },
      "returnType": "HttpEntity",
      "methodName": "addRoute",
      "className": "AdminRouteController",
      "packageName": "adminroute.controller",
      "methodId": "adminroute.controller.AdminRouteController.addRoute",
      "classId": "adminroute.controller.AdminRouteController",
      "line": 38,
      "msArgumentList": [
        {
          "returnType": "RouteInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "PostMapping",
          "key": "value",
          "value": "\"/adminroute\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-route-service/src/main/java/adminroute/controller/AdminRouteController.java",
        "directoryName": "/ts-admin-route-service/src/main/java/adminroute"
      },
      "parentPackageName": "adminroute.controller",
      "parentClassName": "AdminRouteController",
      "parentMethodName": "addRoute",
      "parentClassId": "adminroute.controller.AdminRouteController",
      "lineNumber": 42,
      "calledMethodName": "createAndModifyRoute",
      "calledServiceId": "adminRouteService",
      "statementDeclaration": "adminRouteService.createAndModifyRoute(request, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-route-service/src/main/java/adminroute/controller/AdminRouteController.java",
        "directoryName": "/ts-admin-route-service/src/main/java/adminroute"
      },
      "fieldClass": "AdminRouteService",
      "fieldVariable": "adminRouteService",
      "parentMethod": {
        "parentClassName": "AdminRouteController",
        "parentPackageName": "adminroute.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-route-service/src/main/java/adminroute/service/AdminRouteServiceImpl.java",
        "directoryName": "/ts-admin-route-service/src/main/java/adminroute"
      },
      "classId": "adminroute.service.AdminRouteServiceImpl",
      "packageName": "adminroute.service",
      "className": "AdminRouteServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-route-service/src/main/java/adminroute/service/AdminRouteServiceImpl.java",
        "directoryName": "/ts-admin-route-service/src/main/java/adminroute"
      },
      "returnType": "Response",
      "methodName": "createAndModifyRoute",
      "className": "AdminRouteServiceImpl",
      "packageName": "adminroute.service",
      "methodId": "adminroute.service.AdminRouteServiceImpl.createAndModifyRoute",
      "classId": "adminroute.service.AdminRouteServiceImpl",
      "line": 40,
      "msArgumentList": [
        {
          "returnType": "RouteInfo"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "api": "\"http://ts-route-service:11178/api/v1/routeservice/routes\"",
        "httpMethod": "POST",
        "returnType": "Route",
        "msId": {
          "path": "/ts-admin-route-service/src/main/java/adminroute/service/AdminRouteServiceImpl.java",
          "directoryName": "/ts-admin-route-service/src/main/java/adminroute"
        },
        "parentPackageName": "adminroute.service",
        "parentClassName": "AdminRouteServiceImpl",
        "parentMethodName": "createAndModifyRoute",
        "parentClassId": "adminroute.service.AdminRouteServiceImpl",
        "lineNumber": 44,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-route-service:11178/api/v1/routeservice/routes\", HttpMethod.POST, requestEntity, new ParameterizedTypeReference\u003cResponse\u003cRoute\u003e\u003e() {\n})"
      }
    ]
  },
  {
    "msController": {
      "msId": {
        "path": "/ts-admin-route-service/src/main/java/adminroute/controller/AdminRouteController.java",
        "directoryName": "/ts-admin-route-service/src/main/java/adminroute"
      },
      "classId": "adminroute.controller.AdminRouteController",
      "packageName": "adminroute.controller",
      "className": "AdminRouteController",
      "role": "CONTROLLER"
    },
    "msControllerMethod": {
      "msId": {
        "path": "/ts-admin-route-service/src/main/java/adminroute/controller/AdminRouteController.java",
        "directoryName": "/ts-admin-route-service/src/main/java/adminroute"
      },
      "returnType": "HttpEntity",
      "methodName": "deleteRoute",
      "className": "AdminRouteController",
      "packageName": "adminroute.controller",
      "methodId": "adminroute.controller.AdminRouteController.deleteRoute",
      "classId": "adminroute.controller.AdminRouteController",
      "line": 45,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": true,
          "annotationName": "DeleteMapping",
          "key": "value",
          "value": "\"/adminroute/{routeId}\""
        }
      ]
    },
    "msServiceMethodCall": {
      "msId": {
        "path": "/ts-admin-route-service/src/main/java/adminroute/controller/AdminRouteController.java",
        "directoryName": "/ts-admin-route-service/src/main/java/adminroute"
      },
      "parentPackageName": "adminroute.controller",
      "parentClassName": "AdminRouteController",
      "parentMethodName": "deleteRoute",
      "parentClassId": "adminroute.controller.AdminRouteController",
      "lineNumber": 48,
      "calledMethodName": "deleteRoute",
      "calledServiceId": "adminRouteService",
      "statementDeclaration": "adminRouteService.deleteRoute(routeId, headers)"
    },
    "msControllerServiceField": {
      "msId": {
        "path": "/ts-admin-route-service/src/main/java/adminroute/controller/AdminRouteController.java",
        "directoryName": "/ts-admin-route-service/src/main/java/adminroute"
      },
      "fieldClass": "AdminRouteService",
      "fieldVariable": "adminRouteService",
      "parentMethod": {
        "parentClassName": "AdminRouteController",
        "parentPackageName": "adminroute.controller"
      },
      "line": 21
    },
    "msService": {
      "msId": {
        "path": "/ts-admin-route-service/src/main/java/adminroute/service/AdminRouteServiceImpl.java",
        "directoryName": "/ts-admin-route-service/src/main/java/adminroute"
      },
      "classId": "adminroute.service.AdminRouteServiceImpl",
      "packageName": "adminroute.service",
      "className": "AdminRouteServiceImpl",
      "role": "SERVICE"
    },
    "msServiceMethod": {
      "msId": {
        "path": "/ts-admin-route-service/src/main/java/adminroute/service/AdminRouteServiceImpl.java",
        "directoryName": "/ts-admin-route-service/src/main/java/adminroute"
      },
      "returnType": "Response",
      "methodName": "deleteRoute",
      "className": "AdminRouteServiceImpl",
      "packageName": "adminroute.service",
      "methodId": "adminroute.service.AdminRouteServiceImpl.deleteRoute",
      "classId": "adminroute.service.AdminRouteServiceImpl",
      "line": 56,
      "msArgumentList": [
        {
          "returnType": "String"
        },
        {
          "returnType": "HttpHeaders"
        }
      ],
      "msAnnotations": [
        {
          "isHttpAnnotation": false,
          "annotationName": "Override"
        }
      ]
    },
    "msRestCalls": [
      {
        "api": "\"http://ts-route-service:11178/api/v1/routeservice/routes/\" + routeId",
        "httpMethod": "DELETE",
        "returnType": "requestEntity",
        "msId": {
          "path": "/ts-admin-route-service/src/main/java/adminroute/service/AdminRouteServiceImpl.java",
          "directoryName": "/ts-admin-route-service/src/main/java/adminroute"
        },
        "parentPackageName": "adminroute.service",
        "parentClassName": "AdminRouteServiceImpl",
        "parentMethodName": "deleteRoute",
        "parentClassId": "adminroute.service.AdminRouteServiceImpl",
        "lineNumber": 60,
        "statementDeclaration": "restTemplate.exchange(\"http://ts-route-service:11178/api/v1/routeservice/routes/\" + routeId, HttpMethod.DELETE, requestEntity, Response.class)"
      }
    ]
  }
]